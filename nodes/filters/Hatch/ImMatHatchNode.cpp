#include <UI.h>
#include <imgui_json.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include "Hatch_vulkan.h"
#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct HatchNode final : Node
{
    BP_NODE_WITH_NAME(HatchNode, "CrossHatch", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "Filter#Video#Stylization")
    HatchNode(BP* blueprint): Node(blueprint) { m_Name = "CrossHatch"; m_HasCustomLayout = true; m_Skippable = true; }

    ~HatchNode()
    {
        if (m_filter) { delete m_filter; m_filter = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
        m_mutex.lock();
        m_MatOut.SetValue(ImGui::ImMat());
        m_mutex.unlock();
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (m_SpacingIn.IsLinked()) m_spacing = context.GetPinValue<float>(m_SpacingIn);
        if (m_WidthIn.IsLinked()) m_width = context.GetPinValue<int32_t>(m_WidthIn);
        if (!mat_in.empty())
        {
            int gpu = mat_in.device == IM_DD_VULKAN ? mat_in.device_number : ImGui::get_default_gpu_index();
            if (!m_Enabled)
            {
                m_MatOut.SetValue(mat_in);
                return m_Exit;
            }
            if (!m_filter || gpu != m_device)
            {
                if (m_filter) { delete m_filter; m_filter = nullptr; }
                m_filter = new ImGui::Hatch_vulkan(gpu);
            }
            if (!m_filter)
            {
                return {};
            }
            m_device = gpu;
            ImGui::VkMat im_RGB; im_RGB.type = m_mat_data_type == IM_DT_UNDEFINED ? mat_in.type : m_mat_data_type;
            m_NodeTimeMs = m_filter->filter(mat_in, im_RGB, m_spacing, m_width);
            m_MatOut.SetValue(im_RGB);
        }
        return m_Exit;
    }

    void WasUnlinked(const Pin& receiver, const Pin& provider) override
    {
        if (receiver.m_ID == m_SpacingIn.m_ID)
        {
            m_SpacingIn.SetValue(m_spacing);
        }
        if (receiver.m_ID == m_WidthIn.m_ID)
        {
            m_WidthIn.SetValue(m_width);
        }
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve * key, bool embedded) override
    {
        ImGui::SetCurrentContext(ctx);
        float setting_offset = 320;
        if (!embedded)
        {
            ImVec2 sub_window_pos = ImGui::GetCursorScreenPos();
            ImVec2 sub_window_size = ImGui::GetWindowSize();
            setting_offset = sub_window_size.x - 80;
        }
        bool changed = false;
        float _spacing = m_spacing;
        float _width = m_width;
        static ImGuiSliderFlags flags = ImGuiSliderFlags_AlwaysClamp | ImGuiSliderFlags_Stick;
        ImGui::PushStyleColor(ImGuiCol_Button, 0);
        ImGui::PushItemWidth(200);
        ImGui::BeginDisabled(!m_Enabled || m_SpacingIn.IsLinked());
        ImGui::SliderFloat("Spacing##Hatch", &_spacing, 0.0f, 0.1f, "%.3f", flags);
        ImGui::SameLine(setting_offset);  if (ImGui::Button(ICON_RESET "##reset_spacing##Hatch")) { _spacing = 0.01f; changed = true; }
        ImGui::ShowTooltipOnHover("Reset");
        ImGui::EndDisabled();
        ImGui::BeginDisabled(!m_Enabled);
        if (key) ImGui::ImCurveCheckEditKeyWithIDByDim("##add_curve_spacing##Hatch", key, ImGui::ImCurveEdit::DIM_X, m_SpacingIn.IsLinked(), "Spacing##Hatch@" + std::to_string(m_ID), 0.01f, 1.f, 0.4f, m_SpacingIn.m_ID);
        ImGui::EndDisabled();

        ImGui::BeginDisabled(!m_Enabled || m_WidthIn.IsLinked());
        ImGui::SliderFloat("Width##Hatch", &_width, 0.f, 0.01f, "%.3f", flags);
        ImGui::SameLine(setting_offset);  if (ImGui::Button(ICON_RESET "##reset_width##Hatch")) { _width = 0.002f; changed = true; }
        ImGui::ShowTooltipOnHover("Reset");
        ImGui::EndDisabled();
        ImGui::BeginDisabled(!m_Enabled);
        if (key) ImGui::ImCurveCheckEditKeyWithIDByDim("##add_curve_width##Hatch", key, ImGui::ImCurveEdit::DIM_X, m_WidthIn.IsLinked(), "Width##Hatch@" + std::to_string(m_ID), 1, 4, 1, m_WidthIn.m_ID);
        ImGui::EndDisabled();

        ImGui::PopItemWidth();
        ImGui::PopStyleColor();
        if (_spacing != m_spacing) { m_spacing = _spacing; changed = true; }
        if (_width != m_width) { m_width = _width; changed = true; }
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;

        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        if (value.contains("spacing"))
        {
            auto& val = value["spacing"];
            if (val.is_number()) 
                m_spacing = val.get<imgui_json::number>();
        }
        if (value.contains("width"))
        {
            auto& val = value["width"];
            if (val.is_number()) 
                m_width = val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
        value["spacing"] = imgui_json::number(m_spacing);
        value["width"] = imgui_json::number(m_width);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string(u8"\uf551"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    FloatPin  m_SpacingIn  = { this, "Spacing" };
    FloatPin  m_WidthIn = { this, "Width" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[4] = { &m_Enter, &m_MatIn, &m_SpacingIn, &m_WidthIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device            {-1};
    float m_spacing         {0.01f};
    float m_width           {0.002f};
    ImGui::Hatch_vulkan * m_filter   {nullptr};
    mutable ImTextureID  m_logo {nullptr};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 100;
    const unsigned int logo_height = 100;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 10221;
    const unsigned int logo_data[10224/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03640064, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xe7003f00, 0x8f2d7eaf, 0xc2527810, 0xe5f150f7, 0x9bf486bf, 
    0x5a9d0f2f, 0x7df852d7, 0x2f1aebab, 0xf6a77df6, 0xb26cd9ab, 0x894b4b96, 0x9566f42d, 0xfbb71692, 0xe4355d3b, 0xa78b0030, 0x3c3cdbdb, 0x03dfc757, 
    0xfe874f7c, 0xc6adc515, 0x7501f193, 0xe9197f5b, 0x73ec45ba, 0x96b5417c, 0x3cd935e9, 0x9aa1adc9, 0x7db645e0, 0xb425ad49, 0x0245b578, 0xdede6d28, 
    0xd99e91d9, 0xdffbb999, 0x3cc56eda, 0xdaaa6129, 0x13c58778, 0xce873fdc, 0x7ce779af, 0xb8f55844, 0x7bd5fe65, 0x0bdce521, 0x3e6b3236, 0x28fd8f58, 
    0x96ec1fa2, 0x85286f6b, 0xfb55bf13, 0xe38dae41, 0xb7f8060f, 0xfcd2b946, 0xe17d650f, 0x7ac54f5d, 0x8b8f5a44, 0xdaed2975, 0xb98dd247, 0x849d74f2, 
    0x468d2b3c, 0x56d2b135, 0xb042b34f, 0x7217654c, 0x0142b248, 0xd21bbee6, 0x5d0b4db5, 0x3d342cd0, 0x5a16c43b, 0xaed55adc, 0x175e978a, 0xa7acd5d6, 
    0x5d16d6b3, 0xb0b2454b, 0xde5eee17, 0x78529d29, 0xdb3c9565, 0xa5ee5119, 0x43f1ce33, 0xd8bfe26b, 0x00ff275e, 0xaff67585, 0xfb8378b2, 0xcf10fe2b, 
    0xf09ff9b5, 0x5ff6c590, 0x43c27fb0, 0x3efbefe4, 0xfb66dfcd, 0x5cf6c95f, 0xfa47fbee, 0x2d9fed4e, 0x2afc577b, 0xc62b00ff, 0xcf86659f, 0x7ef9f2c1, 
    0x4b24fb26, 0xed67f8a7, 0xa3933f71, 0xdd82d679, 0x22fde31e, 0x994eb229, 0x9cf89f1b, 0xc64b1e48, 0xe76b816d, 0xfbec00ff, 0xfc42f8cf, 0x1eeab0ef, 
    0x3e23fc4f, 0x00ff9d77, 0x95bfa508, 0x6c00ffe5, 0xd73ef3ec, 0xff56fe9d, 0xb8ed9300, 0xf4cf3cf3, 0xd05c793c, 0xe61ad007, 0xcf1af1bd, 0x9fbcbd5d, 
    0x1781f854, 0xf8af748b, 0xeee8744b, 0xf9b4d6e6, 0x742f6d6f, 0xa87b86f5, 0x2506b4bf, 0xa4d9db32, 0x81fa3d2d, 0x1d49d425, 0x281c4984, 0xdfb5b21e, 
    0x5f185e8d, 0x7b78d8b5, 0x9e7d9ec6, 0xda96fdab, 0xd223dea4, 0x93ed8ba5, 0x202ef836, 0x9a48601f, 0x4f8f4dcb, 0x0fc303d9, 0xf9be359b, 0x4b9a2cad, 
    0xa5898b6b, 0xdc17beea, 0xe2eb1ef8, 0x7df4813f, 0xfdf04e3f, 0x893fb5f6, 0xed5ffbb4, 0x2df80bfb, 0x5b93549f, 0x7d864832, 0xb37c182a, 0x2db30d63, 
    0x939afe9d, 0x22e16af9, 0xb7045886, 0x1fe8712d, 0x31fcae07, 0xc3136de2, 0x4bf858d1, 0xbcf3b950, 0xa1f8a433, 0x146fb56f, 0x95c505cb, 0x59e29d86, 
    0xf7ccf834, 0xe5ebf6d6, 0xa4b96f4b, 0xba454c6d, 0xda804ddf, 0x7b581c45, 0x5df100a6, 0x00ff581f, 0x3fac9985, 0xf12920fc, 0x74d05103, 0x7ec36bcd, 
    0xfceff01e, 0xdb3afe24, 0xdbcfada8, 0xe1b37f2e, 0xd66df2b2, 0x08935b1b, 0x5d5af2b8, 0x2f8af6f6, 0xa0499279, 0x3f69d5db, 0xf82b7e07, 0xa73ac6db, 
    0x035d3485, 0x389e17c6, 0x4d7cd1be, 0xf898cd15, 0xdad4188b, 0xad61fbcf, 0xc46dfbe4, 0xec598b91, 0x47b9d845, 0xb76c8fb6, 0xdda98b13, 0x03603992, 
    0x7e21beda, 0x835e9ac8, 0x9e0900ff, 0x081fe0a9, 0xc7cf82f8, 0x48ebde12, 0xf4886fba, 0x2df4d296, 0x2a2f7b6a, 0x6c6c68ee, 0xfa96f363, 0x9f63d9d9, 
    0x0165b04d, 0x5cd3958d, 0x0b1c734b, 0xc483f910, 0x608b471a, 0xb485f7f0, 0xb84a639d, 0xf1b4bcb2, 0xa049bacd, 0xd8fef045, 0xb797766a, 0xc85cf156, 
    0x96c569b3, 0xac3cb220, 0x5f6c9096, 0xcb6ec7b7, 0xadecc82e, 0xe90388a1, 0xde0900ff, 0xf02b9e6a, 0xebe28dae, 0x8f0be271, 0x43595f08, 0xa1f635ae, 
    0xabc5adae, 0x13883669, 0x5a5c13c4, 0xed49d698, 0x2592b9a2, 0x573eedd4, 0x2e196ed6, 0x142a3061, 0x41f86fad, 0x00ff27be, 0x27fb2bc8, 0x25fc07e2, 
    0xfb08f25f, 0x1b2cfc37, 0xed4fed5f, 0xf2fcf8df, 0xad3cb47f, 0xd95fda9f, 0xd4febd3f, 0x677fe5db, 0xb3c400ff, 0xdafb9b67, 0x1e814ff3, 0xf0439b1d, 
    0x6d5d840f, 0xe6c5d62d, 0x7743b5d1, 0x3876f8a4, 0x2500fff4, 0x6eee9162, 0xd32e541b, 0x0be5856d, 0xae7fac7b, 0x0d6367d1, 0x18ee18aa, 0x21fca52f, 
    0xae8ffef0, 0xa36e3ae9, 0xe7e95cac, 0x5eb6174d, 0x5c336d0b, 0xa79b5ef0, 0xad6b3599, 0x098e745e, 0x1863f4b4, 0x0d8565f2, 0x888e88ce, 0x35759120, 
    0x1b642f91, 0x8eaf3a00, 0x37fb05be, 0xff878fc3, 0xaf6e1b00, 0xfbf0c7be, 0xbdb1bd44, 0x8b4fe78e, 0x6475c9ec, 0xa5ec2de1, 0xda62446b, 0x825b8875, 
    0xcdd36696, 0x5692d3bc, 0x2eeef2b8, 0x5f6be7ee, 0xf1277c95, 0xd3f8438f, 0x27da68ac, 0xe2517c89, 0x4bc47b0d, 0x0be1c1e4, 0xa75a091f, 0xf69a6e87, 
    0xa36dc10b, 0xb54919c2, 0x26dbb9b3, 0xce1e28e5, 0x06eddfce, 0xfaf29635, 0xadf66259, 0xd2b1f623, 0xf1bb49db, 0x78a3a5ee, 0x3c691b82, 0x14597c18, 
    0x35cd6b10, 0xafa650dc, 0xc2968436, 0x9dfe8972, 0x93a1f82e, 0xb46b6559, 0x030241b0, 0x3ea96b30, 0x8727f12b, 0x9a51e352, 0xf855e3c2, 0xa469777f, 
    0x4fa7f8de, 0x102f8eb1, 0x6f6b4d5f, 0xb9b9b505, 0xcc4b2d8d, 0x599ad94f, 0xd6136ba5, 0x4c94877b, 0x01140764, 0x5b487cc5, 0x237cace9, 0xdca54fa8, 
    0xa36eda68, 0xe95d5ca6, 0x6b526776, 0x4ead48bb, 0x2dbb7aa5, 0x6f49cb11, 0x27b3ca02, 0xe5c82b95, 0x9f4b49d2, 0xae8a6334, 0xee2fe2ab, 0xc51e1d35, 
    0x301fe17f, 0x1eb6e8da, 0xe677785b, 0x74dbbc89, 0x433a7fb8, 0x3ce49297, 0x4fde26ee, 0x93782097, 0x8b46516c, 0xd207d0ca, 0x9df5049f, 0x9ed7c453, 
    0xbc587b1d, 0xc6e53d41, 0x95e1758b, 0x0bc283b1, 0xb47b1be2, 0xe8da9ab5, 0xcbe9a645, 0x4adc5ae5, 0xf0344116, 0x2244865d, 0x4b32df4b, 0xf611a299, 
    0x9136b4df, 0xb48fc735, 0xabb4edb9, 0xdf8b8b8b, 0x33bcd916, 0x8f3f7cd9, 0x19ee9a51, 0xad36b865, 0x13acec15, 0xb352825b, 0x0be4691b, 0xe156a836, 
    0x2d88f6ee, 0xfe426bf3, 0x8400ffc8, 0x5fedd34a, 0x00ff8ff0, 0x00ff3bc2, 0xe6a96608, 0x47fbbb7d, 0x3bfb13fb, 0xfbd412fe, 0x2700ff3e, 0x37fb3ffd, 
    0x8dbc1bed, 0xfb30f1bf, 0xb400ff56, 0xeca100ff, 0xfea9f6a3, 0x8900ffc8, 0xfc87f667, 0xf200ff23, 0xed6f7553, 0xed6fed1f, 0xfff9f81f, 0xd0fe4500, 
    0xbfd977fb, 0x3dfee7e5, 0x3ff6dffe, 0xf4f87ff4, 0x00ffcefe, 0xe200ba97, 0x356e0bbc, 0xe9096f4b, 0x7d7141d1, 0x6499166d, 0xa29b76fa, 0xacc55ae9, 
    0x247dc912, 0x49e375ba, 0x9ea4052c, 0x285e59d2, 0xcd58a76f, 0x1d47d3c4, 0x15d89e8d, 0xe1834e25, 0xfe79c36f, 0x66da691b, 0x6aa76da7, 0xad8a5f1a, 
    0xaf4ba5ec, 0xc75bf811, 0x149d1eba, 0x81c3b5d0, 0xcbd2572c, 0xb958f671, 0x20d5068e, 0x46a48564, 0x6c3e4cd3, 0xf5f6ccb2, 0x4a77ddcb, 0xf6d66884, 
    0x35d3281e, 0x73cd7408, 0xda233ec3, 0xaefd53da, 0x99f041f7, 0x760960b5, 0xfed66d01, 0xf66807fa, 0x677f9679, 0xc42ef364, 0xfe9f1f92, 0xd53afc22, 
    0x877810be, 0xf1085ec4, 0x7f7487bf, 0x44bbf80d, 0x688a21d3, 0xb8b8b926, 0xb8a5699e, 0x8d24e186, 0x3c4896e0, 0xccb300ff, 0x1f560c17, 0xfbe51b25, 
    0x0f60d646, 0xf81abeaa, 0x7cd45163, 0x6aaa7b6f, 0xb7287e57, 0x6c8b1f1a, 0xf2ca96a6, 0x5508cec6, 0x298eb062, 0xd792bd26, 0x480b369d, 0x6cbc23dc, 
    0x3ce1e1cd, 0x2c4b1209, 0x077bf1ec, 0xf80a9fc1, 0x2dd6538f, 0x10dfb41d, 0x276d5e78, 0x1274baec, 0x1b8de0cf, 0x6f6ed44b, 0xf8f6d97e, 0x12b1b4a2, 
    0x25f7964a, 0xd2696c23, 0xa1c0d9a2, 0x255db935, 0xaff32f64, 0x7805afc1, 0x17bfc03f, 0x7d6b393c, 0x00ff852f, 0x78df60e1, 0xf055c782, 0xda86aeed, 
    0xa5b535bb, 0xa235c3cb, 0x10859bda, 0xb247b79b, 0xb35dc09a, 0x956b1642, 0x8db04ad4, 0x00ffb513, 0x15fe478a, 0xffd3fcd7, 0xf86fec00, 0x61ea3f43, 
    0xcefecbfe, 0x878400ff, 0xff0200ff, 0xdb7eb300, 0x0f7100ff, 0x86fa0fed, 0x96d607d0, 0xb611fa56, 0x3c187bbf, 0xe1ae6d2e, 0x66fa7c0f, 0x17bcaa95, 
    0x8a48dc50, 0x835bf21a, 0x5cd06ae6, 0x9ea8904a, 0x867813d7, 0xb2138264, 0xf3c9490b, 0x02df8c5f, 0x27f131fc, 0x636fb7c2, 0x00ffe071, 0x59b26a07, 
    0xe2c3585d, 0xb374f026, 0x4f638859, 0x570c682e, 0x6775cb10, 0xe2d64c14, 0xb052fae2, 0xd696aae8, 0x74e91210, 0xf68faac7, 0x3e2fd7a3, 0xfe5f7826, 
    0x69138f13, 0x57f8a3ef, 0x9bbfdac4, 0xd53858e4, 0xb24a57ad, 0x64e7b57f, 0xe87b675f, 0x3fee6ead, 0xd5ba71b4, 0xec3f92e1, 0x710ad7cd, 0xb5bf77e9, 
    0x19be8087, 0xc6efba6a, 0xd658737d, 0xf655f027, 0x6f870e99, 0xae512c74, 0x5c77afef, 0xb236b66a, 0x55a1aa44, 0x640835ac, 0x84d975b3, 0xdd6fe19a, 
    0x80825867, 0x4fe0817c, 0x8176ba86, 0x97f83cfb, 0x9ddd1ac7, 0x2c9ae8c3, 0xbab921c5, 0x352c6fd7, 0x1e5d35f8, 0x756b8b1b, 0x9056a6d4, 0x4a841a69, 
    0x24f0e9e0, 0x75845b72, 0x66f3b8b5, 0xe77ad292, 0xdd6700ff, 0x337ec65b, 0x376d75d7, 0xbf201e5b, 0x33f1458f, 0x453cd495, 0x3669d9a4, 0x9c863dfa, 
    0x485bf2ac, 0x4cda7d5e, 0xb5c42c51, 0x68b3aac5, 0x865aa2e4, 0x7da34c7d, 0x86f07d3f, 0x6b7c136f, 0x3bfe066d, 0xdce13f8d, 0xfc859f5a, 0x5ef8a51b, 
    0x00ff68de, 0xa3ec2cb4, 0x6faebef0, 0x3b656974, 0x35389a95, 0x84599e46, 0x902598cf, 0xc235dc5b, 0xfef31a47, 0x8400ff14, 0xc37fe163, 0x5ae805af, 
    0x3f4bfc67, 0x7cd122e1, 0x6f93fd2f, 0xfdb2f9a7, 0xc4e3fea2, 0x9f95da37, 0xdb7ddad9, 0x97bd6c77, 0x0a41fb4c, 0x63abeb30, 0x1f404bf7, 0xd75ffc15, 
    0x1200ffb5, 0x3f7c5bde, 0x348c2f1a, 0xdd5b6b2b, 0xe2d4402b, 0xa6ede187, 0x6e7c7f99, 0x58bbb8a6, 0x8b04c7be, 0x06e25cf6, 0x4f8e4c83, 0x2448ea22, 
    0xcc5c3ebb, 0x00ff79cc, 0x225e9684, 0x6be2b5f8, 0x97c357bd, 0xb8b738fe, 0x7941bcd3, 0x5f5f5daa, 0x05edd728, 0x1e0cf4bd, 0x6924c319, 0x6d76a136, 
    0x2a45d0d6, 0x9e27f588, 0x13425838, 0xd1feea12, 0xe38d1eba, 0x1adf885f, 0x68a76dfc, 0x818efaf6, 0x6d7cc2ae, 0x68109fe1, 0x7f1c4f53, 0x6c657d65, 
    0xae789224, 0xc90259e4, 0x2a0bb72c, 0x988b8b08, 0x5b4268e2, 0xbfee2d6e, 0x377ad6d8, 0xfd5dfc88, 0xfae9aead, 0x89d7e5ed, 0xff7475bc, 0xdcf1db00, 
    0x8d9cd52d, 0xa7fd47a7, 0x6200ff6c, 0xa94c388a, 0x45da1f08, 0x72f6c777, 0xd74ed9bf, 0x9401b03b, 0xfc2f0a9f, 0xa661673b, 0x7ec16778, 0xb54a9b30, 
    0xcc8bb6b2, 0xe901bed3, 0x7106281e, 0xcea37d0a, 0xce9bbabf, 0xe69d4ffb, 0x58ccf6f9, 0x5ae74f5a, 0xab5b3aab, 0x0800ff31, 0xe8bf8b0f, 0xff81f846, 
    0xe1a98800, 0x5c3dfeef, 0xf8bfc4a7, 0x91f05f57, 0x6d00ffd9, 0x9fc200ff, 0x2ef667fb, 0x00ffe593, 0x00ff4bc2, 0xbeda9709, 0x6f9dfdcd, 0x609f6df6, 
    0xbcd9cffd, 0xfbec2b9f, 0x3ed200ff, 0xab7de4cf, 0xaecf27fd, 0x1f2dfe57, 0x00ff5bfd, 0x003a64fe, 0xa1a6f0d5, 0x4b3c38e2, 0x7dc5dfa7, 0x5f6408e3, 
    0xd4c5fbed, 0x8d5ef120, 0x52bfeb62, 0x062e398a, 0x7bace0b8, 0xd6e408d8, 0xa600ffca, 0x6a7c1ab8, 0xd5d53212, 0x169fd07e, 0x4e3f8d34, 0x89a6bdf0, 
    0xc43ff8af, 0x25f1155e, 0x7877daef, 0x67d44d9f, 0x71e3b489, 0x85fe6b75, 0x81fe9107, 0x32f95ba4, 0xff090cc7, 0x390b1300, 0x656df51e, 0xe7f3a678, 
    0xf12aadf2, 0xf81daff4, 0x07d1510b, 0x977774f6, 0x63a1c6ba, 0xeb0f8fe2, 0xbc063eb6, 0x209a22d5, 0xc693f94b, 0x6fcac356, 0x2d84d436, 0xd004cd66, 
    0x3ceb825a, 0xc7077ad3, 0x7d577f7d, 0xcd6ce13b, 0xe68178ae, 0xbcb45a93, 0xabf86792, 0x972c4da7, 0x8972712b, 0x3661f770, 0x22aadc5c, 0x0568eb22, 
    0x1d69bcbd, 0xce96a99b, 0xfc3c4042, 0x57e959da, 0x7e173797, 0x1bf5d31b, 0x49f85f8b, 0xff3a6d5a, 0x1637c000, 0x0c734dd3, 0x2c41f3c8, 0xc391ca70, 
    0xebdfb672, 0xdfd689a1, 0x3a6fb44e, 0x7163fb06, 0xd76bfcd5, 0x97780f7e, 0xa5ae65e2, 0x0ffcdda0, 0xbda6d2be, 0xcbe2364f, 0xd02fdec3, 0x94c56862, 
    0x6391fe8b, 0xc470bc03, 0xd9070825, 0x08d2c858, 0x308db09d, 0xd14653ae, 0x4b91c693, 0xf832e8a0, 0x34eeed7e, 0x6d28765d, 0xf47df1e1, 0x97664956, 
    0xb93f7cde, 0x8a150f9b, 0x163cc93a, 0x92ca32d3, 0xccf797a4, 0xb7c68bb6, 0x21dabfc6, 0x22fc27fe, 0xf1e1d1b5, 0xf50bc527, 0x672e156d, 0xc44ff1b5, 
    0x35eb1bcb, 0xa148ab0b, 0xd68eb425, 0xc9656f39, 0xa4345f47, 0x2158a5e8, 0x801d81b7, 0x7c1e7e35, 0x1dfcd255, 0x4d1fcde1, 0xfef0231e, 0xb668a183, 
    0xae521757, 0xc55d3387, 0x1bb508af, 0xb6176658, 0x4b33f992, 0x9340a86d, 0xb32eb0a9, 0xf7c222cd, 0x3684453e, 0xeee7649f, 0x49fc353e, 0xef5974d7, 
    0xfc171ff4, 0x17afd348, 0x1af1bd4c, 0xdcbd3aea, 0x78294425, 0xed9ba22d, 0x9d7661ec, 0x535b8e61, 0x992602a9, 0x383a3d9e, 0xe2073c92, 0xade249bc, 
    0x66d4535f, 0x504b7d8e, 0xf1bd653f, 0xf8226b4c, 0x64694edf, 0x4ccb6df3, 0x631c4ff3, 0xe6c952ed, 0xb3e59215, 0x4b18a1fd, 0x4af94a68, 0xbe86af06, 
    0xa6f8db1c, 0xf1bc5fcf, 0x14a89756, 0x5c3ac393, 0x75886fda, 0x35c3124f, 0x85009dbe, 0xb263fb61, 0x8db6f62e, 0x6321cced, 0x4109738e, 0xee6679a7, 
    0x03842578, 0x7ead6cdd, 0x86f8dd32, 0x4f5f00ff, 0x9a695c14, 0x04889f25, 0x6c8bc223, 0x92f6b6ac, 0x6d5a245c, 0xbcb3b3a0, 0xb225ea96, 0x27da9abb, 
    0xd6cd89b0, 0xf3b6d790, 0x364d235b, 0x00ffe96b, 0x4b90e80f, 0xafba68a1, 0x7df0238d, 0xf663afe6, 0x92b960c9, 0x6e3a5ccb, 0x4de8269b, 0x334b5aeb, 
    0xc88df5b5, 0xff9eed78, 0x2c985b00, 0x2f241776, 0xdf52f796, 0x2b0df239, 0x147ed441, 0x7ff76b5b, 0xdb5b94f0, 0xc3c3baf8, 0xfa5cbaf6, 0x76f19f1e, 
    0x16b4f5ce, 0x256f4932, 0x5adda39d, 0xc99ad0b0, 0x6e85b866, 0x639d66ae, 0x0c69c35b, 0x095e5c92, 0xd90ff4a3, 0xbe51f3fa, 0xbb5e97d2, 0x3e51fcd7, 
    0x34a6fdaf, 0xbfbb5bbb, 0xf377d68b, 0x1beb4c5c, 0xaac7dbdb, 0xa7ae0542, 0x36651976, 0xe4e93c9a, 0x92bd64c6, 0xc05ec2e5, 0x15af0508, 0xfcd26e7c, 
    0x0fbde327, 0x3a1676c1, 0xae89c785, 0x4723ad35, 0x26f4786b, 0x4bd3e2d3, 0x84e9e745, 0xde6634c3, 0xd7654c09, 0x26e4d249, 0x5d37690b, 0x12b9b9df, 
    0xf8253ff9, 0x6d80f6e7, 0x5e37c423, 0x07e2832a, 0x674df585, 0xfe94f059, 0x74d3b51f, 0xfbeb3e2d, 0xb8552b1e, 0xb55fea96, 0x79c9ca35, 0x2917d772, 
    0xabda65bb, 0x4e5c5cdc, 0x3bec47d7, 0x5fe9dd7e, 0x71337c11, 0x3bdaefe1, 0xf0e7d747, 0x153cdacf, 0x5dd85eac, 0x93a6fa69, 0x667dcdae, 0x966c37d7, 
    0x0eb6c813, 0x6da9ce0d, 0xe6981a7b, 0x6b5c8c46, 0x7371610b, 0xd2c0d10c, 0xab957ca2, 0x9a8cfaea, 0xaaefaad6, 0xa9ef0eeb, 0xe4d9a1f8, 0x3b6781f8, 
    0x8b664933, 0xb8aa342b, 0x2c5ca495, 0xa8cbafb3, 0xb5c310a8, 0xea009a94, 0x4ef806fe, 0x1fd458d3, 0x05f1b250, 0x6f78dabd, 0x3297f6c3, 0x9f2e9bbe, 
    0xef98dbe1, 0x7812d464, 0xbb558ba3, 0x81669b8c, 0x64d41798, 0x35f27e8c, 0xdc0a49b1, 0x5abfb45a, 0xe5851a6a, 0x0c7da3be, 0x1084da37, 0xc3ad7bc5, 
    0x2bfe3614, 0x288ab0b7, 0xedd5aded, 0xc1d18e23, 0xdcad487b, 0x72b2b597, 0x84ecf064, 0x8a175ede, 0xf88a2b40, 0xf8dca355, 0x55dac05f, 0x5ca6ad96, 
    0x3724a126, 0x567aebb1, 0x368de2bd, 0xb4a56ef1, 0x18d22dd3, 0x84e6ad2f, 0x636eaba4, 0xe8a40d0b, 0x376542c7, 0x2548a277, 0xb9ae1d54, 0x773af678, 
    0x476cae89, 0x5edba897, 0xabc6b5de, 0xf8d8ae63, 0xfef0517f, 0xd22c2eac, 0x4e4d46fb, 0xcd2dcb78, 0xcf1ac9ba, 0x9a6207e2, 0xac25dc82, 0xb3a559c6, 
    0x033d8068, 0xfdc2efe1, 0x9e3de25f, 0xe29726a9, 0x4b02da2f, 0xfbf71abd, 0xf8b1581b, 0x3a7de373, 0xd44fcbca, 0xb62f86e1, 0xecaddc5b, 0xe15be696, 
    0x5d5c3b2b, 0x7543e641, 0xae728f2c, 0x1e827786, 0xa719feaf, 0x17f4dfc5, 0x00ffaffd, 0x7bf8e3f0, 0xab9300ff, 0x8106f094, 0xf0df6ba4, 0x6b00ff91, 
    0xd71f7ee8, 0x5cadc53e, 0x6f7fdad9, 0x7cd42afc, 0x643bf679, 0xd7deb2db, 0xd8bf4eec, 0xb393c996, 0x71ddb844, 0x18f39669, 0x5f5dabf9, 0x113e20fc, 
    0x1ba100ff, 0xfe00ffe1, 0x7f88a722, 0x7e00f5f8, 0xd4147c70, 0xfc0e9f74, 0x8887f07e, 0x0b5fcb75, 0xdb8643fc, 0xfe4ef0c3, 0x8997f116, 0xcbb5cd2d, 
    0x475b847d, 0xc4f52569, 0xa389641f, 0xc331b74d, 0x710cdb21, 0x37646cc7, 0xbfd7e529, 0x5697d7fe, 0x7cee0e3f, 0xe0a52e1d, 0x8b741d6d, 0xdae9160f, 
    0xdf56b79c, 0x1b2b560f, 0x478e554b, 0xbd30ccfe, 0x346b36e8, 0x8bb65e60, 0xda27df29, 0xad49e69a, 0xe1ade1de, 0x24e02ff9, 0xf1a97e1a, 0xb0b2421f, 
    0xa9413cd0, 0x3c654f6b, 0x875e9a68, 0x7b77e267, 0x2a7364a0, 0x08113769, 0x025b88e7, 0x72932686, 0x4c023738, 0x9fbe8620, 0xbceeadfd, 0x0f8fe345, 
    0xed1d9a68, 0x1d358af7, 0xccf15a37, 0xd1b0cb43, 0x435dfbc5, 0xe9b37ff6, 0x6548dbf2, 0xc957d457, 0xd4b3e3f3, 0xaa362924, 0xca9b30a9, 0x005904fb, 
    0x10df75e5, 0xd517dee8, 0x3cde327c, 0x04af7b6b, 0x127f4e9d, 0xfaeb93e8, 0xbe7af734, 0xf74c2cb5, 0x67edf246, 0xa5d5cdf2, 0x22f95ffb, 0xd409c7e4, 
    0x8ab54717, 0x7904b05f, 0xe253fc6d, 0xef7bc6f7, 0x6b12ea1f, 0x3c0b7f17, 0x7d8be00f, 0xe9f1c377, 0x737871f6, 0xdba7cdc3, 0x3cd4a318, 0x0b6c7dd3, 
    0x2d99e791, 0x8169b6e4, 0x8f25c620, 0xe3830419, 0xda0ca366, 0x595f87d7, 0xb42fd6b5, 0x3ff8e1d3, 0x497c5db0, 0x6911f425, 0x638b668d, 0x01cf5204, 
    0x45aeadf9, 0x7b2cddc2, 0xc42d3362, 0xe56b4731, 0xd85f71e4, 0xe1abe69a, 0xd16ab5cf, 0x34ec81f8, 0x7aed17dd, 0xe7897d43, 0xa8534bb5, 0xb3772cf9, 
    0xeddb82a8, 0x318f5c13, 0x3eb82903, 0x33d2dd5e, 0x6ab00728, 0x6b327af7, 0xb5d6ad5a, 0x0dfe68a4, 0xbec59fb7, 0x7a84d328, 0xb6a781bf, 0x6679735b, 
    0xe3f2a890, 0xd81a419a, 0xb631e549, 0x35d9d20c, 0xb74672c4, 0xf6349a85, 0x22be82af, 0x78097ed2, 0x3d753c05, 0xe2618fde, 0x7e78153f, 0xd1b248c7, 
    0x5b11bf34, 0x96e6e5e8, 0xaed83429, 0x16c98eec, 0x1218eeda, 0x99b5a96b, 0x9663f264, 0xc4ccf2ee, 0x2fda19b3, 0xa9ced71f, 0xdc1d6fe3, 0xc387f8df, 
    0x5d3c105f, 0xc4136de1, 0x3c89efda, 0xf85da441, 0x9ea56d79, 0x6db1e278, 0xb7e5494e, 0xf93c6d28, 0x319e1552, 0x2cc7a791, 0x98e15a25, 0xf6f123ef, 
    0x150fe3af, 0x5e6aab45, 0xdd34d409, 0x49f7e256, 0x34d2b0b3, 0xdae905bf, 0xfda7938e, 0x81e6eeb5, 0x2d2eac2c, 0x5a52acf6, 0x60413b5c, 0xce5cfa0f, 
    0xbe716fd7, 0xf5010c35, 0x229ed405, 0x1be2b5f8, 0x8900ffeb, 0xc2dff00d, 0x6143a269, 0x4fda69a6, 0x5b83ec86, 0xd768595d, 0x3e1ddd12, 0x988b2b6b, 
    0xe2da81c9, 0xcca77333, 0x8e65dfd6, 0xd69b1bde, 0x92685bb1, 0x0abed2ef, 0x9fbc427c, 0x3517bfc2, 0x247c0e4f, 0xafb7fef0, 0x86ba685a, 0xf0049e90, 
    0xe12d85bf, 0x79b231b3, 0x6c495ff0, 0x6d42b2b7, 0x3f7b61af, 0xd23cc330, 0x491c0b6a, 0xa6471b6f, 0xff3cae99, 0xefd35000, 0xe91b352e, 0x27d4b1a1, 
    0x6edd5b86, 0xf0b7a668, 0x52fcbda5, 0xa96e73c7, 0x6e772469, 0x70c5dd43, 0xebada5e0, 0xa4882781, 0x24f0ce06, 0x5f5d8351, 0xe373dbec, 0x8bdf7588, 
    0x8997453a, 0x9de11fbc, 0x96c1d74e, 0xc4f7c6b7, 0x00fa749a, 0x885b28fb, 0xced28da5, 0xec5739ea, 0x9a6228e6, 0xa4cbcce4, 0x9dc51d4f, 0x08162bac, 
    0xe383f800, 0xfc8a00ff, 0x8a1fe34d, 0x3c8c07fa, 0xf85baf4d, 0x346fc733, 0xb65f5d53, 0xb3e9a993, 0xa33e5c5b, 0xb2cc237b, 0xab34c932, 0x93ad3aa7, 
    0x66240b38, 0x268520d5, 0xad356f5b, 0x885f9a44, 0x86272cfe, 0xf62bfced, 0xd65157ad, 0xde2d59bc, 0x3b7ca081, 0x2d4db569, 0x786ba02e, 0x5d83c5ad, 
    0xbc6defa7, 0x743b9e87, 0x70cf9291, 0xf3773a7f, 0xedaf8e22, 0xa08d0659, 0x4d87577c, 0x5ee3dad6, 0xc598b1b9, 0xe29ba6a8, 0x8224ee69, 0xf11bf558, 
    0x5d33dbab, 0x4913efac, 0xd992667a, 0x68b6c8c9, 0xa7399e25, 0xd5eb95b8, 0xcbf02d7c, 0xfb6df856, 0x2e7f4960, 0xe249aca1, 0xd4532f7d, 0xcfb588cf, 
    0xa1c63d0c, 0x618e79a0, 0x627d60fb, 0x089b5b57, 0x68528322, 0x4f9cee2e, 0xb3ea6671, 0x0be5956e, 0xdfaf0710, 0x37f8a34d, 0x9ee812c2, 0xfcf0b217, 
    0xb668a769, 0x9bf8a6ad, 0xd3277ec2, 0x638b4b74, 0x4b5adb0d, 0x4ba4a625, 0x21dd7224, 0xe93aed8f, 0x16bbe058, 0x6fef69f1, 0xb87c766f, 0xbc27b4f5, 
    0xa6ddf1ba, 0xff850e9d, 0x2da40900, 0x91966aad, 0x5afb3e78, 0x543b6db7, 0xad91088e, 0x9dd2e734, 0xbbb2a54b, 0xf9980611, 0x1e694093, 0x14c9f0ea, 
    0xfd2957a0, 0x00ffab81, 0x4ff639c2, 0x7d103fec, 0xec17fbb3, 0x00ff647f, 0x7da75585, 0xda3fedab, 0xffd97f3e, 0xf9b7b200, 0x7ff2693f, 0x9f89fd7f, 
    0xfe9ffdb3, 0xd3be1b27, 0x7cb557f2, 0xdd3cd11c, 0x385e4d76, 0x4c6dfbf4, 0x8d2ecc78, 0x79d9dfaa, 0x15afd942, 0xf679cdfe, 0xef9675c4, 0xf1c0984d, 
    0xae98a5a6, 0xb5cdc9b5, 0xc590c4b5, 0x3800091b, 0x6a0f5f0b, 0x89169a97, 0x527cab7f, 0xdc0ffed3, 0xc22d59df, 0x5ffc58d9, 0xb23e0a5f, 0x4e0d9885, 
    0xcf856de7, 0xbbccadf6, 0x7eaacb4a, 0x125e2ee5, 0x58a18d62, 0xe13f27ae, 0xab00ff19, 0xcd00ffaf, 0xef00ff9d, 0x385e7525, 0x792dbcd3, 0x4d4278a7, 
    0xc597e153, 0x0dda160f, 0x07d36315, 0x681d3e84, 0xcbfe215e, 0xd0894bb6, 0x7d4fdfd8, 0xfa822967, 0x367f5639, 0xb761ddca, 0xf1b6deb4, 0xe4250444, 
    0x3eb17fe5, 0x04d17f1f, 0xf03fa0fd, 0xff4378c8, 0x01949500, 0xabc207f1, 0x171d3a8d, 0x7f7e4d4a, 0xcba7c303, 0xe9a45ea6, 0x96b76aa9, 0xdba72d6b, 
    0xd525da2d, 0x9f87d3a2, 0x5968bf76, 0xc522185a, 0x698e65d0, 0x8420d1bf, 0xadfd6a1f, 0x3a6d9b74, 0x1ad7c3db, 0x6b8f9edd, 0x1bf17f6f, 0x5d96b958, 
    0x16492d72, 0x4590c4e5, 0x6d74c9a8, 0x24711ec6, 0x59fba551, 0x7674db66, 0x6fe54ec3, 0x83aff200, 0xe1bb667a, 0xe2e91c1f, 0x6f2cd607, 0x743f3c2c, 
    0x5ca0a50e, 0x850a5ae9, 0x5a584e5d, 0x23457c58, 0x7c01493c, 0x37a0fdc7, 0xc07eac34, 0x6a458eb9, 0x97e357fa, 0x838faf82, 0xb277c453, 0xdfd2e2f8, 
    0xbb20fec3, 0x3fcbb4d6, 0xcc3d3309, 0xd6653696, 0xa04da039, 0xac7d3a69, 0x04493c89, 0x49f45986, 0x2b9a7527, 0x50be7e83, 0x075fc907, 0x023f4bf5, 
    0x30de68de, 0xf7c1df82, 0x2d7ad6d7, 0xf3d6b6fc, 0x9716f7ea, 0x8c09fea2, 0xc466c981, 0x11292257, 0xb5fc78a3, 0x6b2b2492, 0xaf2a6a2a, 0x1f5ad11f, 
    0x6300ffec, 0x86e29bf1, 0xbbf8a48f, 0xa0c6f142, 0x63d0977c, 0x107cecd2, 0xb7b914be, 0x01354975, 0x9f4b020c, 0x434ddbec, 0xdbc63c6b, 0xc992b660, 
    0xdb7f9fe4, 0x757e2a65, 0xefd720f1, 0x2fad19b5, 0x3441bcad, 0x8aef6d7a, 0xeeaded6c, 0x176909bc, 0xcc2d11d9, 0x87b042f3, 0xb4e56f2b, 0xba2d4bb2, 
    0x98779a7c, 0xe4b9c3d3, 0x16e13f6a, 0xe189cef0, 0x6c47f85f, 0x3f7c2b3e, 0xdf8b3569, 0xacd7502f, 0x733cf1a3, 0x9aa79aad, 0x3623ee2d, 0xde960c4b, 
    0x0bb0107c, 0x18e7cb0b, 0x9414219b, 0xe3593c00, 0x3568227d, 0xbf4a079d, 0x1b9e7cf0, 0xee9abdbe, 0xbdf42d68, 0x9a27ca46, 0x58304bd3, 0x3977d598, 
    0xe9e21e89, 0x1376646d, 0x7519234d, 0xb600c305, 0xe8ae31fc, 0xdab53dda, 0xf8199eea, 0xc7e9af6f, 0x16d756c2, 0xf0dc3daf, 0xcce418aa, 0xb2b1ca90, 
    0x357749de, 0x53b03acb, 0x2696a11c, 0x574c5349, 0x5b786a49, 0x89a73ac5, 0x635ddb35, 0x80f8ba47, 0x36e3edf7, 0xf81acd0a, 0x514d2589, 0x9114494a, 
    0x2f2e89b8, 0x47774ba6, 0xf4cbc68d, 0x2cb1acdc, 0x7fca4b24, 0xc27fde67, 0x877de717, 0xe17ff250, 0xefbcf319, 0xfc2d45f8, 0x67fb2faf, 0xbcf69967, 
    0xfcb7f2ef, 0x99c76d9f, 0xe3a17fe6, 0x3e80e6ca, 0x8fdff1c0, 0x62590b74, 0xc19b2cd6, 0xb3b6c5fa, 0x41146fe2, 0xeaa8a926, 0x9b227077, 0xa586188b, 
    0x4c42f33c, 0x2dbcdc32, 0xa0255f12, 0xad492578, 0x33d94897, 0x171a2acb, 0x86df8bc7, 0xe2b13e7a, 0xdeea0edf, 0xad2cd30f, 0xefedb17f, 0xe235fcee, 
    0x9865692d, 0xbaca59db, 0xb345a65d, 0xb4bdd246, 0x39927d13, 0x3886e095, 0x3b5a3d9e, 0x2daca08b, 0xc7873f7c, 0xf2775c3a, 0xdac59ff8, 0xb579f1c5, 
    0x2c2d7b4b, 0x8a765aeb, 0x5b7beb74, 0x52ac2d51, 0x88d246db, 0x0b498267, 0xb1ae6c47, 0x17547af8, 0x90224493, 0x2fe3b7ef, 0xe3937806, 0x9f60824f, 
    0x3f181fc0, 0xcf1f6cb1, 0x75443cd2, 0xeee66a2d, 0xb6b600c9, 0xb426e837, 0x835877b3, 0x976ae6cb, 0x779f86c5, 0x4697d62c, 0x6d08d240, 0x9f553e80, 
    0xd0e6d24a, 0x9be171bc, 0xfae13b6d, 0x566b5dde, 0xdd5ae933, 0x9bcab6be, 0xc1301b2e, 0x640ed768, 0x66269648, 0x9278ba67, 0xee253314, 0x08b29feb, 
    0x0cf0aa3e, 0x88e745da, 0xafec2eed, 0xa689fb34, 0x968337f1, 0x6ab20fca, 0xb756f736, 0x06cd6931, 0xcf921d9b, 0x524a231a, 0x9ed26429, 0xdbbb7de7, 
    0x8e6a23cb, 0xf3013065, 0x193e8a57, 0x0f00ff6b, 0x0b1f267e, 0x85fae9df, 0xad61a3d6, 0x8dd96278, 0x2e6d8097, 0x4c96bc37, 0x4282a8f0, 0x799165ac, 
    0x1e95394b, 0x49f70cf7, 0x0fb2d114, 0xf819bea2, 0x33f8a1f9, 0x5ac3fbf0, 0x7971935e, 0xfbe16175, 0x59d84e4d, 0x9d3ddd5e, 0x5feb5dfa, 0x6d497b60, 
    0x2e4b5204, 0x4f9e6e96, 0x56651bed, 0x92babdb9, 0xc77e8114, 0x01c6036f, 0x1f29fe57, 0xf35f57f8, 0xb100ff4f, 0xff0ce1bf, 0xfb87a900, 0xfe3bfb2f, 
    0x0bfc1f12, 0x6ffbcdfe, 0xb43fc4fd, 0x5f1bea3f, 0xdb58da5f, 0xfb6a3fe8, 0xadd95f3c, 0x524fddf6, 0x08b591b9, 0x8717e56c, 0x53b7da3f, 0xa83cc2df, 
    0xae9040ae, 0x3c44aba3, 0xfbdf08ab, 0x700d4f3b, 0x57f1d5ee, 0xf78a7fc4, 0x3587079a, 0x1ec623dd, 0x2fa1f819, 0x617d6597, 0x8bcfa5aa, 0x8ceeee2d, 
    0xca22ea90, 0xa56beae6, 0xf329b385, 0x6335c03e, 0xb825970f, 0x5b584c93, 0xad0fdd63, 0xcbe37f7c, 0x1ede861f, 0x7b1eafd5, 0x4a536d7b, 0x6da50ed3, 
    0xd992b5a5, 0xdcc2c2ce, 0x69b16a4f, 0xb43025c5, 0x5992c811, 0x2239c6e9, 0xfb9721d3, 0x5c12514b, 0x03641c49, 0xc6f05357, 0xa2dcaa85, 0xf01c9e6a, 
    0x6773a7be, 0x9ac8360c, 0x574dc1e7, 0x42da53c5, 0x15825623, 0x8f45d28a, 0xd1448046, 0x6e5b3ab4, 0x295e389a, 0xcc7d3ea7, 0x00ff55a0, 0x3fc20784, 
    0x3f7c23f4, 0x54c400ff, 0x00ff0ff1, 0x5fcfaf1e, 0x47b6bf8f, 0xc6575dc4, 0x86f05f56, 0xf838feeb, 0xa647a15d, 0x8717c95b, 0x9b7bb5ed, 0x6e700635, 
    0x83b1f3bc, 0xe0a234dc, 0xf2ce5d3b, 0xd7cc744b, 0x2cb3c604, 0xfcaff910, 0xffc68f35, 0x9f2cfa00, 0xa8f03f10, 0xe300ffbe, 0xfff401b4, 0x3f3dc300, 
    0x86c7f14c, 0x4afc127e, 0xbcf0f0f1, 0x75f21b7e, 0xac680e4d, 0x2126fd74, 0x349ff71d, 0x980b90aa, 0x9cb24a93, 0xcac6aa44, 0x8a0147f8, 0xbcad2e59, 
    0x4ca9cbdb, 0xf12fed27, 0x6d637c05, 0x413c49e1, 0x3aeb5ba0, 0x8626887f, 0x9f9bf4d9, 0x6dafb689, 0xc565fe6c, 0x684257bc, 0xeefa569d, 0x57482228, 
    0x6dcd985b, 0xb7b66a1c, 0xd3f63429, 0x8756dc48, 0xd73e2de3, 0x648617e0, 0x7c8957f1, 0xa1c9a51f, 0x5718d95e, 0xfd7a164c, 0xadb5b0e4, 0xbcd98ee0, 
    0x590b2a3f, 0x59ba45a5, 0x649ab8a4, 0xf6951686, 0xf82d7f01, 0xb1f8aa9b, 0xa767c5a4, 0x5d873e7c, 0x2f8c97f0, 0x69b017a6, 0x7cd9b0f6, 0xf9f4d239, 
    0xb837356d, 0xe21278b8, 0x1ca9a4d0, 0x685c19bb, 0xea869411, 0x69bc2239, 0x05b95b92, 0x34ab7c00, 0xd9d9433a, 0xf8d9536a, 0x535d4d3f, 0x2df666fb, 
    0x19f52e3d, 0x0933d2de, 0x11a4684b, 0x6c8f21c9, 0x64d9e2a8, 0x1ebe306f, 0xc6bbb5e8, 0x217cd0ed, 0xed6c6ed3, 0xc5f0b8a3, 0xbe87c7e5, 0x6a323425, 
    0xe1894f3a, 0xe8a689f8, 0xbe56d636, 0x8ee4d967, 0x89239844, 0xcfc609d8, 0x39e6c4b4, 0x8fb6fc15, 0x2fe0ab97, 0xc200ff1e, 0xab89fd09, 0x87df1ae9, 
    0xbfb400ff, 0x2e3d75b1, 0xd058cbee, 0xfddfe33f, 0xc50ba86c, 0xcfa7fd1b, 0x793516f3, 0xcbfbcd0f, 0x16fb946b, 0x94fddc44, 0x52f8a8eb, 0xe2166dfd, 
    0x7c78d8e8, 0xc387e125, 0xc4b6ae36, 0x9947a8ea, 0x297a1b72, 0x98fec712, 0x8b749740, 0x83298f69, 0xf14a0f10, 0xff748acf, 0x785e1100, 0xc3423d66, 
    0x163d7efb, 0x6a73c4f7, 0x8b975a16, 0x0b35d9ac, 0x5e9734a1, 0x52cccd65, 0xd495bc6e, 0xa997acdb, 0x45f235e4, 0x47b8b51d, 0x8a9f59b7, 0x7701fcd4, 
    0x4f3bfca4, 0xe8a44f10, 0x993ea5ef, 0xadd6a80d, 0x5f3ca186, 0xad5c32da, 0x889bdbc2, 0x408d5acb, 0x8466385a, 0xe19696b7, 0xabdd2a83, 0xaa78d001, 
    0xf1525f2d, 0xd625a51e, 0x3441a88f, 0xb422be57, 0xdbf0c531, 0xf6dbb04e, 0x70253a6d, 0x8a8445f0, 0x9e564554, 0xe4b09f31, 0xb23ca3dc, 0xc3af3d31, 
    0xe14d105f, 0xcbf656cd, 0xf028bec1, 0xc372fc3d, 0xb6d60d65, 0xbef0232e, 0x34d170a5, 0x26ed2d68, 0x2c0c0bba, 0xcc3d6389, 0xb4457257, 0x4f5cb0b4, 
    0xc559408d, 0xf8ba0708, 0xd3b25853, 0x6d73097c, 0x7e78dca0, 0x1ab2b446, 0xe0b98685, 0xbee812df, 0x4bc0961c, 0x675fa42d, 0x9ea495b4, 0xdafd4ce7, 
    0xa3aeda90, 0x1c774fe5, 0x23eeca82, 0x2e86f670, 0x27bec083, 0xafda44f1, 0xf1b46782, 0xd5268e1f, 0xf641fcee, 0xc6873d63, 0x52f70abd, 0x536b55ba, 
    0x68f62614, 0xaaabcbfe, 0xb41892b4, 0xb45b03b0, 0xa6a4bcb2, 0xa4dc16a5, 0x91e65df0, 0xebb48a27, 0x40f1b807, 0x6e189b30, 0x3e831f74, 0x704d841e, 
    0x5bb35097, 0xecb49d2d, 0x38d66e6f, 0x2fd257da, 0x892019d6, 0x49e3f15e, 0x5253a26c, 0x231ec2e7, 0x75bac293, 0xc657788a, 0x7bc35f12, 0x31b63473, 
    0x35facffe, 0xba31e4c5, 0x5d922340, 0x2cf2a419, 0x811c73a2, 0x4b26632f, 0xa4688ac6, 0x49f87401, 0xda5ff500, 0x9f6de143, 0x7a86bfc5, 0x66da167c, 
    0xe9dcad9f, 0xae3ab6b7, 0xb8689f96, 0x35c1c09e, 0xf3468ee8, 0x96d42db7, 0xc22d2d37, 0x6a03a1fd, 0xf3e1dd5a, 0xda264fe0, 0xe1553e15, 0x0d7f7539, 
    0xacd1337c, 0x35b600ff, 0xff346f08, 0xdec20c00, 0x27f1937e, 0xb955b34e, 0xe76dd14b, 0xc3f37dc1, 0xe411a20c, 0xb796af2e, 0xbc685c5b, 0xf4f58ddc, 
    0xf58600ff, 0xc343ed6b, 0xaaab6eda, 0xaa495c5e, 0xf7f70c4d, 0xb692d7b7, 0x5bba398f, 0xb8518f75, 0x6c2c669a, 0x8ac848a7, 0x3465fcfe, 0x7ae94ab8, 
    0xed826b78, 0x9b78005f, 0xc1aff158, 0xf05b57dd, 0x5ea37dcb, 0xe5b57986, 0x00ff3b8a, 0xb3102986, 0xfc85dd82, 0x926e2d68, 0x953a9030, 0x92c596bc, 
    0xaf385b4b, 0xda58ba22, 0x01922fe4, 0x7e8357f4, 0x00ff680e, 0x78263e17, 0xdd7ac4ef, 0x1d35db87, 0xf8d1c43f, 0xb1b5477b, 0x209abef0, 0xb3b22381, 
    0x696b6f51, 0xae39263c, 0x30b7b665, 0x6edda7c5, 0xba14224d, 0xd1c4f19e, 0xf88097ef, 0xfc59a9b3, 0xa0cbf848, 0xd5201e6a, 0xc3073f7c, 0x6b0400ff, 
    0x4d934f43, 0xcae396d4, 0x27f04b8e, 0x4f93ec83, 0x87bab624, 0x9b1bd6da, 0xd14b75e8, 0x2c52770c, 0xdd127e8f, 0x5f6fe3ad, 0xffe233f8, 0x2ff80e00, 
    0x667cbbe0, 0xac71cdf8, 0xd50d1e68, 0xf4d99e66, 0xb4a9f026, 0x1717c59b, 0x2d5ed076, 0x7b6592a2, 0xa716468b, 0xacd3f475, 0x9728999a, 0x45b563ce, 
    0x1abfe497, 0xfcd2607c, 0xd668a769, 0x7cd6257e, 0x1ae9a11f, 0xa875b57e, 0xf04e6ff8, 0xbad78e7e, 0x5c029b76, 0xf6cbb33c, 0x5821b14b, 0x915b65ae, 
    0x0382840d, 0xd7c65c33, 0xb5ad056f, 0xa9055092, 0x0fe04fbc, 0x24ba6812, 0xc1a7cd5a, 0x2e6d1b7b, 0x4b3f8d1b, 0xbcafd5b7, 0xd1a2705d, 0x7d1f2e6f, 
    0x48e658b2, 0x26599220, 0xcd7c4794, 0x7f47ba75, 0xe22d0992, 0x5afcaf8e, 0xffb7fa3f, 0x75c8fc00, 0xe3cf78c5, 0x871fc57f, 0xf8da825a, 0x38dec777, 
    0xfc8dcdf0, 0xb6eed7d7, 0xbcc5ceda, 0xa40bb595, 0x687f837b, 0x13b39aea, 0x2abfd61e, 0x1a6db40b, 0xeb182e8f, 0x8600ff9f, 0xffdff8b1, 0xe2934500, 
    0x1715fe07, 0x8076fcdf, 0xc300ff3d, 0xe56d0f9f, 0x7e8200ff, 0x17c4e3f8, 0x75a1a61a, 0x74869f35, 0x794beb6b, 0xcd2d903c, 0xedaf8ad7, 0x586585a5, 
    0x8d6dedc4, 0xaf16253d, 0x9a27402b, 0x2fb3bc59, 0x01fdf196, 0xf600fff1, 0xc487f06b, 0x9aeb05cf, 0x0775b6a6, 0x173db4d6, 0xa7ab36e2, 0x055c916a, 
    0x3d74189e, 0x6467c364, 0x592900ff, 0xe7ae91e2, 0x57e6799e, 0x2c679abb, 0x4f2518d7, 0xfe737895, 0x0ff19d51, 0x0dcfc4fe, 0xae6bea7f, 0x3e5ed5d7, 
    0x759200ff, 0x13fb9fe3, 0x00ff353e, 0x000543ea, 0x7cac417c, 0xdfc3872e, 0xb4ef7512, 0x1ac59b78, 0xe29bbeed, 0x49b089df, 0xc8aba706, 0x9ae9fa45, 
    0xce043744, 0xd772ecf1, 0x6e37f980, 0x582c8d8c, 0x35206350, 0x7f5f6b7c, 0x4afefbf8, 0xec7f8e2f, 0xffd7f873, 0x15f4a800, 0x7d0005f0, 0x7836fb29, 
    0xcef14b5b, 0x56eba2bb, 0x88f0bf76, 0x37f1ad6a, 0xbb20d042, 0x7b66e4d0, 0x6f5d3d3b, 0xb9094156, 0xdb966c33, 0xd3d66aec, 0xf2c6de8f, 0xebc8b333, 
    0xde6e4713, 0xe1db461d, 0x6bea1a04, 0xf8e10577, 0x15e26573, 0xb3b3e4d3, 0xbed6327b, 0x566c3a2e, 0x43400b8d, 0x7393325a, 0x9e950d2c, 0xe6cd13eb, 
    0xf66f1530, 0x9900ff2b, 0x37cbfe7b, 0x31f73f80, 0xafdbfc47, 0xfd9fd1fd, 0xed0174e8, 0xf1d7355e, 0x781b3fe2, 0x74d35073, 0x6fc363fd, 0x3a896fe2, 
    0x7799ee75, 0x0bedcf06, 0xb54e176d, 0x7b566cd4, 0x345c8a88, 0x5e28eaa6, 0xdc2a917b, 0x8b30795d, 0x47116589, 0x6bfde7b3, 0x20875fe2, 0xdde005f8, 
    0xf813fe59, 0xebc2e23e, 0xace5dac4, 0x7a97145a, 0x92b3b3c8, 0xa4255d2b, 0x509789b9, 0x13669913, 0x95248e46, 0x0f6b0be3, 0x99b19196, 0x1fbff6a5, 
    0xf145c97f, 0x7f8efdcf, 0xf500ff1a, 0x55be821e, 0x9afc1ff1, 0xfbcfc3c7, 0xff4bfc1c, 0x153aa400, 0xfe847e00, 0xdfb077ce, 0xe6c6f8dc, 0x46dfc2ce, 
    0xe187b4b9, 0x68c95174, 0xdaac4ad2, 0x5b9176a4, 0xf24ef1c8, 0x91692347, 0x07d9325c, 0x2992a152, 0x78ee56ae, 0x78c05192, 0x26e100ff, 0xf61bf18d, 
    0x7db4d5ac, 0x8358ef4a, 0xc3b4d442, 0xdba54ba5, 0x8488936a, 0x0d9df05f, 0x66677107, 0x6a001b79, 0x1267652c, 0x90a71b6a, 0x37d1ac48, 0xff2efb6b, 
    0xfffbcc00, 0xff2f7400, 0x7fb47100, 0x00ffe1cd, 0xd42bfa9f, 0xb59fe201, 0x42aa9356, 0x2674119f, 0x2e886ff1, 0xc31f5d34, 0x76841a37, 0x224b1737, 
    0x8ca73d4f, 0xe41db17f, 0xa57f3725, 0x747d092c, 0xbeb8a810, 0xa4047702, 0x221e986a, 0x833669f8, 0xe91cbfe2, 0xc5cb78b1, 0x20fe6817, 0xcba59ff8, 
    0x1c797d71, 0x6ebac8f3, 0xe7776f95, 0x29198f79, 0xc52adb3d, 0x696d2a75, 0xaa2c06a1, 0x7fed06b3, 0x0ef91f6b, 0x00ff64fc, 0xff5933b1, 0x35a1d500, 
    0x00ff3e1e, 0x9fe38b92, 0x35fe1cfb, 0x3dea00ff, 0x957c0005, 0x874cf7f1, 0x875ff144, 0xe29ef8f4, 0x97f0e3e5, 0xf696e787, 0xe749e6f2, 0x2a8d6bb8, 
    0x5d0cebda, 0x67895588, 0x02d1785b, 0x0a6fc3aa, 0x7f67b0e0, 0xfd55af35, 0xa2e4bfa5, 0x26f61fe9, 0x00ff4f78, 0xbc3aed51, 0xff3f80aa, 0x000000d9, 
};
};
} // namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(HatchNode, "CrossHatch", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "Filter#Video#Stylization")