#include <UI.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <realsr.h>
#include "AnimeGeneral_data.h"

static const std::string key = "tianlu2024";

#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct UpScaleAnimeGeneralNode final : Node
{
    BP_NODE_WITH_NAME(UpScaleAnimeGeneralNode, "Anime Upscale General", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "AIFilter#Video#Upscaling")
    UpScaleAnimeGeneralNode(BP* blueprint): Node(blueprint) 
    { 
        m_Name = "Anime Upscale General";
        m_HasCustomLayout = true;
        m_Skippable = true;
        m_BGRequired = true;
    }
    ~UpScaleAnimeGeneralNode()
    {
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void PreLoad() override
    {
        auto url = GetURL();
        auto path = ImGuiHelper::path_url(url);
        std::string data_path = path + "AnimeGeneral.data";
        // decrypt data file
        std::vector<uint8_t> data;
        ImGuiHelper::ImDecryptFile(data_path, key, data);
        if (data.empty()) return;
        // create realsr
        m_device = ncnn::get_default_gpu_index();
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        m_realsr = new RealSR(AnimeGeneral_param_bin, AnimeGeneral_param_bin_size, data.data(), data.size(),
                            m_device, true /*fp16*/, true /*packing*/, false /*tta*/, 1 /*thread*/);
        if (m_realsr)
        {
            m_realsr->scale = 2;
            m_realsr->prepadding = floor(m_realsr->scale);
            // preload model once
            ImGui::ImMat tmp(64, 64, 4, 1u, 4), tmp_out;
            float progress = 0;
            m_realsr->process(tmp, tmp_out, progress);
        }
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        int64_t t1, t2;
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (!m_Enabled || !m_realsr || context.m_bypass_bg_node)
        {
            m_NodeTimeMs = 0;
            m_MatOut.SetValue(mat_in);
        }
        else if (m_realsr)
        {
            ImGui::ImMat src_mat, upscale_mat;
            if (mat_in.device != IM_DD_CPU)
            {
                ImGui::ImVulkanVkMatToImMat(mat_in, src_mat);
            }
            else
                src_mat = mat_in;
            if (!src_mat.empty())
            {
                src_mat.elempack = src_mat.c;
                t1 = ImGui::get_current_time_msec();
                m_realsr->process(src_mat, upscale_mat, m_progress);
                t2 = ImGui::get_current_time_msec();
                m_NodeTimeMs = t2 - t1;
                upscale_mat.copy_attribute(mat_in);
                upscale_mat.elempack = 1;
                std::cout << "General:" << m_NodeTimeMs << "ms" << std::endl; // for debug
            }
            else
                upscale_mat = mat_in;
            m_MatOut.SetValue(upscale_mat);
        }
        return m_Exit;
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve* pCurve, bool embedded) override
    {
        bool changed = false;
        ImGui::SetCurrentContext(ctx);
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;
        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string("AI"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[2] = { &m_Enter, &m_MatIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    float m_progress    {0.f};
    RealSR* m_realsr    {nullptr};
    mutable ImTextureID  m_logo {0};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 130;
    const unsigned int logo_height = 130;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 9567;
    const unsigned int logo_data[9568/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03820082, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xfc003f00, 0x288aa2aa, 0x00ffae00, 0x6bb57af6, 0xbf8f00ff, 
    0x1b932d0d, 0x9936f1e6, 0xc9c0c918, 0x5a7f8cba, 0x7fd22be0, 0xda8f6366, 0x1d49e143, 0xd22ce17f, 0x2ab2f47f, 0x24b4a3ce, 0xfc298dfc, 0x683ff571, 
    0x2f3d7d74, 0xd446136f, 0x29c78881, 0x28b91df2, 0xc7a3f9d9, 0xfaf363a3, 0xde69abd7, 0x87f7f016, 0xa2c9bcad, 0x9f0c1049, 0x7d95e1b5, 0x2b1e7af0, 
    0x9faef18b, 0x9df6af0e, 0xcdb6c546, 0x852be268, 0x07eeb4db, 0xd8ef8101, 0x7b93157e, 0xcdfb2be2, 0xb7f6cf28, 0x2541c4d8, 0x73dbecb9, 0xe0771cb8, 
    0xbada67fb, 0x58c60cb2, 0x2a35b094, 0xf4f97459, 0xc4cd51fd, 0x173a75b9, 0xee4ea1cc, 0x3addf6de, 0x7be48ffe, 0x03f18d4e, 0x36241248, 0xb14870b7, 
    0x1e71f58f, 0xacf44715, 0x1a5f899f, 0x384b74ec, 0xad358986, 0xa8e6a5f6, 0xe14d3792, 0x7a9e0d53, 0xce5f0802, 0xc2de16bc, 0xcbe3e6e2, 0x4ef98e85, 
    0x396303d2, 0x15bfabf5, 0x117e2834, 0x283e3a7c, 0x55fba5d5, 0xac25dcc3, 0x7f4a7c3a, 0x0067237b, 0x61b493c9, 0xab1de758, 0xf965abed, 0xae6a0a7e, 
    0xeef27722, 0xcc857d7e, 0x3ec61cb3, 0xcd4e0bc3, 0xda73ecf5, 0x9c7a97ac, 0xfcb55a97, 0xe50c04e9, 0x90babae4, 0xce931a47, 0x013f1e37, 0xf8b173cd, 
    0xd2d6c0f3, 0x255e77f9, 0x7e706066, 0x0ff264c9, 0x7ccdedcc, 0x88dfe3fb, 0xd522de57, 0xcc859a04, 0x163eb2f3, 0x8122b6cc, 0x48adfe73, 0x481d18c0, 
    0xd6bc9e51, 0x4e87784a, 0x50b23f4e, 0x52e63886, 0x71c5fc48, 0xb531cf56, 0x482ea815, 0xf7afb5f4, 0x7de43ebd, 0x72851b3e, 0x72fd0dda, 0xbdebf37c, 
    0x5ffdf2af, 0xc343fbc8, 0xc647f811, 0xbcd06025, 0x7ac9a76d, 0xd67600ff, 0x76b537fe, 0xc170833e, 0x88278d3f, 0xf8a9157c, 0xf56deb6e, 0x637e54b9, 
    0xe5683e9d, 0x7058c55e, 0x2f697c45, 0xc8bced88, 0x628d16c4, 0xa5a4f107, 0x2b0efcc9, 0xa3d97feb, 0xb4d588e3, 0xf8006fab, 0x2b75299e, 0x601fe359, 
    0x79f791bb, 0xdb55784a, 0xc76923b7, 0xaef477f1, 0xdc38c415, 0x3e315503, 0x93e83afc, 0x1dad695e, 0x15d358bb, 0x6c2c38c2, 0x491ab024, 0xfb76a36b, 
    0x84efa69e, 0xe279233c, 0x1b1b5e9d, 0xfcdc2534, 0x7207d9cd, 0xfcd7ab6b, 0x12f8a83d, 0x800b5be2, 0x24bf6e4c, 0x185708ca, 0xe0cb5eed, 0x86af0cdf, 
    0x63eded19, 0x37da208d, 0x290d2f5c, 0x2339f6fe, 0xdfacd98e, 0xf8da108b, 0xc0cec692, 0x3117a45f, 0x641e64c8, 0x8c71434c, 0xd92b0e64, 0xbc78d9fe, 
    0x7a156344, 0xf94c7f4d, 0x1e2c9355, 0x6a2f5516, 0x4f2ffaa9, 0x8d8427f8, 0x74d72f69, 0x6dd9d316, 0x69123926, 0xfc619777, 0xcd1afa40, 0x88abb5d4, 
    0x3e1d1bf5, 0x77ed93d1, 0x09c89c24, 0xde9e6000, 0x68953fb8, 0x739a6ecd, 0x1a8eb4de, 0x327b1738, 0x9c03d083, 0xf8cc557e, 0xe2a5465d, 0xdb69bd0b, 
    0x82314b7c, 0xf9f67a00, 0x3f30b0bd, 0xaa385d13, 0xaac151bf, 0xb5efe474, 0x6197e1de, 0x1733b5bf, 0xdd7dac52, 0x4fd3e9da, 0x76fbd6d4, 0xbde53fb8, 
    0xd4f2fd97, 0xff5cbf7d, 0x3ff69e00, 0x2fb35593, 0x3e06db3c, 0x793487bb, 0xbfe8f4bf, 0x9bafd0f7, 0xfe27eefa, 0x1ff4337e, 0xfebf6cec, 0x92f0a37c, 
    0xc930748a, 0x12452a71, 0x05bb9234, 0x62964144, 0xe60e0078, 0x21f893be, 0x3eeb19fb, 0x0f35493b, 0xe17b4d15, 0x925f247b, 0x4b274bd6, 0xbc2e0999, 
    0x03051489, 0x90c53f68, 0x867ca5c3, 0x65c3303b, 0x4c6c9dd4, 0xf2e357f9, 0x695e9e5b, 0x6a72e09b, 0xa88e130f, 0x6ff315a1, 0xf2b72bd1, 0xb7788347, 
    0x81ef1ac1, 0xae651375, 0x64ba37e9, 0x6e469ca5, 0x6685a4ed, 0x3759700a, 0xe3bedca8, 0xfb5357d4, 0x3f974238, 0xe8c23fb4, 0x936221a5, 0x315a3ac5, 
    0xee061827, 0xd3af7920, 0x47f814cf, 0x8fb6f147, 0x69ae973e, 0x53566ad0, 0x748e2123, 0x54ca5dc9, 0xb0553d95, 0x2348194e, 0x36f91a3c, 0xb552f6e3, 
    0xfff153f8, 0xaf7ee100, 0xffd6eba4, 0x7e77d800, 0x4ba3d32c, 0xb74d463d, 0x51dab711, 0x120321b6, 0x878e030c, 0x7cade7a0, 0xb4c55176, 0x57dc2f33, 
    0x9d4e258f, 0xf3edf453, 0xb8cfcffb, 0x273cc447, 0x0b86d710, 0x5d650f13, 0xbd8cb7ec, 0xd676b41d, 0x533fefcf, 0x4a04053c, 0x98b95057, 0x5a950432, 
    0x2fc74859, 0x9f7e62c9, 0x065f5bad, 0x61e269c5, 0xb6f06875, 0x89e7e39c, 0xfcf33a94, 0x47709d1e, 0xedf04ee1, 0xe18fb6b5, 0x69c246fd, 0x97b7c955, 
    0x3901ec0a, 0xd6eff46c, 0x29fee9ad, 0xb8bd45d3, 0x1f399ab5, 0x248d4768, 0xf88ec352, 0xac557a3d, 0x86123064, 0x76b5492e, 0x3fb6bcec, 0x791ef3a0, 
    0x55177442, 0x961bbd6f, 0x86b31cde, 0x78eb3bfe, 0x1791b622, 0xab8d1060, 0x9afae49e, 0xb2fdfafc, 0x78dc31fe, 0xe605e293, 0x04a30e95, 0x1d6f16b6, 
    0xc10c47ba, 0x0c57ed8a, 0xb31c3c78, 0x2bcef429, 0x7c1f7fed, 0x67f0be43, 0x5df56f85, 0x5e7dc23e, 0x56cc24e6, 0x81b9c7b0, 0x646c063c, 0x4ebc5fed, 
    0xa2fc0a3a, 0xdca499f8, 0xebdca8c9, 0x05cb9117, 0x2fc8ddf5, 0x1d5ea11b, 0x1d419277, 0x533fc949, 0x6796415f, 0x6a97f3b5, 0xdf1725a9, 0xe2972f7f, 
    0xb61cd878, 0x2b551a18, 0xd52fba2e, 0xa84f42fe, 0x4636f10d, 0x19cf1939, 0x71b736ab, 0x5bdbdd5f, 0x5916bb3c, 0x8c941951, 0x7f32dca8, 0x7685bf0e, 
    0x79c357fa, 0xd6d9df35, 0xd2b650c3, 0xd3bb0bf5, 0xcddd5ca9, 0xcf6a6f73, 0x316c701c, 0x021d6729, 0x30bd7bb4, 0x1df39a5b, 0x337c2e15, 0xdedc58af, 
    0xcd0d4bda, 0x4d52d485, 0x1b85706b, 0xb24a60e5, 0xaf47469e, 0x2b847dad, 0xdd568a2a, 0x3978c65c, 0x676f7153, 0x31c65f63, 0xd6131e6a, 0xfbab746e, 
    0x88b82079, 0x0419bdf1, 0x8bec7e88, 0x1f460990, 0x06c13d30, 0x8dcff0a0, 0x7f3dfc6e, 0x2b6fa306, 0x2f322cc7, 0x9c82adcc, 0x7da51ff5, 0x852fe371, 
    0xf50f00ff, 0xafb409dd, 0xdec6781c, 0x91ededc5, 0x2be231fc, 0x8f60f8ab, 0x70cc2dec, 0x31ab62a8, 0xb6dcf08c, 0x49195241, 0xe39b7cc5, 0x9ef7851f, 
    0xa1d5bf19, 0xf1222fd1, 0xcd708f86, 0xa4a58615, 0xc3157103, 0x1996cfa9, 0xd3265301, 0x3d4e8a92, 0xb717d7fa, 0x9c0e2286, 0x28941efb, 0x8d55c254, 
    0x8f662f6a, 0x7c107ebf, 0x8857f158, 0x71650bfc, 0xbb7519f6, 0xa6d5d579, 0x61913682, 0x2c70e360, 0xbc0cc701, 0xd57d7e7b, 0xd69757ac, 0x368d7b62, 
    0x65973c4d, 0xf1c0e808, 0x2d5e91df, 0xfc0400ff, 0xb30e93f8, 0xcde04da1, 0x8a65ca47, 0xc6dbb63f, 0x0bee00d2, 0x39632203, 0x7f3c7b3f, 0xbae3be76, 
    0xc11634fb, 0x21361f5a, 0x38ce28d0, 0x629151eb, 0x287581e5, 0x8a9e74b7, 0xc1531ffd, 0x333c9ce2, 0x0a6ac619, 0x5d5aad0d, 0x297e8f4f, 0x8997ce5f, 
    0xbd64dba2, 0xdae58dd0, 0xe0044032, 0xfc39f511, 0x5e115d2a, 0x85b34ccf, 0x8d270288, 0xf8e7384e, 0xdf9ae78f, 0xed8a8ff1, 0x5e16ef34, 0x6dad2d19, 
    0x57f99024, 0xd815c828, 0x0b904200, 0xd71c3870, 0xf49aeb9a, 0xdb835a97, 0x299296d9, 0x33122564, 0x633ca79e, 0x9557e43f, 0xb82ae288, 0x298c5bbc, 
    0xfa2ebd7b, 0x1a76b91c, 0x1b0a2a18, 0x549bb0b3, 0x06d49564, 0x02193120, 0xdfacfd9b, 0xb9ca6fdd, 0x90dfa1d1, 0x6eec5f0b, 0x1e41ceea, 0x0afb97c6, 
    0x0382fef7, 0xdb35fbfe, 0xc89fcaf5, 0x8f7d767b, 0x7f637f90, 0x1e1ed680, 0xc4bfedf0, 0x1b41101f, 0x997177ea, 0x8d71f1b4, 0x00ff9696, 0x039edbf3, 
    0xcb1ee430, 0xbb35998e, 0xe7f627f1, 0xe7848ff0, 0xda0d4f6b, 0xb4cbe249, 0x12499291, 0xe3ba0543, 0x5b85ac1c, 0x4070727e, 0x8c711dc7, 0x97b63ff3, 
    0xdfc19b8f, 0xe03bfc0f, 0xb3671e7d, 0x6b15425d, 0x1b608084, 0xc72ad448, 0xdd02e49c, 0x272fe480, 0x91891f1c, 0x0303b077, 0xc6f9b53e, 0x7f862603, 
    0x93996639, 0x58be496d, 0x3b45c9de, 0xadfbf52b, 0xf3e7dedd, 0x34c355fe, 0xb3acbab8, 0xc6b9edec, 0xee74aa6d, 0xa54d50d2, 0x4df26b7b, 0xe97b775f, 
    0xbbf175fa, 0xcff094f6, 0xb5469bc1, 0x1fed5f9e, 0x3d0b4b11, 0x866f9bbe, 0x4649db28, 0x42e4e798, 0x12a41ed8, 0xf1353840, 0x797c8147, 0xdf8c1fe2, 
    0xdbc3bfb4, 0x52ea10df, 0xe275734f, 0x82083a5d, 0x23dbb17c, 0xc402465d, 0x7e06c2bf, 0xf324a9a7, 0xaff1815e, 0x75f12ff6, 0xebacb186, 0xfb971bbe, 
    0xae254a7f, 0xb4dd3304, 0x4b0189da, 0xdea0ec36, 0x16000872, 0xd7d49163, 0x5bcffe90, 0x2bdadfb4, 0x23daa7e1, 0xc5df9e78, 0x8e98675a, 0xee56ca30, 
    0x420f823c, 0xf8bbde31, 0x61960173, 0x83adb2f0, 0xb536a99a, 0x5b9b567d, 0xbfa7feec, 0x904ff6e1, 0xbec6e8e0, 0xa8565157, 0x392dcded, 0x785bfa95, 
    0xd5b62eaf, 0xdb7ef6b3, 0xd5f0ba5d, 0x547cd1e8, 0x2d85ac72, 0x3bce4e75, 0x39bd3e06, 0x75caebfc, 0x69dc19af, 0x50dced7a, 0x4e08b3b1, 0x8f25691b, 
    0xbd5e00ff, 0x3ee81b7e, 0xda57ea23, 0x52b4fd7d, 0x6d5e1441, 0x53c194ab, 0x27270892, 0x79c53182, 0x1a6dc427, 0xb5de097f, 0x505d8a98, 0xca5259a0, 
    0x05f30cd5, 0x08e8c1c1, 0x3d394640, 0x0861b5c7, 0xafb5b3c6, 0x90fed0e5, 0x69d530cd, 0xd0e895c7, 0x09c49f9a, 0xc32a0d35, 0x69519b4e, 0x16a7d4a6, 
    0x526e05f3, 0x31ca0b10, 0x3f57a8ee, 0xbfcb57ed, 0x675d7c1a, 0x4f1c5fe2, 0x48e26c61, 0x67599621, 0xcc573091, 0x5f38e669, 0x7e154965, 0x894f6aaa, 
    0x9bd638fe, 0x2b1b8250, 0xe026ed0b, 0xd927e0c8, 0xac724e8c, 0xd89313ac, 0x9333aff6, 0x783a7d4c, 0x9e274e5e, 0x3fb3c9d8, 0x0f206f74, 0xf53517ae, 
    0x1a536e39, 0xcd6e560d, 0xa1e797ec, 0x24ad31f3, 0x9f5bf6ec, 0x2e3eeb54, 0xffe08ff8, 0x65410700, 0x6dd6cef0, 0x447ac33b, 0x28d85991, 0xb5b95bb1, 
    0x6926e83d, 0x6c2367e6, 0x0d90642c, 0x3db0aaa3, 0xc277fa78, 0xe7f0083e, 0xa225fc8e, 0xf0225e6b, 0xad1e936e, 0xda1f6571, 0x1dd59620, 0x46d56163, 
    0x92830a46, 0xc508e8b9, 0xa3ec4778, 0x4100fff1, 0xa59d7ef1, 0x26f112f8, 0x8a6d754d, 0x18c7e7c7, 0x542fe082, 0x71925c42, 0x67206df3, 0x6f7dc5e6, 
    0x6ea96e6d, 0x8cf2cb88, 0xfc741400, 0x0a6dbfa9, 0x7e594dad, 0xe873ef37, 0x9f4ee8e6, 0xef5e1935, 0x633c56fa, 0xe1eccfe3, 0xd14efca5, 0x94b220ec, 
    0x80daf0e8, 0x6d595992, 0x4ed1298a, 0xb47105e4, 0x0cc4626d, 0xaf771b7f, 0xb4081f36, 0xc378062f, 0x5d3ab6c2, 0x8b746a8c, 0xf7eba943, 0x773f80ad, 
    0xbb02c102, 0xd74e000c, 0xa527a06f, 0x422c6d7d, 0xe7102a64, 0x83aff7a0, 0x8abf6ebf, 0x96f7447a, 0x6ed00bbe, 0xdc59ddcb, 0xbdac71cb, 0x8a1902be, 
    0x038b4805, 0xfb8d32f3, 0xa3121c81, 0x46070439, 0xb4d7ea84, 0xf256f524, 0xe221765e, 0xa9e86169, 0x77e55754, 0x3c577ef3, 0x8dafe14f, 0xe31f3cef, 
    0x426b5d9b, 0x67cd10b8, 0x236d13a8, 0x1c0b8570, 0x6400ff06, 0x13fb20a9, 0x101ea85f, 0x1f74a0fd, 0xe8ddd91d, 0x6ff6278d, 0x2e052289, 0x11c77b74, 
    0xbe0f1b4d, 0xa30eb7a0, 0x0f461db1, 0x13f22b1d, 0xcefeb94e, 0x3869e5d1, 0x07489077, 0xedabbd7d, 0x4f1f0d9b, 0x0e7ea5fd, 0x00ff1a69, 0xd362af87, 
    0x62f827fe, 0xeeee6d38, 0x99db90e5, 0x334250a3, 0x2a5b0c15, 0xf3712ba0, 0x46800406, 0x2f7cf37a, 0xcb17a525, 0x6fdfca75, 0x28a7c053, 0x35cae962, 
    0xdebfb716, 0x5ddb786e, 0xeed6508b, 0x768ec318, 0x03648c81, 0x7cb3d281, 0xffd78834, 0x42966a00, 0x30cc4691, 0xc0434f0e, 0xf14e43ae, 0x7588e7dd, 
    0x4a7cd226, 0x2efee9b2, 0xcd050bb5, 0x3162d4b5, 0xd1800431, 0x1b4990e0, 0x3cc9c879, 0xb1e81575, 0x999e1d45, 0x31b6b600, 0x891215b3, 0x03e71094, 
    0x15991e77, 0xbeb060e6, 0xbaead1ce, 0x47befe74, 0x6e3a6834, 0x9b856eef, 0x6e386a8d, 0x404a8c25, 0x7a822b56, 0xdb7fd460, 0x3d00ffe9, 0xcd52e78f, 
    0xce33bde2, 0x63e91193, 0x73103ce6, 0xf09fe9fc, 0xf39fe995, 0x8ffc4acf, 0xcfadd7f8, 0xf745fe89, 0x487f599a, 0x0ff1f8fc, 0xdadf3585, 0xf7864f9e, 
    0xb824267a, 0xdae9204d, 0xf7c7d4b5, 0x26417276, 0x4dc7e41d, 0x5e6544e2, 0xc7b177a7, 0xbf087fd4, 0x0500ff65, 0x668528fc, 0xad75cd8a, 0x2e09a361, 
    0xae46a8a1, 0xc664f373, 0x773062a4, 0x06708e63, 0x7cceef49, 0xfe0f5f38, 0x0000ffca, 0x101fb5ac, 0x38716f83, 0xb7c58b5b, 0xdcdc93c4, 0xa0b132c8, 
    0xe042723b, 0x92028063, 0x2c5f534f, 0xacfd557c, 0xfde373fc, 0xfdb47842, 0xd141e35e, 0x686b7792, 0xd2d6d2b4, 0x7c1b79b4, 0x902456c6, 0x191b7006, 
    0x971fdb27, 0x9d6196ca, 0x043c78ca, 0x0d1a9ebd, 0x3600ffab, 0xdddef4ad, 0x53dfd616, 0x0cad92f9, 0x54aa8aeb, 0x9e8ab2cb, 0x524a03c3, 0x9fab368f, 
    0x6a4b6fde, 0xa52bd9d2, 0x8bbe5b6d, 0x51beaaf4, 0xefe3bbf8, 0x1f3fb785, 0x636f0f3c, 0xe3b526a3, 0xcd7e6d1b, 0x3a3d756e, 0x6121257f, 0x32b28032, 
    0x60752682, 0xc1382ebf, 0xb822871b, 0xf607da5f, 0xd6c497cf, 0x05f04463, 0x9f96cdcd, 0x7fc3722c, 0xa96c717b, 0xb4cbea24, 0x55628908, 0x55722c48, 
    0x45301058, 0x9bc04778, 0x70fcb0af, 0x147279f8, 0x5ac48731, 0x20239874, 0x5733e6e2, 0x5b319cc3, 0x8bdbfe0d, 0xd1ce2e6e, 0x00ffa74d, 0xdf977f6f, 
    0xf7f0e9d8, 0x66797181, 0x61ae1922, 0x667f4239, 0xfbf7b409, 0xdd8e9a7f, 0xfeaf1ffb, 0xbd5df114, 0x5697ec8d, 0x036186d2, 0x21185729, 0x9d35c0b8, 
    0xed699de2, 0x88332f7c, 0xe406f784, 0x3f39cd5c, 0x86e0993c, 0xc7e9483d, 0x64a5074e, 0xdfeebef8, 0xbae4d552, 0x1d6d89b3, 0xec2258b0, 0x9e60f900, 
    0x3fd67b06, 0xec29f588, 0xdc5cf6ac, 0xcaa415c5, 0xc0435aaa, 0x15fed427, 0x2527bced, 0x67a73795, 0x78d91ff9, 0xa962d18c, 0x779a5854, 0x744d569b, 
    0xe149877e, 0xc7376d4b, 0xc58d5a77, 0x2571438b, 0xb55498bd, 0x89142bba, 0x5448b3b8, 0x57f78313, 0xbe027624, 0xa8dbf833, 0x5e223e40, 0x90cd9e35, 
    0xe8ec8c14, 0xf891dc4e, 0x5ee16f67, 0x6da526f7, 0x6f7ddbe0, 0x45489a53, 0x2fab51ac, 0x10b7db96, 0x49ce733b, 0x1accf215, 0x4de3ab56, 0xcbb4ad69, 
    0xfe4e9d1b, 0x9bbc6966, 0x33becb68, 0x1c7420c9, 0x867d4d8e, 0xce690e4d, 0x4f4b56a3, 0x62c4e79e, 0xaad9cbaa, 0x2d61766b, 0xa356fae4, 0x719fee05, 
    0xcaf0b42d, 0x98588625, 0x393891a4, 0x20c81104, 0xcfbe22f4, 0x00ff98fd, 0xf81adf6b, 0x5e56c5a7, 0x5922f115, 0x0cc931eb, 0x2183ba8c, 0x4de4e78a, 
    0x955f31c0, 0x73bb8eb3, 0x7e5b3b5f, 0x97313ecf, 0xb6b5bc69, 0xf59f18d3, 0x78037777, 0x236eaafa, 0x7fa2aff1, 0xded90f67, 0xd4dac0f7, 0xa6d5295e, 
    0x32cc9db6, 0xb41d6fc1, 0x60b3c48c, 0xf8830c67, 0xedb50e77, 0xbac31366, 0xe9f25e2d, 0x5b4eee6d, 0x627dc585, 0x1d6a512e, 0xf5b1a26f, 0xfb9e786b, 
    0xed2c995f, 0x7e13b100, 0x9f3bb8ec, 0xfcf63a9e, 0x6fcbaf39, 0x5972168d, 0xacf1647c, 0xe3953153, 0x9c552fd7, 0xee84b9f3, 0xbfd6e709, 0x2d29964a, 
    0x195967a6, 0x8da01c58, 0x937ab4b1, 0x35d7f8eb, 0xf8087caf, 0x2b56f173, 0x2c4af8af, 0x83d4622e, 0xa47dc13b, 0x9129453a, 0x48ca58b2, 0x0e62fe3b, 
    0xbce63c48, 0x1296139c, 0xba55ad4e, 0x439fbab5, 0x88e36199, 0x4e47a1a4, 0xcc4f7d5d, 0x11dd98f9, 0xc031ce21, 0xb31fe935, 0xcffbc5bf, 0xb23dde83, 
    0x926723d5, 0xefd90fd1, 0x00ffc16d, 0x78df6c5f, 0xee51477d, 0x58d3bda2, 0x788200ff, 0x496bbef8, 0xa92d7cee, 0x31ccfa68, 0xdecc5692, 0xae63ddba, 
    0x73517808, 0xa7f235f4, 0x7d3bbc89, 0xcf11efe0, 0xc95aa961, 0x2b6d7b65, 0xcadb5c5b, 0x38303aa4, 0x5e638f20, 0x1943e7d4, 0xfbbd5309, 0x2a9fbaae, 
    0x3b0d57a1, 0xda8feeb3, 0x5e56c033, 0x3c2cd334, 0x93cea551, 0x27684b59, 0x7c80bab4, 0x636053de, 0x57ac703d, 0xaa03478f, 0x5bf899d7, 0x27be97c5, 
    0x4d69baf0, 0x45a77d23, 0x95b26998, 0x60f14c1b, 0x08fe5888, 0x1ee0fac0, 0x657fb7e6, 0x783188df, 0x00ffe0bb, 0x7b073c8a, 0xa5a3be3a, 0x63a52643, 
    0x168491f6, 0x36d409bc, 0x3e249573, 0x732cc031, 0xbfe03b5e, 0x1fbed68a, 0x5fe2b3f8, 0x6e60430b, 0x5bbf5357, 0xf738de78, 0x6021b348, 0x1b78878c, 
    0x07796209, 0xe42b708e, 0xdc61aa20, 0x575e4ba9, 0x4ad31ef8, 0xb95dbc71, 0xbf2da58f, 0x5d122f67, 0x473a45db, 0x0e54b267, 0x08ce2033, 0xff49a5cf, 
    0xe2d50c00, 0x67e7f96f, 0x077f00ff, 0x9f2457f8, 0x0a67fc17, 0xdcad692c, 0xaada20aa, 0xd40ee008, 0xfcb8f0bf, 0x4100ff6b, 0x57cc9fdb, 0x779fb657, 
    0xce9e1cf8, 0x7ffef29f, 0xed9778e6, 0xe23ff059, 0x8f5bc67f, 0x47f8590c, 0x9a6a73c3, 0x6e2e8465, 0x10415e02, 0xdac0965b, 0x4a52e455, 0xc7408eaa, 
    0x5eeb79cc, 0x00ff633f, 0xa3fdda04, 0x8f7c10f5, 0x009cd286, 0x4f5f7d7e, 0xe00afd4f, 0x2762eb57, 0x2b9e21fc, 0xcfb4d5bb, 0xeb367d2a, 0xe4159e61, 
    0x4fce2143, 0xfb1c9cd0, 0xf8bd4e91, 0xb569e28d, 0xd49bb632, 0x640ce264, 0xcc1f3b1e, 0xe50a6fd7, 0x7c19f1d4, 0xa55df470, 0xeebbf74e, 0xead64edb, 
    0x8446677e, 0x4b074bf8, 0x82375a07, 0x57cb4a72, 0xbd5b3def, 0xf3cdefae, 0x457c213f, 0xf20400ff, 0x277ca0fd, 0x78abcb0a, 0x89d56c09, 0x4e6f1d00, 
    0xa2679c63, 0xabd213dc, 0x46f62778, 0xf8a3c3f8, 0x8fd442c3, 0xec081e85, 0x69b8e0ef, 0x3eb551d7, 0x8b154958, 0x633c2971, 0x17e9573c, 0x2ef107ed, 
    0x9578024f, 0x988bb5ad, 0xcb12aff5, 0x4c99266e, 0xc8b3bb9f, 0xea8055f9, 0xdbd10edd, 0x5f3c78bd, 0x1d4f3c1f, 0xbd1ecdda, 0x06f36f73, 0x08148654, 
    0x0701e839, 0xd4d1d7f9, 0xc7a9e0c3, 0x97543991, 0x7e941657, 0xefd9a64d, 0x5a63de61, 0xa5e4ab4a, 0x72578a0e, 0xac266d7e, 0x53843f7b, 0x2dd1bc5d, 
    0x9124f125, 0x9619a7ae, 0x6d878d32, 0x65490198, 0xf6fb3dc8, 0xe1db78a7, 0x103b1edc, 0xd6445a5a, 0xcdb154fe, 0x48a0b2fb, 0x09461054, 0xf9e3ce18, 
    0x9f83af55, 0x8aaf341c, 0x1c5e947a, 0xdb5a7af1, 0xcb0777ea, 0x906dd7b2, 0x6467de44, 0x0f823399, 0x437dc5a8, 0xc3fbf067, 0x7df01ffe, 0x89e8ade5, 
    0x6d5b996f, 0xb360b2d4, 0x3a6eb7f1, 0x30b8960f, 0x254f7ef9, 0xa6681fc9, 0xbb78c39f, 0x75f7aa5f, 0x34376e47, 0xe7d568cf, 0x0d4e1aab, 0x5969a536, 
    0xb9c5a7db, 0xdff1f7f9, 0x3fc407e1, 0x69595d14, 0xd28036ba, 0x67a07069, 0x1f415d9c, 0xc3c0739c, 0x49723c38, 0x1d2309c6, 0x9efdac2b, 0xc3b70a3e, 
    0x58eb0e7d, 0xbe16e0d6, 0xdb32b927, 0x8ecc1ac9, 0x08f9b663, 0xcb915052, 0x7aaf1b46, 0x4810aff6, 0xbab61afe, 0xd3044992, 0xab0a0907, 0xd0ed0c6e, 
    0xeb62b52f, 0xf049e316, 0x5bb804ec, 0x7c3a8f81, 0x91e42467, 0x57f991f9, 0xe1c18aa3, 0xa732bcb2, 0xbdd5db06, 0x9211e07f, 0xdbbc38e6, 0x31ceea18, 
    0xd192158c, 0x9d5e6fdf, 0xbc1839f5, 0xcbfd3539, 0x96e471ac, 0x939c1ce3, 0x4c77bdd6, 0xac0dfbb2, 0x28ba7110, 0x40d171c2, 0xadd7071d, 0x4d577863, 
    0x67c53a4d, 0x5f9e6462, 0x00757b9b, 0x2686aef4, 0xf4f50b1b, 0xa19eaff7, 0xbb277505, 0x66d20ffc, 0xbb218bda, 0x1000a060, 0xd80c57a7, 0xd9a7f538, 
    0xb4110c47, 0x1d2795f1, 0x6a8f8354, 0x04f1a1e2, 0xe48e97fa, 0x92548ab3, 0x5a59d9da, 0xc6785e37, 0x6c483de2, 0xdc535d73, 0x853ce602, 0x1e1917f3, 
    0x6d8d7fc4, 0x5ec45046, 0xfbda6c69, 0x4129598e, 0xc2a77aa4, 0xde5fe543, 0xb64f376a, 0xc948780b, 0xf09f27f5, 0x00ff8daf, 0x0a3fa6e0, 0x13efb4ad, 
    0xd33dfee8, 0x5ddf02a3, 0xd1ce0543, 0x06c4e781, 0x8100ffd7, 0x83ef3f26, 0x72684f5f, 0xb5cddd35, 0xe16d9caf, 0x9e430676, 0xfea40e02, 0x79fb8f15, 
    0x33de56e8, 0x6b7309f8, 0xb9b8a8a7, 0x6f6daed2, 0x38b95821, 0xfe76f267, 0x655e4122, 0x656c0cdd, 0xd08f1e7d, 0x72d2c7e0, 0xb5d5929a, 0xc17f49f2, 
    0x673f393f, 0x271300ff, 0xe82dbe86, 0xb1484e53, 0x2e2c79ba, 0x191af0d4, 0x7f70a1d1, 0x5fe1cf07, 0xe04b7863, 0x6f6bc3e7, 0xc8e24d1b, 0xec2d2334, 
    0xc85b4586, 0x0c2029a6, 0x95730508, 0xe30c04c8, 0xe46bc6a0, 0x51f80e3f, 0xba8ecfb4, 0x567e860e, 0xa06dd4b5, 0x0a19bd99, 0x08fd84f9, 0xdc57f863, 
    0x0ff6ad96, 0xb10e6edc, 0x98dda8fc, 0x6e57840e, 0xf91c942e, 0xf49c589f, 0xba6c945c, 0xab491e3b, 0x9a3626fc, 0x4e10ecad, 0xba5304ef, 0xdc19cf46, 
    0x9c003154, 0xff54c577, 0x375d8500, 0xf73ff5fc, 0x8be9abed, 0x1dc5166f, 0x94624ab4, 0x50324095, 0xa4d6c773, 0xc28400ff, 0x27e3f91f, 0xe015fbfd, 
    0x9f7a64fb, 0x9df29f56, 0x542d862f, 0x35afd769, 0xcca551a4, 0x438607c6, 0x22f41080, 0xd0271bba, 0xc5a73f7c, 0xa388dbf6, 0x1318b6b2, 0x4ee67ec8, 
    0x8a533f39, 0x1300fff1, 0x84c7ba6a, 0x26ac6974, 0x1afd9ab9, 0xf1b7f630, 0xec565639, 0xf4a163b3, 0x5f7df26a, 0xa6a346e3, 0xb716cfe8, 0x67dea272, 
    0xc1681f54, 0x9224e38c, 0xfc405e4f, 0xac58c1eb, 0x147c2775, 0xd5776f92, 0x9a7fd3eb, 0x353c3338, 0x2b8cb33a, 0x0fbf3d7c, 0xcfe463f8, 0x58ab7810, 
    0x33f197f8, 0x26759e5b, 0x79b851f7, 0x2a243994, 0xa3bf0a97, 0x68e0432d, 0x215ec5db, 0xfde72e4d, 0x2022cc17, 0x9723cbed, 0x913b900b, 0xb7eb9d9e, 
    0x9f1d31f8, 0x6b26fe8c, 0x9d46bab7, 0x9b94ba6e, 0xd8159546, 0xbc5f4c1e, 0x78c65801, 0xda21987f, 0x7a47c678, 0x8fe103fb, 0x4f0e2fc0, 0xc7da68a0, 
    0xa6273c8b, 0x32cef8d8, 0x61f4e51a, 0x566440e4, 0x8c225c05, 0x8e044802, 0x1babf795, 0x24a592ec, 0x812562ef, 0x74c45255, 0x073ef06f, 0x7c8597f1, 
    0xc487f067, 0x67b5164d, 0x43cc952d, 0x88bdb7ce, 0x915186ee, 0x413dae82, 0x4bbfdae9, 0x92e807fe, 0x73f849fc, 0x3f66fde1, 0x6d7b4912, 0x2399a235, 
    0x28090694, 0x5ecf6518, 0xfb7cbd0f, 0x16e187f1, 0x222de08d, 0x56f15bfb, 0x8678a9bd, 0x565e6ec5, 0xa799599f, 0x8c22de8e, 0x6c34de12, 0x02c696e0, 
    0xe39a36f0, 0x9f6200ff, 0xf0582bda, 0x9bfed51d, 0xafee1579, 0x3e7d8be1, 0xedd3f76b, 0x444b92c1, 0x550621f3, 0x39a3ea5e, 0xc7cccf51, 0x13b1ce15, 
    0x828ca19c, 0x9ffe86b3, 0x3716b6d6, 0xf0346c09, 0xf58cd75c, 0xbef0cbb7, 0x893ef2d7, 0x0ba093f8, 0x9695151f, 0x4e8706fe, 0x7502cb40, 0xf05be877, 
    0xd65c1bae, 0x626dd760, 0x17535681, 0x761217da, 0x6afd9127, 0x323e882f, 0x8178195f, 0xe4221df5, 0x285fd9dd, 0x698b6b7b, 0xf6a11209, 0xe641fd1d, 
    0xda4a6aaa, 0x3162876f, 0x3ae5cd40, 0x4b0670ee, 0xf35a1f7e, 0x8e17339e, 0x96572b75, 0x7d59d992, 0x61949dc7, 0xe9741696, 0xcc2f5941, 0xa05b7bf4, 
    0x051c50c1, 0xd4e55651, 0x0b315184, 0x1538a390, 0x22be69c5, 0xbb12a389, 0x65c04c79, 0xdb23805d, 0xf15d5315, 0x1284a5f5, 0x3d31772c, 0x3c122ecb, 
    0xfbdc93e7, 0x4a7ebd57, 0xfbd8a36e, 0x53bed919, 0x3697c367, 0x5fdfdc93, 0xdcb32aa4, 0xc0a4b949, 0x71807b6e, 0xe457e9c0, 0xb65407b8, 0x58528825, 
    0xff4cb763, 0x7ce34a00, 0x1aa4ac33, 0x5787514c, 0x52706794, 0xff7bce01, 0x6d5c8d00, 0xb7be4766, 0x36b31c5c, 0xed0047d2, 0x0cafd23f, 0x6fb170b9, 
    0x14f2fe7d, 0x8f4d576f, 0x9defd24c, 0xc6c1599a, 0xf6a8ddef, 0xab7dfeef, 0x7894ef71, 0xcf52c463, 0x6f45df0b, 0xd070cba6, 0x3cc632ae, 0xcae93148, 
    0x2f2ce28a, 0xaba27184, 0xdee3b87c, 0x761df4b7, 0x97cd5b2b, 0x70634b40, 0xbf30170c, 0xe12692dd, 0x6a421f81, 0xa252d02b, 0xe61cb5ec, 0x7ec778e5, 
    0x27f3a19f, 0xa6f0d7ec, 0x31dec5fb, 0xaa7b7cd5, 0xead634db, 0x94368bb3, 0x2e37ed67, 0x508f3318, 0x717d1e0b, 0xe33f5ee9, 0x781200ff, 0xdff14f83, 
    0xb5c8f48a, 0xded2429d, 0x0ded523d, 0xa82e77ac, 0x02c69998, 0x0a7b00e7, 0xadd12afd, 0x790b2b34, 0x320db42c, 0x85b44edb, 0x8960389e, 0x7f830856, 
    0xf78c17b0, 0x5fef73cf, 0xb23f6b22, 0xfcafa1f6, 0xfe4df155, 0x4b0b3bad, 0x986b46ad, 0x245dd3e2, 0x5d49d695, 0x23744bb0, 0x5a0f1e20, 0x8d8bafe0, 
    0x13758e4a, 0x876ee956, 0x653d0c87, 0xfafc506a, 0xade0d19e, 0xc1436d72, 0xf6d40dba, 0xd8f3bc71, 0x6e23cb5b, 0xa4c6585e, 0xb6a6be9e, 0xfc4fb4bf, 
    0x00ffc7f8, 0xd7f8af7d, 0x56f0613f, 0x6b1b1b6b, 0x5cf12768, 0xc71ac330, 0xfce8621c, 0x710000aa, 0xff5400c7, 0xeea7f000, 0xefe700ff, 0x14f87fc5, 
    0x6a7be1d5, 0x7ddc9f1d, 0xfcafb207, 0xe82befcb, 0x478c333e, 0xe4fd17ab, 0xc714a1f7, 0x41a79c3a, 0x19b8a79d, 0xbbde78c5, 0x3fc36ff0, 0x3e4b3c14, 
    0xd5257191, 0xf24ed4bd, 0xdf46fab7, 0x1ed07134, 0x5a750d3d, 0x00ffa926, 0x6d0b220b, 0xf2d9096a, 0xb1bc539e, 0xbcac6cf9, 0xf7b92715, 0xd7f12baf, 
    0x093cae8d, 0x6aab716b, 0xc8152f56, 0x0eb4c89b, 0x7ef269d9, 0x5105fa66, 0x0a7d00ff, 0xad460dc3, 0xbf41a729, 0x963926f8, 0x3a29eb23, 0x7e4b4a90, 
    0xe763b7d6, 0x97576b3d, 0x962dfec3, 0x7bbc45eb, 0xcfdbf459, 0x4e78d232, 0x2bb0d53f, 0xaf41e5f5, 0xff663fbf, 0xd7e6da00, 0xfaac0de3, 0x4ba2a966, 
    0x7d9aeba6, 0x2d71cbba, 0xc304ddb1, 0x752f7721, 0xfd9c9e24, 0x070fe66b, 0xeaf1cb7e, 0x35d30e9e, 0xb9507ffd, 0x79447d8e, 0x28db5891, 0x4bf8531b, 
    0xe7b03a12, 0x6bfa5a8f, 0x0dc28fe0, 0x86c6e10b, 0xa3651ad7, 0x9b7c7d45, 0x2c569a67, 0xda979dcc, 0xa916d7be, 0x0ace1e4e, 0xcc7f5df3, 0x3134b0f1, 
    0x55dad31e, 0x6bf5a676, 0x1ebb95af, 0xf87efb25, 0x7cd55cfb, 0x12e8a251, 0xa8f0b496, 0x85d44bb7, 0x4b4a1247, 0x09ddce0d, 0x643b7000, 0x2f7c83d7, 
    0x7caa9df8, 0x95eef128, 0x40266de2, 0x4df9d81a, 0xd0a40c0b, 0x0e1b0db7, 0xfd5a87e1, 0xd2459723, 0x6d7bb575, 0xd6b14667, 0x5e1bd6b4, 0xaf83d82b, 
    0xf7419ee1, 0xb45fe315, 0xe173ec97, 0x6a0b3e48, 0x2ef03c9e, 0x5fa67599, 0xdcb2c858, 0x9269de69, 0x12b96e03, 0x082c6732, 0xc2bf9eca, 0x4eab5269, 
    0xaa87259d, 0xa35f7ab4, 0x3cdc7866, 0x21e255a3, 0x79f72f2d, 0x9332de18, 0xe953f04a, 0x1f3c103f, 0xeb016f19, 0xb1b9b9d8, 0xe56df946, 0x7f0a8963, 
    0x2b278171, 0xda3fb8d2, 0xb5aee21f, 0xede1d7f0, 0xb27f89b7, 0xdda3dbbe, 0x1c61a96a, 0xf3c3e062, 0x09483234, 0x2a3f5bf9, 0xdbdf311e, 0xcee0779e, 
    0xcff8aabb, 0x7e8c1fe1, 0x77acd91b, 0xd485831a, 0xb099a5b4, 0x4948c8b1, 0xbb634f06, 0x8f5ce177, 0xffe08ded, 0x4bf81900, 0xa18417e0, 0xbbc88df1, 
    0xdc4a6dbf, 0x81bc25cb, 0x5ce40fa0, 0x6e1ca300, 0xcc6bbd0a, 0xd530eda5, 0x7bf69d7d, 0x3a335ffe, 0x751e9dd6, 0xbfece5d8, 0xa2ac396f, 0x030f3c08, 
    0x00eadc81, 0xaf1ad21f, 0xb672fb7f, 0xcf1471a1, 0x9029cfe0, 0x50adfb83, 0x1f393829, 0x7ca5c3f2, 0x8b7b45b1, 0xa37d5d19, 0x3b94fde7, 0xfb475a1f, 
    0x4fe2ed7a, 0xefab7903, 0x90fee0ab, 0xb7bf6952, 0xb2663a84, 0x017e84fa, 0x50da74c9, 0x1caf27eb, 0x18f4c8e7, 0xa22893af, 0x15d5ba78, 0x5ff2efa6, 
    0xf8466be4, 0x6dd27379, 0xbf7d563f, 0xc014fc1f, 0xc27fa0c6, 0xff1dc9b9, 0x7f3bb700, 0x3f4835e0, 0x0faca6e0, 0x3d8e93fc, 0xfb7fb73f, 0xd324be9a, 
    0x5f9deb74, 0xb3b0b551, 0xbabba789, 0x24862095, 0x2ac4eeea, 0x8124f7a8, 0x43fbc55e, 0xfed2197c, 0x129ee91b, 0x303f3cd5, 0x6defd2bd, 0xd4d5ad4d, 
    0x97a43372, 0xe0481c91, 0xc0b9819e, 0xb6867c1c, 0x561143a3, 0xf8f04a85, 0xddfc6b61, 0x18fbe1bf, 0x618178e2, 0x757074f1, 0xbfd5ef67, 0xeade8a2e, 
    0xafaebdbe, 0xd067f66e, 0x0500ff6b, 0x38969945, 0xebece15f, 0x70fc3e66, 0x30638b78, 0x53f60df4, 0xda35cb8f, 0xf000ff68, 0x0f0f1b58, 0xa76b6b69, 
    0x258913fc, 0xdc5c030a, 0x79cd9778, 0x13137f18, 0x8e3f0968, 0xc3c7f32b, 0x8f96a59a, 0xa1c6a5a9, 0xb6eb5aa3, 0x97f6dab8, 0x911acd72, 0x271a9291, 
    0x40800d46, 0x419e23c9, 0xebf84eaf, 0x0e4fe165, 0xdb5678d9, 0xb410fec3, 0x34d666d2, 0x7b623d1b, 0x347579b3, 0x26d93c91, 0x57cac338, 0xb28c0b68, 
    0x19db7392, 0x8e8167ae, 0xceeb8c2e, 0x9eb6dd6b, 0x65dbf5f5, 0x469cc46f, 0x2a965e77, 0x93501296, 0xe49abde7, 0xf7de56e5, 0xfb0cfe69, 0xc100ff04, 
    0x4ec23567, 0x3d001c3e, 0xff38ba06, 0x4f5ac900, 0xb9de7cf8, 0xe44400ff, 0x7ff5e07f, 0x37bf16f9, 0xea2fafa8, 0x1e913f94, 0x772bd7af, 0x00ff725f, 
    0xe04ff523, 0x78dc8bcf, 0x8ab35d13, 0x6d2caee5, 0xec160da6, 0xbf6e5686, 0x00ff719d, 0xbeaeec18, 0x2d9aea20, 0x942d94a5, 0x827b5179, 0xfc89610c, 
    0xa36bfde3, 0x1b7e9cfd, 0xd3558b78, 0xd2e2b835, 0x592daeee, 0x4557b822, 0x40c66fc4, 0xda6b42cf, 0x1a87afb4, 0x122c877e, 0xb704c3dc, 0x65c8a991, 
    0x3962620c, 0x45c5f1e7, 0xbd62f229, 0xdd43ebdf, 0xe8354ea1, 0x59ea3b72, 0xd7a6184b, 0xcce2d361, 0x517c3a76, 0x360e88ec, 0xfd0c142e, 0xf7977505, 
    0xdda3694d, 0x929944dc, 0x00915d28, 0xc54052f4, 0x08e20b70, 0x3647bc6c, 0xa39936f9, 0xc6397d5e, 0xc77b6d2a, 0xdaa27076, 0x9864a20b, 0x468cdaec, 
    0xf6c91801, 0xcca1bae6, 0x3fbf39a3, 0x3ead07f8, 0x4e9d6855, 0xd3387d93, 0x91d77eac, 0x338f3a75, 0xc579728c, 0x7b8d467a, 0xfde1ad06, 0x99bf485f, 
    0xb1beb5a4, 0x513bc29a, 0x0c7c7ef7, 0x55e800ff, 0x9a7832e2, 0x34da9e17, 0x016f7397, 0x577a6e3e, 0xe2eba371, 0x3e796bca, 0xc19600ff, 0xadaf2788, 
    0xa9835e6f, 0xc89e660f, 0x833292c3, 0x179f5b52, 0x9cf026fc, 0x30fe0b5f, 0x4aab0beb, 0x5668dab0, 0x08ae6f41, 0xdc952325, 0xb9c75628, 0x0afe5b15, 
    0x2b5de309, 0x7400bfc5, 0xc15da543, 0x257e0c7d, 0x39a21984, 0xe4dc5ae4, 0xf515397d, 0x82cfc467, 0xc3cf3d5a, 0x0b1f1c1f, 0x88b7f6a7, 0xdc85d9b5, 
    0x044c57d7, 0xfec07cae, 0xd5ce6358, 0xaff48103, 0x6b00ff86, 0x221e84bf, 0x3cfb67f8, 0xe4ea32e8, 0x201e172c, 0xad4af988, 0xaead9185, 0xe1c1530f, 
    0xabe16a4f, 0x472a355a, 0xadd36d5b, 0xe554168f, 0x3b4e531a, 0x149ff927, 0xd61545d1, 0x15450178, 0x3d4bb425, 0xc9bc51cc, 0x5ae18e6e, 0x8c154369, 
    0xa01dcb13, 0x02bc0e9c, 0x6aa1017d, 0x7aaeec26, 0x0e5dc167, 0x7cd714e2, 0x76b61457, 0xb9551af7, 0xfe5ad3b7, 0x6b441bf6, 0x215481e9, 0xc65c74e6, 
    0xce98649e, 0x7ac58b72, 0x09efc3c7, 0xf6d7f85f, 0x8067f179, 0xefd2e7ef, 0xce2d4d35, 0x8ea5a3b1, 0xfc7a6baf, 0x8685ba64, 0xb8332a57, 0x3d338064, 
    0x8fc44f79, 0x3cac45f8, 0x1fede109, 0xb42edec2, 0xddb5e3d5, 0x966ea33e, 0xdcf23677, 0xbd3fb9dd, 0xc80ae2f9, 0xcc5d8489, 0x3eb06518, 0x9bfd4e63, 
    0xe065657c, 0xfa56892f, 0x41afa7c6, 0x1349e9a2, 0xf01c79c5, 0xa2da2fcf, 0x2c8c4160, 0xed20d948, 0xe5039b6f, 0xd7577a1d, 0xc2d1ea60, 0x6ae129e2, 
    0x19a7c53b, 0xfbf22835, 0x4ddb57eb, 0x7e94fd3a, 0xf1619a6f, 0xb60e8659, 0x38354161, 0x74114ac9, 0xa7fbcfe7, 0x7eb4a4ee, 0x5ef6bdf7, 0xcad36b93, 
    0x683fd6eb, 0x0ebff55f, 0xd24aec7f, 0xaa07f4bf, 0xc7f03ede, 0x7ffcef80, 0xbc862f71, 0xf8dba66f, 0x9c57f672, 0xf5c2a27d, 0x0912cc1a, 0x77c0628f, 
    0x76dc4e0e, 0x13bc1d5c, 0xf7d6f1a5, 0xb2229ec2, 0x81ceb5f0, 0x5a3dfbe2, 0xb3421f6d, 0x36b4e6d1, 0x2bc95057, 0x426490c3, 0x77da05f1, 0x8cc00c67, 
    0xca79cd77, 0xe2c3b187, 0xaa17e720, 0x6c1da5b5, 0xeda96bfa, 0x58b1184b, 0xd35815dc, 0xf74a4d9a, 0x74cb35a7, 0x6cf9a4ac, 0xfed5f49d, 0x45518f07, 
    0x5e1fe115, 0x05fced7e, 0xc283b8bd, 0x3b822bfe, 0x2d856389, 0xe46a2c83, 0x03759c2a, 0xcdb173b5, 0xd8252123, 0xb626d793, 0xc87f05fe, 0xfaefe2bd, 
    0x58e95ff4, 0xe6ca7d31, 0xa7167fc1, 0xfe3ef2cb, 0xaa9792b6, 0xf1188ffc, 0x1d0fd214, 0xb1318fdc, 0xed9371f2, 0xb658d44d, 0x24496ead, 0xa27e72e0, 
    0xf27fc493, 0x23fd5c3e, 0x1f6a94fe, 0xe98314f2, 0x5e7d45fd, 0x056bbf11, 0x7b7e6cfd, 0xab7a2f98, 0x9df977eb, 0xfd8b9e26, 0xd1b6a4bb, 0x1ce7e6bb, 
    0xc54aa6d7, 0x9020a36d, 0x4a9f0e77, 0xfe3f4df3, 0xfc477a43, 0x7f2abd0a, 0xfd8ff5f8, 0x31aafce1, 0xec3dc69f, 0xf305df9d, 0xf4f04b67, 0xdac6a77d, 
    0xf67e3364, 0xdff2161c, 0x0daecf95, 0x00fff57c, 0x9dbb7805, 0xb6e813fe, 0x6e8d34ed, 0x2bb623be, 0x1fb07311, 0x818c5db3, 0xf886bed2, 0x2300ff6f, 
    0xe1fe99ee, 0x00ff9caf, 0xf2dfaee0, 0xfb8f344c, 0x00ffad18, 0xbeee9af4, 0xfcfe113f, 0x5fec0ebd, 0xfef02fc3, 0x1455e5a7, 0xf2895e51, 0x501445c1, 
    0x50144501, 0x50144501, 0x50144501, 0x00d9ff07, 
};
};
} //namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(UpScaleAnimeGeneralNode, "Anime Upscale General", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "AIFilter#Video#Upscaling")
