#include <UI.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <realsr.h>
#include "General_data.h"

static const std::string key = "tianlu2024";

#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct UpScaleGeneralNode final : Node
{
    BP_NODE_WITH_NAME(UpScaleGeneralNode, "RealWorld Upscale General", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "AIFilter#Video#Upscaling")
    UpScaleGeneralNode(BP* blueprint): Node(blueprint) 
    { 
        m_Name = "RealWorld Upscale General";
        m_HasCustomLayout = true;
        m_Skippable = true;
        m_BGRequired = true;
    }
    ~UpScaleGeneralNode()
    {
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void PreLoad() override
    {
        auto url = GetURL();
        auto path = ImGuiHelper::path_url(url);
        std::string data_path = path + "General.data";
        // decrypt data file
        std::vector<uint8_t> data;
        ImGuiHelper::ImDecryptFile(data_path, key, data);
        if (data.empty()) return;
        // create realsr
        m_device = ncnn::get_default_gpu_index();
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        m_realsr = new RealSR(General_param_bin, General_param_bin_size, data.data(), data.size(),
                            m_device, true /*fp16*/, true /*packing*/, false /*tta*/, 1 /*thread*/);
        if (m_realsr)
        {
            m_realsr->scale = 2;
            m_realsr->prepadding = floor(m_realsr->scale);
            // preload model once
            ImGui::ImMat tmp(64, 64, 4, 1u, 4), tmp_out;
            float progress = 0;
            m_realsr->process(tmp, tmp_out, progress);
        }
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        int64_t t1, t2;
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (!m_Enabled || !m_realsr || context.m_bypass_bg_node)
        {
            m_NodeTimeMs = 0;
            m_MatOut.SetValue(mat_in);
        }
        else if (m_realsr)
        {
            ImGui::ImMat src_mat, upscale_mat;
            if (mat_in.device != IM_DD_CPU)
            {
                ImGui::ImVulkanVkMatToImMat(mat_in, src_mat);
            }
            else
                src_mat = mat_in;
            if (!src_mat.empty())
            {
                src_mat.elempack = src_mat.c;
                t1 = ImGui::get_current_time_msec();
                m_realsr->process(src_mat, upscale_mat, m_progress);
                t2 = ImGui::get_current_time_msec();
                m_NodeTimeMs = t2 - t1;
                upscale_mat.copy_attribute(mat_in);
                upscale_mat.elempack = 1;
                std::cout << "General:" << m_NodeTimeMs << "ms" << std::endl; // for debug
            }
            else
                upscale_mat = mat_in;
            m_MatOut.SetValue(upscale_mat);
        }
        return m_Exit;
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve* pCurve, bool embedded) override
    {
        bool changed = false;
        ImGui::SetCurrentContext(ctx);
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;
        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string("AI"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[2] = { &m_Enter, &m_MatIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    float m_progress    {0.f};
    RealSR* m_realsr    {nullptr};
    mutable ImTextureID  m_logo {0};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 130;
    const unsigned int logo_height = 130;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 9071;
    const unsigned int logo_data[9072/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03820082, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xfc003f00, 0x288aa2aa, 0xe0cbae00, 0x3f96fcb7, 0xf6afe301, 
    0x94fe87f5, 0xdab57125, 0x8f75137c, 0x998037e3, 0xf6ebe2fe, 0x689fbe05, 0xfcafb08e, 0xc83ffa29, 0x68fc0fdf, 0xfdccaf7a, 0xed89b26e, 0xdc889d01, 
    0x6b3d28fc, 0xcb1c0fe5, 0xb756e2bf, 0xffe7b8eb, 0xa0af1d00, 0xc8f81dfe, 0x5cf7f678, 0xed7845b9, 0x110caead, 0x5ec83987, 0x7cc5c0f8, 0xbdbbe3df, 
    0xc87515bf, 0x4e3272d5, 0x5fcb8e73, 0x95546094, 0x8fbda769, 0x28c52bda, 0xbe74e627, 0x84cb9712, 0xab6b1eb3, 0x83bb7182, 0x197e71cd, 0x8d0a0bb9, 
    0xae39f99d, 0xb4c5ee99, 0xf2473309, 0x0779f933, 0xd935e39c, 0x9a8edc24, 0xd8ef5476, 0xcaeb96d2, 0x05fddc5d, 0x72f49d25, 0x3b0fc8b4, 0x8afb8c33, 
    0x5b5da0b9, 0xd19a4730, 0xe464cb65, 0x15d323e7, 0xf0191eef, 0x6de281de, 0x3dda4c35, 0xda63c29b, 0xf500ca57, 0x2300c41f, 0x78faaef0, 0xe6575409, 
    0x6f663c3c, 0x1bf8330c, 0xa79dcf5d, 0x6505727c, 0xa7c95dd9, 0xe2c6aa78, 0x05d28223, 0x7b0dea61, 0x800fc40f, 0xa6819efa, 0x241a6bdf, 0xc0d8a9a9, 
    0x92d9b24c, 0x3fde9222, 0xbf636755, 0xf441f21d, 0xed27bc06, 0x2d886fde, 0xc22a6462, 0x1fa7ac60, 0xe208ce29, 0x61eae1a1, 0x0ead69e5, 0x3ecc588a, 
    0x65d41c36, 0xfaa82e7f, 0xc4323410, 0x19e20fb2, 0x08fe5aeb, 0x17f883f1, 0x909af6c4, 0xe50db639, 0xa3f727dc, 0x75c49f27, 0x92892bfc, 0x26cf74fd, 
    0x6f3e4919, 0x47ad4708, 0x46ca3375, 0x35633bee, 0xe72acee1, 0x45f3a864, 0x3f325bc6, 0xa2e143da, 0xb2f13d7c, 0x836a9aea, 0xee109fe1, 0xfb74b2bd, 
    0xa4f921a9, 0x873bf38f, 0xcd577bb3, 0x7e1400ff, 0x1af8db2c, 0x3b16ecc7, 0x84fbf52e, 0x4b7944ca, 0xfec63f75, 0xa9df8bfe, 0xffd1afe3, 0x00ff1d00, 
    0xc10f4d68, 0xc715b3df, 0x39fb7587, 0xf740fcef, 0x651d9e2a, 0x0ec8821b, 0xe4638b59, 0x778e8408, 0x3a06dc6e, 0xff66f3e3, 0x589b5100, 0x65efeed4, 
    0xca5d5ccb, 0xee49c8d2, 0xb7cf38c7, 0x2e7db5d3, 0x98788557, 0x2f5ad5a9, 0x66ccf8c4, 0xbc38783a, 0xa5357e3c, 0x533fbafc, 0xbc161fa8, 0xf03f4076, 
    0x9eabeb99, 0xa0caa8c9, 0x016c007d, 0x00ff28ec, 0xbfe3b385, 0xff751dfa, 0xcb19fc00, 0x57c500ff, 0xec9d0d2d, 0x65c7a3b0, 0x0acac623, 0x1d1974b0, 
    0xfb4e2d8f, 0xfc00ff05, 0x00ff4bf8, 0x00ffc77d, 0xfbd557c5, 0xbfca5f0a, 0xb17ee603, 0xde9ff95f, 0x9da23dcf, 0x4a5c320c, 0x248d4491, 0x1051c1ae, 
    0x009e9865, 0xa4afb903, 0xc67e08fe, 0xd28ecf7a, 0x53c5434d, 0xc95ef85e, 0x92b5e417, 0x42e6d2c9, 0x4522af4b, 0x0fda4001, 0xe93064f1, 0x30cc8e55, 
    0x5b2775d9, 0xf8553e13, 0xc8e796fc, 0x07be9966, 0x38f1a026, 0x5f118aea, 0xbb12fd36, 0x3778247f, 0xae117c8b, 0x365117f8, 0x7b93ee5a, 0xc4594aa6, 
    0x48daee66, 0x05a76056, 0xcb8d7a93, 0x45453dee, 0xc557f2e0, 0x555221da, 0x2318f485, 0xbf16f3b1, 0xe153bc5a, 0xdac61f1d, 0xb95efa3c, 0x59a941a7, 
    0x39868c4c, 0x297725d3, 0x56f55452, 0x206538c1, 0xe26bf08c, 0xb29f8b4f, 0x3fc2afb5, 0x5b7f7818, 0x73db75d2, 0x71eadca1, 0x326a5922, 0x0c46b86d, 
    0x3110621b, 0x3390c220, 0xd673d083, 0xe2293bbe, 0xf09d19ca, 0x51c9e3f5, 0xffa96ea7, 0xefcf9700, 0xfc83033e, 0x0671c243, 0x130f9e26, 0xbd5d650f, 
    0xa397f116, 0x1fdd8eb6, 0xfb357dde, 0x369a9d2f, 0x2f8c1aab, 0x157e9c9b, 0x653b9ee3, 0xd1b5161f, 0xfd9e9c91, 0x8f7bed3e, 0x3502c5ec, 0x07c6a986, 
    0x78953f98, 0xd668c4a7, 0xf8fa8b3f, 0xffc77000, 0x32af6500, 0xaad69784, 0x1ff9b7db, 0xba5f53d8, 0x4dfdf48a, 0xbe5a05df, 0xa40577a5, 0xf84a3267, 
    0xa90367e0, 0x4900d827, 0x9c2d15f6, 0x79dda9ed, 0x4adc1580, 0xadc039af, 0x6d5681bf, 0x538378aa, 0xb7242154, 0x43e52ed2, 0xa2ccfc8c, 0xac21e53f, 
    0x9f4e1b2d, 0xb224d64f, 0x1495640a, 0x4e4fbb82, 0x6fc5f73a, 0x50d7e674, 0xf4b8b84d, 0xdba47f47, 0x56a4aaa5, 0xcbf535d1, 0x2e51a48c, 0x00df73f7, 
    0x4a5f7172, 0x1fd22bfc, 0xcd2dd24d, 0xe8aeacfb, 0x21295a1c, 0xcfdf3f57, 0x634c8f24, 0xe01f5eeb, 0x33851ec1, 0x77654cb4, 0x0cdcb250, 0x53f7c765, 
    0x7e7c47d1, 0x76baec35, 0x0299fbbb, 0xda6daa3a, 0x07a72348, 0x5eefe983, 0x25a515e6, 0x6bbe7c26, 0x248fd419, 0x4cb73d76, 0x8c6cccd4, 0x18570a24, 
    0xf4093854, 0x6bbf95af, 0x9af6806f, 0xf163a916, 0x2a8bc343, 0x1aa7e6ad, 0x0b08d66b, 0x4b27afc6, 0x817c20b5, 0x1cf7619c, 0x27477016, 0xdf74d607, 
    0x4520b317, 0x80273592, 0x5a2bc3cc, 0x93f000ff, 0x4dce469d, 0x54d3ed39, 0x897c9db7, 0x241275e0, 0xc310dcaa, 0xa786bed2, 0x71d2c4b3, 0xf8cc5f97, 
    0x06b60eda, 0xa6476abc, 0x67f868fe, 0x7dbeadf6, 0x7784e137, 0x4de4c970, 0x2452cc0d, 0x0852c199, 0x7ca0d720, 0x5dfcd22d, 0x8400ffe2, 0x50b7f8d0, 
    0x63b1a6f0, 0x9ab9bd1d, 0x95b1e578, 0x2f54e35d, 0x822ba0e6, 0x12434685, 0x5ef43507, 0xc21ff093, 0xf77657d7, 0x6b8add7a, 0xcfe3d646, 0x50bcb5b5, 
    0xe5c0c0d1, 0x30c3c34e, 0x999ecdec, 0xa86b1e00, 0x6bf1a7f8, 0xc31ff04c, 0x13ea1f1f, 0x2ec55b5d, 0xcd5da091, 0x28324f1c, 0x886cb432, 0x8bf71380, 
    0x25790eb2, 0xf09ae480, 0xa9516568, 0xec104341, 0x9f3ef6ee, 0xa512c413, 0xab307589, 0xbf57369a, 0x1f1bfcaf, 0xfc10df89, 0x3bf17979, 0x21deb7c5, 
    0xc7043bbd, 0xceb7b4cb, 0xee03bc45, 0x3e39fc20, 0xbdde93a4, 0xf85df66f, 0xa85d3c34, 0x7b3588bf, 0x093a7d57, 0x34455b02, 0xd4ed2424, 0x8a8271be, 
    0x78ea3846, 0x0c1fe435, 0xf1730b7c, 0x5e7ac50b, 0x47940885, 0xf13c0b29, 0x8cc95b46, 0x1c38e77d, 0x92f1647a, 0xc17ff42b, 0xc187193e, 0x34d211be, 
    0xd97a1b88, 0x246e45da, 0xa8c20523, 0x19e73e19, 0xa5d7e43e, 0x2d1ca988, 0x9d9e4e25, 0x0d330fbd, 0x8eba584e, 0xfb756dbd, 0x26fb6fd9, 0xe7fd78d1, 
    0x1421711c, 0x7f5a657f, 0xfafb5fd3, 0x6ca5c67f, 0xa4f73cee, 0x7fbed6e7, 0x8f6cf798, 0x7f633f97, 0x1e1ed680, 0xc4bfedf0, 0x1b41101f, 0x997177ea, 
    0x8d71f1b4, 0x00ff9696, 0x039edbf3, 0xcb1ee430, 0xbb35998e, 0xe7f627f1, 0xe7848ff0, 0xda0d4f6b, 0xb4cbe249, 0x12499291, 0xe3ba0543, 0x5b85ac1c, 
    0x4070727e, 0x8c711dc7, 0x97b63ff3, 0xdfc19b8f, 0xe03bfc0f, 0xb3671e7d, 0x6b15425d, 0x1b608084, 0xc72ad448, 0xdd02e49c, 0x272fe480, 0x91891f1c, 
    0x0303b077, 0x60e7b53e, 0xf3676832, 0x36996996, 0x8de59bd4, 0xb25394ec, 0xddba5fbf, 0x267feedd, 0x4b335ce5, 0x3ecbaa8b, 0x669cdbce, 0xed4ea7da, 
    0x57da0425, 0xd524bfb6, 0x9fbe77f7, 0xbf1b5fa7, 0xfc0c4f69, 0x596bb419, 0xf1d1fee5, 0xdbb3b014, 0x62f8b6e9, 0x6994b48d, 0x2d447e8e, 0x2441ea81, 
    0x035f8303, 0xf1487c5e, 0x8a5fc50f, 0xe2af26da, 0xb9bcf62b, 0x8e05427d, 0x02c5f231, 0x1a095719, 0x991f55f4, 0xd73c49ea, 0xfd6b7cb1, 0x615dfc8b, 
    0xef3a6bac, 0xdffee586, 0x816b89d2, 0x366df70c, 0xcd5240a2, 0x9c3728bb, 0x98050082, 0xf33575e4, 0x92e282d7, 0x14bac7d7, 0x4bd14653, 0xba02a71e, 
    0x44ca903a, 0xe84190ab, 0xe6f07745, 0x85a12c03, 0xd51c6c95, 0xeaabb549, 0x67dfdab4, 0xc3833ef5, 0xc1219fdc, 0x2b238e52, 0x7654abaa, 0xca9c96e6, 
    0x57bc2dfd, 0xd96a5b97, 0x33fb75fa, 0x7e972eaa, 0xc6fb7c14, 0xf1155ee1, 0xd1f8ec50, 0x7d9e01e2, 0x6baf053f, 0xcc1b97fd, 0xa41dd81a, 0xe315f407, 
    0xcfa2153f, 0x3f7fedc6, 0x6bc91fdd, 0xfdc5c3c7, 0xf9a7a76a, 0x6575d71f, 0xe9912fee, 0xa196b25f, 0x64f1696f, 0x6200dd58, 0xece9f4d5, 0xf4fcb750, 
    0xf55164f9, 0xbca9083b, 0x992e6b51, 0xb5bf5be3, 0x1f518620, 0xb8c22a97, 0xb99073dc, 0xf6491bf7, 0x88c107ae, 0x9d8e7af6, 0xcbb31a7d, 0xc20d796b, 
    0xe4bbf388, 0x477edc70, 0x189f74bd, 0x9a4424fe, 0xa9e2b3ee, 0xbeb22719, 0x8e623fbc, 0x8fd1e515, 0x4750feee, 0x3d27471b, 0xa3ec7a47, 0xa7c4d541, 
    0xcfb17705, 0xd4d5a752, 0xd5a2dd9c, 0xb3d6e2fe, 0xc2c702f1, 0x79738d36, 0x9f7d2376, 0xdb7580bb, 0xe31fddcf, 0x8b29aff5, 0x66d58ff6, 0xb6a4d5bc, 
    0xc688559e, 0x52b7c0b1, 0xd5bbac1c, 0xc091818b, 0x3938b95e, 0x1aaf39c6, 0xa85ffcd7, 0x7b579778, 0xf04cc98b, 0x88f1c65c, 0x31140670, 0x07fcc0c0, 
    0x9f7abdbf, 0x57817fc0, 0x51fc175f, 0xece7a40e, 0x41b71cfe, 0x8d34db0d, 0x70384f13, 0x83945f00, 0x93e93990, 0x58e8d7f8, 0x1d1c3d5c, 0xb3ab693e, 
    0x857971e0, 0x4a4e5d4c, 0x56eb2f5a, 0xfbec3f7b, 0x8c7fc537, 0x5387217e, 0x4a17d6be, 0xee835df0, 0x5695fd94, 0x410cb65b, 0x0752554f, 0x18cf093d, 
    0x0dedc3fb, 0x41c3ea3a, 0x24d6bfd2, 0xbe455b10, 0xd10e897b, 0x4fcc3280, 0xe33fc161, 0xa8e16b5e, 0xa739bcec, 0x4977f859, 0x65daa331, 0xf78d206e, 
    0xcfc76115, 0x4fc673ce, 0xe1c15ee1, 0x50d70e9d, 0x9519d6d1, 0x8988e61d, 0x1c39e701, 0xabb8d68f, 0x49eba6d6, 0x08434b53, 0x9aceabe1, 0xcfec4695, 
    0xa4fdbc24, 0xad4c3cee, 0xcad2f069, 0x799550d3, 0x2d555b7d, 0x9ebd081c, 0x0367f838, 0x3d2a9607, 0x7e0a5fb1, 0x571dbfd2, 0xa75e1ac4, 0x592b9de0, 
    0xc53d127f, 0x9eeb5cea, 0x6e88dd21, 0xb6928c64, 0xf238c8b6, 0x7f66c851, 0x705c65e3, 0xce7830b9, 0xbcf051e7, 0x12bc1a9f, 0x59237297, 0xb0449248, 
    0x8d2d70ca, 0xb8892cc2, 0xbc0ce360, 0x12af1863, 0x3f3b7cd0, 0xa5417c88, 0x3c88d668, 0x305699eb, 0x3c018033, 0xc900e893, 0x25e5a2a6, 0xa22dbd55, 
    0x918adced, 0x22eca354, 0xb9afbeb5, 0x67ecbff5, 0x5e69ecf0, 0x04f1bb15, 0x6ab58ff1, 0x7224840d, 0x8fc2a9b0, 0xbe6513f8, 0xb7d05780, 0xb3c6ca2a, 
    0xafa215fc, 0x6b397c85, 0xac126f63, 0x35e21a4b, 0x031800ea, 0xd52a60b7, 0x1c6eadd6, 0x818d87ab, 0x57bcccc7, 0xb6a75a83, 0xb47be4a8, 0x404da552, 
    0x1ef3cdac, 0xf76ed27b, 0x0e7bedaa, 0xbe8ef3e3, 0x8b6d9fb4, 0xd6f9ebfb, 0xe636f216, 0x0ff11d3e, 0xdadf3585, 0xf7864f9e, 0xb824267a, 0xdae9204d, 
    0xf7c7d4b5, 0x26417276, 0x4dc7e41d, 0x5e6544e2, 0xc7b177a7, 0xbf087fd4, 0x0500ff65, 0x668528fc, 0xad75cd8a, 0x2e09a361, 0xae46a8a1, 0xc664f373, 
    0x773062a4, 0x06708e63, 0x7cceef49, 0xfe0f5f38, 0x0000ffca, 0x101fb5ac, 0x38716f83, 0xb7c58b5b, 0xdcdc93c4, 0xa0b132c8, 0xe042723b, 0x92028063, 
    0x2c5f534f, 0xacfd557c, 0xfde373fc, 0xfdb47842, 0xd141e35e, 0x686b7792, 0xd2d6d2b4, 0x7c1b79b4, 0x902456c6, 0x191b7006, 0x391fdb27, 0x7786592a, 
    0x12f0e029, 0x366878f6, 0xb7dafcaf, 0x5b747bd3, 0xe34f7d5b, 0xae33b4ba, 0x2e53a92a, 0x0c7b2aca, 0x3c4a290d, 0x797faeda, 0x4bab2dbd, 0xb595ae64, 
    0xd22ffa6e, 0xf6dff8aa, 0xc2c7f192, 0x56e247dd, 0xa463678b, 0xc678ac47, 0xb9a3f82b, 0xf2272cd5, 0x00b78163, 0x1301ac04, 0xaedcb632, 0xe146da38, 
    0xf67faec8, 0xe5b3fd81, 0xd19835f1, 0x7373013c, 0x1ccba765, 0xdcdedfb0, 0x3a492a5b, 0x2202edb2, 0x0b529558, 0x0456951c, 0x305f110c, 0xf1956878, 
    0xe154941e, 0x3e58dc85, 0xc369c5fb, 0x0c5f317c, 0x938bbbfe, 0x53b4b38b, 0xdb00ff69, 0xf6f7e5df, 0xe03cbc3a, 0x8959565c, 0x4e986b86, 0x26489750, 
    0xdbeddfd3, 0xfbfb51ef, 0xb23fa61f, 0x2ed4e10d, 0x411e47fc, 0x3f0e2a29, 0xbfe615dd, 0x9765ac15, 0x17be76e3, 0x47e1ed04, 0xa96bf753, 0x666e85fd, 
    0x33159f6b, 0x003a3102, 0x6bf975c4, 0xd06de21b, 0xf8373ed3, 0x2856f68a, 0xe5b3dbb0, 0x50c89676, 0xbbde0778, 0xc7935169, 0xffd292ca, 0xed0ff000, 
    0x822e56d5, 0xf0dfd6a8, 0x335eb64a, 0xe103bcd2, 0x2dafad19, 0xd7c6ebd2, 0xbebd3dd2, 0xf7bbcf8e, 0x4899834e, 0xcec063f9, 0xb13b4946, 0x7f8278c5, 
    0xba966b68, 0x59237988, 0x5269cb74, 0x916d15da, 0x116e6342, 0xc955a013, 0xdee3a923, 0x2e715bba, 0x89abe2a7, 0xee9247d2, 0x7c57395b, 0x9e8c5d8c, 
    0x3929ec5e, 0x8fc30200, 0x023ff37a, 0x6ba5cdde, 0x7257d7ce, 0xec96695b, 0x6ca1ae6e, 0x2e03399f, 0x1204c0f5, 0x1c3c184f, 0xa352bf62, 0x31e5c380, 
    0xcf762d55, 0xfa38f1cc, 0x574e85f9, 0x7f85162d, 0xf77a7802, 0x348c1fe2, 0x85470b9d, 0xaadcf585, 0xf2385416, 0xf7213146, 0xd033c653, 0xd713fd9a, 
    0xf8031ea2, 0xffc33f61, 0x25328700, 0x2dec89af, 0x0df2bdd0, 0xc0306fcb, 0x26739cd9, 0x00ff640b, 0x7cbd2309, 0x51e7f0b7, 0x7c9ffdb4, 0x44fcaf23, 
    0x6d4bd692, 0xbcd0c45b, 0x4d8a0d7e, 0x6e114d92, 0xc34de73c, 0xe758266a, 0x071ff324, 0xd9eff59a, 0x3d7bfaea, 0xc8ddd80a, 0xb332ddf2, 0x73872c4f, 
    0xccb2fb48, 0xc949ea49, 0xbe7cbdcf, 0xe5718a61, 0x32e873ed, 0xaa18be5c, 0x2bfa8c92, 0x995f00ff, 0x2cfca099, 0xa4913ef1, 0xd5227e69, 0xa87b4fbc, 
    0xfed68678, 0xadd5365f, 0x0848a4fc, 0xa02c5b1e, 0x819b792b, 0x0729cbc8, 0xf1c15eeb, 0x99f1527f, 0x94e045f8, 0xd16775d1, 0xed10f5ec, 0x6eb1eaac, 
    0x1889956b, 0x033c8e29, 0x704e1ef3, 0xb4e2c073, 0x8e78207e, 0xca483439, 0xf17e8a8d, 0xea38802b, 0xf8dda779, 0xf850cf8e, 0x6742a50f, 0xf2de1e49, 
    0xdd1f08e9, 0xa71f583b, 0x88bcce5f, 0x39ea2262, 0xf3be6859, 0xb9e02aeb, 0x6d9b4268, 0xb6be5ade, 0x3c3f3fb3, 0xfff50d0b, 0x69bc8c00, 0xf2c8a86d, 
    0xdda14ddc, 0xa04cd2c6, 0x8ac4853b, 0x61f107cc, 0x53d7fa01, 0x58f824fb, 0x2de28f78, 0xcd30a9e6, 0x545b84bd, 0xe7b600ff, 0x7e2ba21f, 0x6de09575, 
    0x7fc4df5e, 0x265eae1c, 0xd54500ff, 0x884ffbde, 0xadc18091, 0x09fc4564, 0xec8f7bc5, 0xf046e185, 0xb579c3f7, 0x4f82881b, 0x3db83b7f, 0x76b083ca, 
    0xfe6400ff, 0xaa55ec75, 0xb3ede1e9, 0x9c0af1b1, 0x2e6e8965, 0xe4af37e9, 0xc5d7bc7b, 0x1ed89058, 0xd7d64a95, 0xdc35f151, 0x9b5d7a96, 0xef0fca5d, 
    0xfa54181b, 0xf24ad59e, 0xe2889047, 0x8291a51b, 0x7092fa22, 0xf0277d05, 0xa5a9c1ab, 0x04c152f8, 0x359a1702, 0xde8fe19e, 0x79021879, 0xb13dcef6, 
    0xb752395f, 0x577192d5, 0xa8ebd893, 0xc7969bd5, 0xda819f84, 0x5b5a12f3, 0x1bc96335, 0x8fd28fdb, 0xe79a51f8, 0xffb3f6fc, 0xfcdbbe00, 0x3439ea2b, 
    0xf28d4468, 0x4deb5327, 0xfb87c7fe, 0x7dd4fa89, 0x1ed9196f, 0x7ea4b57f, 0x9fd8fe5b, 0xf1773c0e, 0xff0f1f16, 0xd2686000, 0x4d5ae85d, 0xb8dddc9b, 
    0x493586ba, 0x5905035b, 0x7b5525c1, 0x7c8df703, 0x2ff063b1, 0x02913ac7, 0x496942db, 0xe6e3bf1b, 0xf5e2c711, 0x78ac51fa, 0xf05dcb86, 0x84858c1f, 
    0xa1d3e09b, 0x8c8e3b30, 0xe3c739fb, 0x8be0175e, 0x868f2ab5, 0xe55f6252, 0x15e69451, 0xab4f78b0, 0xf5d00ac6, 0x53d7dbea, 0xcae01d3e, 0x475f5e19, 
    0xe2b45505, 0xbeb6b4e6, 0xfbf6acfc, 0x7ce6cf4a, 0xbf663fb6, 0x3c320c89, 0x00ffd834, 0xfe7fcbaf, 0x9ff45639, 0x3de2cfd9, 0x7069a99e, 0x58651bde, 
    0xf6634767, 0xc0307ebb, 0x4fcf00ff, 0xda62fb6a, 0x609917fa, 0x01d91d32, 0xbd663ab0, 0x061fc35f, 0xa14ffced, 0x553b9d9b, 0x18642e99, 0x8c729d55, 
    0x0c7be0f8, 0x21f79ae3, 0xaf2be398, 0x7ffc1176, 0x1971f7cc, 0x69825b46, 0xc12fa9d4, 0xa7ed00ff, 0x61cafe95, 0x7163057c, 0x0629e265, 0x73777b9b, 
    0xe79b18be, 0x40a6f8df, 0xf8514dfc, 0x5ecbf0b5, 0x7c8f2ff1, 0x7669a94d, 0xfb4b6a7f, 0x52b6b656, 0xb0d981e8, 0x6fc32c07, 0x7a6f4f7e, 0x131de3b7, 
    0x8c57f054, 0x725d74ec, 0x53374dc6, 0x9288ac12, 0x3a3b9174, 0x8f5eeb1e, 0x24c7af73, 0x1519d9f2, 0xbc5c23af, 0x8fa3c45f, 0xfcc8e99b, 0x5a9dc1eb, 
    0xdffe7a98, 0x9deade97, 0x188da5cf, 0x4ec9a556, 0xa35b8b57, 0x53f8e5e4, 0xf8075fe3, 0xd6b6539f, 0x35d0242c, 0x4b44467b, 0x05523423, 0xab7adc56, 
    0x77304610, 0xb57ece03, 0x474ff8d6, 0x8700fff0, 0x5e6f6df5, 0x8eb667d7, 0x92b24def, 0x5d123df2, 0x99bb0daf, 0x57891b10, 0xb023f39c, 0x45667950, 
    0xbfd06bea, 0x7a8c5f6b, 0xf3f0933e, 0x729e17c3, 0xeeb1898f, 0xe40a48b0, 0xf281595c, 0x1cba274f, 0xf1b59e01, 0x39fc877f, 0x1dc2f8a9, 0x6b9a5067, 
    0x8b483a8f, 0x9594b98b, 0x8fcc97bc, 0x70bb45f7, 0x60c30e4b, 0xc2b88ffa, 0xd2bc38e6, 0x1823558a, 0xfe3be9ae, 0x13f3fc2c, 0xf2e5c387, 0xeb735771, 
    0xd7e197b5, 0x97f124f2, 0x773c6f8c, 0xee6e39e2, 0x142a4fde, 0x7263ad68, 0x77208a08, 0x24b9032f, 0x9fe41eb3, 0xe087fa6a, 0xafad8bc7, 0xc715a274, 
    0xd186859c, 0xfa7390e9, 0x69d7c7d7, 0xeb7e5de4, 0xcf2b6e20, 0x7f90315e, 0x811ff55a, 0xdeb7d7d6, 0xbe209123, 0xc1114f93, 0xf52ee4e6, 0x8c017791, 
    0xbcd6711f, 0xed0fc3bc, 0x1e6b5f29, 0x788d41be, 0x7ead4d6c, 0x66b00f6d, 0x9de705f1, 0xb7b766f6, 0x64e3dc9a, 0x1fc04892, 0x15a7b0f7, 0x3fd57ec1, 
    0x7ed12519, 0x91e8d81b, 0x77656541, 0xb6b41071, 0x2cb10bfb, 0x0e590608, 0x33723ae0, 0xf40a4b8e, 0x35dd05cf, 0xa8ac70a4, 0x00b652b7, 0xfc032c6f, 
    0xa0fd8eeb, 0x1aaf623f, 0x8fba5cfc, 0xd4143ec6, 0x818bb56c, 0xfcf0b86a, 0x28f3ecc7, 0xe4446c19, 0x8f2566ec, 0xbcd66f07, 0x9511bebc, 0xea331945, 
    0xb357dc33, 0x3e4eb7c3, 0xcfeef9f7, 0x791d3e8f, 0xf0233e96, 0x217fd485, 0xe784568b, 0x878a8c3d, 0xaf4200ff, 0x266d34be, 0xb742073d, 0x8950a1d3, 
    0x4601ec0a, 0xd7e41f07, 0xd1107ec4, 0x43fcd3e7, 0x5217ede1, 0xd54f9fb4, 0xe148756d, 0x8cb9b3b9, 0x8b1234c7, 0x9e3a0a90, 0xbe861e41, 0x59bcd4be, 
    0x2ccbd8aa, 0x3ccb6993, 0x9287d905, 0xf1a460d8, 0xa1d77b90, 0x97a4f78c, 0x6f98f1a9, 0x91d79576, 0xd73af8d5, 0x17e24ffb, 0xc981ec86, 0x0035fe9e, 
    0x00ff1cfb, 0xcf52fb4a, 0xd23a4d4c, 0x11859818, 0xd77b5c28, 0xafb3dfc4, 0x55bc2d88, 0xd8c3cbf1, 0xafc57882, 0xc9026eda, 0xe2783e1e, 0x7ac5d53f, 
    0xfb5bedb7, 0x127c5b5e, 0x441ffb83, 0xf15b87b5, 0x90f9d2ad, 0xcbc748d8, 0x247042b7, 0xf4408e98, 0x1d075b1d, 0xd27578cd, 0x1ac69878, 0xcaa47ebb, 
    0x5ab9aa33, 0xc932efb1, 0x7efd9a0f, 0x6f1afef1, 0xfdbf0f99, 0x12985ff3, 0x1ddfda7e, 0xeb9c91a5, 0x896504ba, 0x0447173b, 0x53cbb02f, 0xfeb4e17f, 
    0xd000ff3a, 0x00ffa0c1, 0xf87f9de0, 0x55f6ecaa, 0xa67e8cbc, 0x45e18fce, 0x43f08ba4, 0xb13b23c7, 0xea496219, 0x8f6b9e76, 0xbea54df8, 0x5959aab7, 
    0xc40292f7, 0x5fc0c928, 0x7a5500ff, 0x4194c21f, 0x51c74ff0, 0x6d605d8e, 0xaec9f7df, 0x8837e01f, 0xe3377cad, 0x00ff1a3d, 0x64cb8850, 0x408ee52d, 
    0xce987106, 0xe707e60f, 0xdb24445e, 0x00ff6eab, 0x9b24faa1, 0x886e638c, 0x2d3cf0df, 0x2b7f15a8, 0x73e3cc74, 0x7a2ee2b8, 0xaff4a79f, 0xcb1a3eae, 
    0x224de163, 0xce94a228, 0x9f7986cd, 0xd0a33ea9, 0xae1aca57, 0xf6f065b9, 0x66ae514d, 0x7b2bda86, 0x64f95489, 0x2549e500, 0xaea1d757, 0xa6fd490f, 
    0x3fe271bc, 0xc31f9d11, 0xbbba1491, 0xa0ec3896, 0x06aa0b95, 0x1f9f1521, 0x6baeb8c3, 0x35bc72ea, 0x8ebcbf5a, 0xacf9cc8b, 0x551eadee, 0xa2df524e, 
    0xf800ff3e, 0x0f3de1c9, 0x218417e3, 0x0f8a7782, 0x2d926910, 0xb0a893c6, 0x7260a3f9, 0xa3d413d1, 0x8aeb310e, 0x7e005ff2, 0x8aef9acb, 0x188f3c3e, 
    0x68f08a78, 0x387d155e, 0x9c489bd9, 0x72999b1b, 0x151e0408, 0xf9f59c7a, 0x077aad07, 0x432dfbc3, 0x660cfec2, 0x78eb05f1, 0x81b25bab, 0x2d6e2fae, 
    0x401edba3, 0xa0d348c9, 0xcfd74cc7, 0x7f1b00ff, 0x5fdb4b6e, 0xe8a84302, 0xd7644332, 0xf4b33f0e, 0x766177eb, 0xcd1789ad, 0x41c0419a, 0xe7a0b2b5, 
    0x774d7d21, 0xb54aa555, 0xbba25245, 0xfddeadb5, 0xd7c39bcf, 0xcae8e1c4, 0x375a1995, 0x766bbfe6, 0x87f1493e, 0x8b1f7583, 0x89f7b4bf, 0x7c6b3dfc, 
    0x6a5194fa, 0xbc7ddad2, 0x382b960f, 0xc38e009b, 0xf5b53e8e, 0x0c3fc40f, 0xf8091ee9, 0xa78b1e61, 0x5ba46fcb, 0x82a398db, 0xc4ca64f2, 0x03dbe5f9, 
    0xef93ddb8, 0x77ecc75c, 0x5eecf7f0, 0x96f1bf0f, 0xd76abfa6, 0x419aa9f5, 0x4b377077, 0xb87392b0, 0x4d1ef3f3, 0xdad4fe69, 0x0f1fe983, 0x9b98e7c5, 
    0xc48dbae0, 0xe6e82e33, 0x6584c9c2, 0x709e21fe, 0x8daae278, 0x4e17c758, 0x1ea3159c, 0xc159239f, 0x6a7552fd, 0xb65ace3b, 0x8be3877c, 0xd5231e54, 
    0x4f222c2f, 0x09f5e9ec, 0xe1c6d4de, 0x28b96397, 0xc57982a0, 0x8fc28f7b, 0xeba24d08, 0x28331cda, 0xe41d9d32, 0xd2fb039f, 0x6bfd19a9, 0x421cbec2, 
    0xb3bcee9a, 0x565ed76a, 0x95216b95, 0xef7072a1, 0xeaa02ad4, 0xadaf807d, 0xf769187e, 0xebde5237, 0xdd06847a, 0xda1023ee, 0x683ec8da, 0xa08dd42d, 
    0x248fc58e, 0xcb2b3d7d, 0xc51b71cd, 0x7be2bf69, 0x53843dbc, 0xea92b597, 0x7fb5e8ad, 0x43333da2, 0x51f716b8, 0xefb582e7, 0xcc350bdf, 0x08f300cb, 
    0x6b820120, 0x918d95e7, 0x5eed5496, 0x5deff08d, 0xbe985b6b, 0x79c60872, 0xd5c399af, 0xadcfd5b4, 0xd173e8cd, 0x0b532b6e, 0x2ff8eaf6, 0x33f1776b, 
    0xfdc45fe1, 0xe6860532, 0x561a53e3, 0x04aed1b6, 0xad7922c5, 0x107f6ca6, 0x3d09ddf2, 0xb8dac146, 0x146156cd, 0x01b8816d, 0x0feb6b8e, 0x7c0b7a8c, 
    0xe213f842, 0xad4d5b6b, 0x36d9daaa, 0xb0cba7a1, 0x0a71c53b, 0xe8990c97, 0x47a637c5, 0xf9b53e67, 0x6fc53f9f, 0x6a4fe817, 0x231e0cc9, 0x729791b3, 
    0x2a64bb4c, 0xdac3fc7a, 0x1711b7be, 0x6b4bc629, 0x76509b1f, 0x7de6a384, 0xf83cfbf9, 0x37f04a2b, 0x83f86781, 0xd13ecaa8, 0x9ed2a42d, 0x37842106, 
    0x2bd8a94f, 0x5a8b4fe2, 0xf82a7ed4, 0x7cede2a9, 0x7dcbe7cb, 0xe42dcca9, 0x2bb09263, 0x08d31f11, 0x9ad40300, 0x0bda8ff7, 0xc1a725e3, 0x7e57849f, 
    0x6675d201, 0xad4dbcd5, 0x785b19cd, 0x5a58b2d8, 0x04c80d14, 0xc2490c84, 0x57e439f5, 0xd377f6c8, 0x17f7a45d, 0x38926f32, 0xc997ebfc, 0xdd473202, 
    0xfff7841e, 0xcd57eb00, 0x57aad4e5, 0x49472ca9, 0x29ed997f, 0x5b6e92c2, 0x352cf4f4, 0x1bb192dd, 0x49b17f7a, 0xee3fcbf6, 0x95e300ff, 0x9378f3e6, 
    0xa19c6956, 0x54622188, 0x9f291d6d, 0x1f6b91f0, 0xf9fe8bde, 0xc25ef515, 0xeb2f8f3d, 0x1ff8ef73, 0x9d107c5f, 0x9f840f75, 0x633e9512, 0xff3c0714, 
    0xce6bb000, 0x953e19bc, 0x75eb69a1, 0xb2970be2, 0xdba230b5, 0xeeb969ac, 0xf74fb85b, 0xb3ae4946, 0x69b755f6, 0x4a7c0cbe, 0x481a49b9, 0xa36063ae, 
    0xc96b08d3, 0xc95c0df5, 0x937669ac, 0xacadd2c0, 0x6e88842d, 0xfc890231, 0x2a3baff8, 0xc68da3cb, 0x5a39a154, 0xf4915f37, 0x78c2fc38, 0x41c41a4c, 
    0xcf23db7b, 0x977829fe, 0x9a3cf150, 0xa47ea56e, 0x7634b0fd, 0xbb7244f0, 0xf7c783f3, 0xaff1e789, 0x78167eae, 0x8fe0fb3a, 0xf428bbc3, 0x7b0d224d, 
    0xaaac36e2, 0xc0394f75, 0x5226265d, 0x79b00563, 0xe7408253, 0x4fcbf98a, 0x2f7c83f0, 0xaf93b6f0, 0x63488a78, 0xbd967b4b, 0x6f9c2dd1, 0x23e6fa92, 
    0x7e6036ba, 0xdfae44ec, 0xe7bde67c, 0x65f16df6, 0xf56178d2, 0xae41ed4b, 0x6be6eeaf, 0xe5dcc99b, 0x6cd9429a, 0xe298afd7, 0x342a1e96, 0x6ba768a3, 
    0x28138f7c, 0x62687fc1, 0x79a5ed25, 0x9100ff5a, 0xc50ffaed, 0x1b7819df, 0x7fbf5ee1, 0xaa6387fd, 0x71c686f8, 0xc5292a6b, 0xf71b0eb1, 0x0f8cdcad, 
    0xf2fc9ac4, 0xf1b94b9f, 0x2fa2858e, 0xd4ba2292, 0x31b3e7b5, 0xbc37012f, 0x863d10d2, 0xe2ad7d4d, 0x785b1fcf, 0x8e7fe123, 0x4eadcb35, 0xdd1be2de, 
    0x9f711ba2, 0x07e7b230, 0x7ff335f3, 0xbe6cc3ec, 0x23edd726, 0xe9d240bd, 0x24ebb2b7, 0x614cc691, 0xbe00ff40, 0x2d1caea6, 0xa56e1a77, 0xfaf5b7b4, 
    0x0aadf91d, 0x27a9ac71, 0xb5acfcab, 0x1ff7effb, 0xd95b5956, 0xd6c367f8, 0x234a5c5a, 0x8504ca82, 0x0546704a, 0x9fed5778, 0xafe1ab36, 0xba577685, 
    0x693b9796, 0xdbf1f777, 0x8a289927, 0x65a6984c, 0x99fb876e, 0x5fe92bc6, 0x781a3a86, 0x8d35e2c3, 0x28bec994, 0xf5ba5c83, 0xf8331d07, 0x00ff0bd7, 
    0x4bb06c05, 0x1afe804f, 0xf86f4021, 0x3d81ed48, 0xd6e300ff, 0x95f0b8f2, 0x8271b166, 0xafdfea57, 0xcec6c663, 0xea8a932a, 0x4fe0017c, 0x815ffa8e, 
    0xf061d16d, 0xbccedc82, 0x00dfc3b5, 0xd57f7dec, 0x2f2bf41a, 0x7bec73db, 0xdbbde0b1, 0x2be43f86, 0xf500ff8e, 0xa25dbec6, 0x5e99fabd, 0xe7b9ac12, 
    0x7f59bf1b, 0x3b4bcb99, 0x858ad0c7, 0xfb4b963a, 0x2300ffb1, 0x6fbf58eb, 0x9f362d6f, 0x00ffee02, 0x00ffbfb8, 0x6fdaab68, 0xfb2714fc, 0xe0eb503a, 
    0x35ecd81d, 0x0aed7f9c, 0x958af2f8, 0xba936094, 0xf3bff8a7, 0x987da62a, 0x5b9d56d5, 0x47fea3fc, 0x7f8687e8, 0xe18faee0, 0xf83796e8, 0x03b4f655, 
    0x2de2ad0c, 0xff7187a1, 0xbea61e00, 0x00ffd365, 0x3e7dcb69, 0x139e9d7b, 0x3bf26edd, 0x79d41145, 0x57254989, 0x06ce9577, 0x8a337006, 0x4e371df1, 
    0x1bf5d5b9, 0x9a380b5b, 0x52a9bb7b, 0xae4e6208, 0x8faa42ec, 0xec154872, 0xc137b45f, 0xbee12f9d, 0x532de199, 0xdd0bf3c3, 0xdad4f62e, 0x23475ddd, 
    0x1179493a, 0xe8098ec4, 0xc7019c1b, 0x86da6bc8, 0x358cf555, 0xe43eaa4a, 0x5d5f7d2d, 0x1f7bfd34, 0x8e3d5b2f, 0x0d471b0f, 0x5ba5da39, 0xeeade8f2, 
    0xfadaebab, 0x619fbddb, 0x13eddfba, 0x4b2aa90e, 0xcb7e8607, 0xbf21eb28, 0xcef4c4de, 0xb3dab17c, 0xa68e3f35, 0x4b87c3ef, 0x9b8dd1b4, 0xe692214b, 
    0x69efdde0, 0x31d8f689, 0xdff39af9, 0x5a966a0e, 0x1a97a63e, 0xae6b8d86, 0xda6be3da, 0x6a34cb5d, 0x68484646, 0x0136189d, 0x798e2403, 0xe33bbd06, 
    0x3c8597ad, 0x5be1653b, 0x42f80f6f, 0x589b49d3, 0x89f56cd0, 0xd4e5cdee, 0x64f344d2, 0x290fe398, 0x322ea05d, 0x6ccf49ca, 0x65198a66, 0xb03a612f, 
    0x7cf42869, 0x8d6ed7d7, 0x67c5237e, 0xa78be395, 0x27259c86, 0xe492f652, 0xfade56e5, 0x5994a7a7, 0xb48fafca, 0x8b76a3cd, 0x488ecd74, 0xffc900d4, 
    0xbf54bf00, 0x5f699ff0, 0xffba04f4, 0xff88c100, 0xc355e300, 0xc6de5cd1, 0xbf33bf1d, 0xf9efd4db, 0xb23fa51f, 0x6f8700ff, 0xebf02ffc, 0xd416fec7, 
    0x1b32bf7c, 0xc2dd3251, 0x91a149d9, 0x851f5709, 0x5fe1bd7c, 0xe26d471c, 0xe7e9cb4b, 0x00cd072b, 0x831337dc, 0xf1fd4f80, 0x1e7c615f, 0xf0b4b9b6, 
    0x7a73b536, 0xc2e79af9, 0x5f5d1930, 0x4f85c63c, 0x3ebfd63f, 0xe296226d, 0x5e81942b, 0x6d5cc84c, 0xf3b8913c, 0x959bd7fa, 0xe2c6d04d, 0x7e8d0e25, 
    0xd598b547, 0x74587075, 0x43c33ffb, 0xda3bfed7, 0xa34debde, 0x5be2e66a, 0x795a388d, 0xd9acd676, 0x2709605b, 0x34fbbb15, 0xe535a726, 0xc36bfbc8, 
    0x8438f26b, 0x6e906528, 0x577afa19, 0x16afe311, 0x78657fdc, 0x8e464573, 0x16c65ce0, 0x18902327, 0x82fbf9ed, 0x3ff43509, 0xdb0a3fc1, 0x4d6b9ae9, 
    0x188ab815, 0xa4684be1, 0x8e98862b, 0x3df5435a, 0x4a0d7129, 0xc528a574, 0xc5f0776e, 0xaaab951a, 0xd473db97, 0x32fb7d3c, 0x3ed2fedc, 0xf4d2b608, 
    0xc3df7a4d, 0x86aca59a, 0x8c672c58, 0x1fd77b9b, 0x95c34874, 0x85d7faf6, 0xfef00f7c, 0x1e0fe0b5, 0xbe449ff8, 0x88771ab0, 0xb264b874, 0xe8b9b3bc, 
    0xe00c5a19, 0x3e081efa, 0xf8b5be86, 0x7459e251, 0x5edd667d, 0xebad4246, 0xbfb2ded3, 0xcf1a2d6c, 0x9788cfe1, 0xa19b4ee2, 0x24fcd725, 0xebbd1509, 
    0x491ee15a, 0xe049c88a, 0xd36dc572, 0x122e5eeb, 0x7186adab, 0xd99dfaed, 0xc75139ad, 0x655e4b39, 0xb35f1af9, 0x499b896f, 0xe263bcd7, 0xacc96efd, 
    0x4b0fad74, 0x3b75366f, 0x21d99d90, 0xc081587d, 0x6ebf8aaf, 0xc573da4f, 0x1bf41d9f, 0x36ed5b7b, 0x9cf047cf, 0x3677a47a, 0xaebb8a16, 0x55a65841, 
    0xabd41f69, 0x5ee923b9, 0xe327f1fd, 0xff858745, 0x179d6700, 0xc76bdac2, 0x86e2b91e, 0xc271f717, 0x64363431, 0x87e9b613, 0x6903bb53, 0x3fe22b3d, 
    0xfd965a8f, 0x86c5d236, 0x428e261d, 0x7ee4633a, 0xcbd2f831, 0x87d82a61, 0xec444b5a, 0x5e1e5abe, 0x87e1142a, 0xc5b37b93, 0xfb8aa268, 0x8a42e543, 
    0x96684b2a, 0x79a3987b, 0xc21ddd92, 0x2b86d2b4, 0x3b962718, 0x781d3841, 0x4203fa04, 0x5cd94dd4, 0xba82cff4, 0xae29c41d, 0x6c29aef8, 0xab34eeed, 
    0xb5a66f73, 0x8836ecfd, 0xa802d3d7, 0xb9e8cc43, 0x31c93c8d, 0x8a17e59c, 0xde878ff5, 0xaff1bf12, 0xcfe2f3ec, 0xa5cfdf01, 0x5b9a6ade, 0x4b47639d, 
    0xf5d65e1d, 0x0b75c9f8, 0x6754ae0c, 0x6600c970, 0x899ff27a, 0x588bf01f, 0xdac31378, 0x5dbc853f, 0x6bc7ab69, 0xdd467dba, 0xe56dee2c, 0x7f72bbb9, 
    0x15c4f37b, 0xbb081391, 0x60cb3098, 0xfb9dc67c, 0xcbcaf836, 0xad125fc0, 0x5e4f8df5, 0x92d24583, 0x39f28a27, 0xb55f9ee1, 0x1883c044, 0x41b29158, 
    0x0736dfda, 0xaff43aca, 0xa3d5c1ae, 0xc253c485, 0x4e8b77d4, 0xe5516a32, 0xb6afd6f7, 0x28fb759a, 0xc334dffc, 0x1d0cb3e2, 0x6a82c26c, 0x22949271, 
    0xf79fcfe9, 0x6849dd4f, 0xec7beffd, 0xa7d726bd, 0x7eacd795, 0x7eebbfd0, 0xd800ff1c, 0xe87fa595, 0x7dbc550f, 0xdf018fe1, 0x5fe2fef8, 0x4ddf780d, 
    0xece5f0b7, 0x45fb38af, 0x9835ea85, 0xc51e1324, 0x9d1cee80, 0x3bb8ecb8, 0xe34b2778, 0x3c85efad, 0x6be16545, 0xf6c5039d, 0x3edab47a, 0xcda36785, 
    0xa1ae6c68, 0x20875792, 0x0be285c8, 0x19ceeeb4, 0x9aef1881, 0x630f95f3, 0xce41c487, 0x4a6b552f, 0xd7f4d93a, 0x3196da53, 0x2ab8b162, 0x9a34a7b1, 
    0x6b4eef95, 0x4959e996, 0xe93bd9f2, 0x1e0ffcab, 0xc22b8aa2, 0x3cfdbc3e, 0x1faf44f0, 0xca66cfec, 0x11deacec, 0xc141dcb8, 0xf1b59e3c, 0x16f8805f, 
    0xbf7c70e4, 0x2fed6be8, 0xc900ff05, 0x00ffd8b2, 0xfc71a3d8, 0x02dfe2eb, 0xfa7fdb7d, 0x790dfde7, 0xd6fb6779, 0x477ed523, 0x00ff8daf, 0xffe8a174, 
    0xc3773300, 0x28feac71, 0x24aa0cd1, 0xde85322b, 0xafe68133, 0x44affa4a, 0x1208409e, 0x378e0030, 0xc257f91a, 0xe833f2df, 0xd9f500ff, 0xd76af47f, 
    0x7f2fdad4, 0xcf9aafa8, 0x452fc6f5, 0xc27b1ff9, 0x7fee00ff, 0xeed0b933, 0x449c1a25, 0xfbe7e04a, 0xda0fbbc6, 0x3e69eaae, 0x3c4c7803, 0x9678c0ae, 
    0x9c981bdf, 0x5ccfa37f, 0x00ff895e, 0xb5be2821, 0x1fd57ed8, 0x29bc41f2, 0x2d6300ff, 0x9e88febf, 0xa9e0b38c, 0xbfe770e8, 0x737ca6c7, 0xdb1f15e3, 
    0xe70367da, 0xb57f4399, 0xb5be0ef3, 0xc6c5eff3, 0x06352f69, 0xb4bf5972, 0x93636e18, 0xf415378c, 0xe43f8c1f, 0x00ffa43f, 0x00ff75d7, 0xf77c85d0, 
    0x3efe67f1, 0x08fb0f75, 0xf66af2b7, 0xc4e1efb2, 0x8e4f33f0, 0x45d19b47, 0x309fef15, 0x00455114, 0x00455114, 0x00455114, 0x00455114, 0x00d9ff7f, 
};
};
} //namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(UpScaleGeneralNode, "RealWorld Upscale General", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "AIFilter#Video#Upscaling")
