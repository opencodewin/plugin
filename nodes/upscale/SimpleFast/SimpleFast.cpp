#include <UI.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <realsr.h>
#include "SimpleFast_data.h"

#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct UpScaleSimpleFastNode final : Node
{
    BP_NODE_WITH_NAME(UpScaleSimpleFastNode, "RealWorld Upscale Fast", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "AIFilter#Video#Upscaling")
    UpScaleSimpleFastNode(BP* blueprint): Node(blueprint) 
    { 
        m_Name = "RealWorld Upscale Fast";
        m_HasCustomLayout = true;
        m_Skippable = true;
        m_BGRequired = true;
    }
    ~UpScaleSimpleFastNode()
    {
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void PreLoad() override
    {
        m_device = ncnn::get_default_gpu_index();
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        m_realsr = new RealSR(ClearReality_x4_param_bin, ClearReality_x4_param_bin_size, ClearReality_x4_bin, ClearReality_x4_bin_size,
                            m_device, true /*fp16*/, true /*packing*/, false /*tta*/, 1 /*thread*/);
        if (m_realsr)
        {
            m_realsr->scale = 4;
            m_realsr->prepadding = floor(m_realsr->scale);
            // preload model once
            ImGui::ImMat tmp(64, 64, 4, 1u, 4), tmp_out;
            float progress = 0;
            m_realsr->process(tmp, tmp_out, progress);
        }
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        int64_t t1, t2;
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (!m_Enabled || !m_realsr || context.m_bypass_bg_node)
        {
            m_NodeTimeMs = 0;
            m_MatOut.SetValue(mat_in);
        }
        else if (m_realsr)
        {
            ImGui::ImMat src_mat, upscale_mat;
            if (mat_in.device != IM_DD_CPU)
            {
                ImGui::ImVulkanVkMatToImMat(mat_in, src_mat);
            }
            else
                src_mat = mat_in;
            if (!src_mat.empty())
            {
                src_mat.elempack = src_mat.c;
                t1 = ImGui::get_current_time_msec();
                m_realsr->process(src_mat, upscale_mat, m_progress);
                t2 = ImGui::get_current_time_msec();
                m_NodeTimeMs = t2 - t1;
                upscale_mat.copy_attribute(mat_in);
                upscale_mat.elempack = 1;
                std::cout << "SimpleFast:" << m_NodeTimeMs << "ms" << std::endl; // for debug
            }
            else
                upscale_mat = mat_in;
            m_MatOut.SetValue(upscale_mat);
        }
        return m_Exit;
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve* pCurve, bool embedded) override
    {
        bool changed = false;
        ImGui::SetCurrentContext(ctx);
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;
        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string("AI"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[2] = { &m_Enter, &m_MatIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    float m_progress    {0.f};
    RealSR* m_realsr    {nullptr};
    mutable ImTextureID  m_logo {0};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 130;
    const unsigned int logo_height = 130;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 9479;
    const unsigned int logo_data[9480/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03820082, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xfc003f00, 0xc187aeaa, 0x43fc0f5f, 0x7b510bf1, 0xf7680f3f, 
    0xaed1b47a, 0x79b405e9, 0x59708e11, 0x1c9c0b8f, 0xaff68c64, 0xff9cfd45, 0xdf4b6700, 0xdd8d1a8e, 0x69d197d4, 0xe89c1eba, 0xf364252e, 0xf93c571e, 
    0x8c94814a, 0x8c6c39a8, 0xbf3d6364, 0xe1333c45, 0x3ac00b4d, 0x363a562c, 0xd8a46d9b, 0x5b3681c2, 0x9fe08cc7, 0xc9b17abc, 0x92932427, 0xb3e16b7d, 
    0x95a528de, 0x63f4ea4b, 0x45b757cf, 0x7cd1dfeb, 0xc5577eec, 0xe187799c, 0x0d4ffdf9, 0xfe886b0f, 0xda1b6d5d, 0xf4ddeed7, 0xd2f65e4b, 0xa3f125fe, 
    0xcff032f6, 0xd5b917c4, 0xc3573a7c, 0xb92beb5a, 0xa5c5158e, 0xdd4e9bcc, 0x5be63ee8, 0x49ec6519, 0x977c4dda, 0xde865fe1, 0xf161f823, 0x5fdac0fb, 
    0x74c9f488, 0xfbed9ffb, 0x66841413, 0xc75c9429, 0x86e346f3, 0x339d8e1c, 0xfa150fce, 0x0d777973, 0x53f79c85, 0x310497bf, 0x093eb2b4, 0x9c64a0da, 
    0xf80a7a0e, 0xb57fc4f3, 0xfe111fdc, 0x401f782c, 0xd69ee6f0, 0x255e34da, 0x1b35f3b2, 0xeada8db5, 0x6da32a23, 0xb3989089, 0x83c190b8, 0x9f9eb263, 
    0xae39c323, 0x0f4f5d6b, 0x2529edcb, 0xbadc6eab, 0xd3d76b3b, 0x888fe857, 0x7888c3f0, 0x868b1d87, 0xd4f6710e, 0x9372d222, 0x7b6f87b3, 0x75f95f79, 
    0xed23697e, 0xd09e283b, 0xcf8dd819, 0xbed683c2, 0xbbccf150, 0x7e6b25fe, 0xf17f8ebb, 0xe10ffada, 0x8f878cdf, 0x94cb756f, 0xdada8e57, 0x7318c1e0, 
    0x8cef859c, 0xfecd570c, 0xf1dbbb3b, 0x578d5c57, 0x38e72423, 0x81d3b5ec, 0x9ea65552, 0xabbe3ff6, 0xe62728c5, 0x9712be74, 0x1eb384cb, 0x7182ab6b, 
    0x71cd83bb, 0x0bb9197e, 0xf99d8d0a, 0xee99ae39, 0x3309b4c5, 0xf933f247, 0xe39c0779, 0xdc24d935, 0x54769a8e, 0x96d2d8ef, 0xdc5dcaeb, 0x9d2505fd, 
    0xc8b472f4, 0x8c333b0f, 0xa0b98afb, 0x47305b5d, 0xcb65d19a, 0x23e7e464, 0x1eef15d3, 0x81def019, 0x4c356de2, 0xc29b3dda, 0xca57da63, 0xc41ff500, 
    0xaef02300, 0x540978fa, 0x3c3ce657, 0x330c6f66, 0xcf5d1bf8, 0x727ca79d, 0x5dd96505, 0xaa78a7c9, 0x8223e2c6, 0xea6105d2, 0xc40f7b0d, 0x9efa800f, 
    0x6bdfa681, 0xa9a9241a, 0xb24cc0d8, 0x922292d9, 0x67553fde, 0xf21dbf63, 0xbc06f441, 0x6fdeed27, 0x64622d88, 0xac60c22a, 0xce291fa7, 0xe1a1e208, 
    0x69e561ea, 0x588a0ead, 0x1c363ecc, 0x2e7f65d4, 0x3410faa8, 0x0fb2c432, 0x5aeb19e2, 0x83f108fe, 0xf6c417f8, 0xb639909a, 0x27dce50d, 0x9f27a3f7, 
    0x2bfc75c4, 0x74fd9289, 0x491926cf, 0x47086f3e, 0x337547ad, 0x3bee46ca, 0xcee13563, 0xa864e72a, 0x5bc645f3, 0x43da3f32, 0x3d7ca2e1, 0x9aeab2f1, 
    0x9fe1836a, 0xb2bdee10, 0x21a9fb74, 0xf38fa4f9, 0x7bb3873b, 0x00ffcd57, 0xdb2c7e14, 0xecc71af8, 0xf52e3b16, 0x44ca84fb, 0x3f754b79, 0x8bfefec6, 
    0xafe3a9df, 0x1d00ffd1, 0x4d6800ff, 0xb3dfc10f, 0x7587c715, 0xfcef39fb, 0x9e2af740, 0x821b651d, 0x8b590ec8, 0x8408e463, 0xdc6e778e, 0xf3e33a06, 
    0x5100ff66, 0xeed4589b, 0x5ccb65ef, 0xc8d2ca5d, 0x38c7ee49, 0xb5d3b7cf, 0x85572e7d, 0xd5a99878, 0xf8c42f5a, 0x783a66cc, 0x7e3cbc38, 0xbafca535, 
    0x1fa8533f, 0x4076bc16, 0xeb99f03f, 0xa8c99eab, 0x007da0ca, 0x28ec016c, 0xb38500ff, 0x1dfabfe3, 0xfc00ff75, 0x00ffcb19, 0x0d2d57c5, 0xa3b0ec9d, 
    0xc62365c7, 0x74b00aca, 0x2d8f1d19, 0xff05fb4e, 0x4bf8fc00, 0xc77d00ff, 0x57c500ff, 0x5f0afbd5, 0xe603bfca, 0xf95fb17e, 0xb3cfde9f, 0x8be37b3c, 
    0xe05bd94f, 0xe9a7851e, 0xaccb5b51, 0x676b09b4, 0xa6bb9013, 0x866bba2b, 0x31c0824c, 0x6575e024, 0x82af1907, 0x1de3517c, 0x94bac673, 0xabeefa97, 
    0x3bddaa75, 0x90b997b3, 0x9d7152b0, 0x078ea2a3, 0xf4c00100, 0xb1fd76af, 0x8e274f3c, 0x97874f35, 0xb5a68176, 0xb9a3d0bd, 0x7cfe3882, 0xea9023c9, 
    0x2ab09c31, 0x54dc81a0, 0x3f0400ff, 0xc7673d63, 0xe2a12669, 0x2f7cafa9, 0x5af28b64, 0x73e964c9, 0x91d72521, 0x6da08022, 0x18b2f807, 0xca92af74, 
    0xc027135e, 0xa5357ebc, 0x37b96d52, 0xb2dabdab, 0xbb6eebeb, 0x2fe4879f, 0xaebce12e, 0x3569b659, 0x2965b51a, 0x37594f4e, 0xb52ad7cc, 0x5b529dde, 
    0xfd93b3bb, 0xfc243ea5, 0x887ff143, 0xdac5d7d6, 0x7487ef7d, 0x96c55dd8, 0x0ccbd096, 0x64ca070c, 0xa44cd505, 0x8e7c00ff, 0x45328087, 0xc9836f79, 
    0x8568175f, 0xd0175649, 0xccc78e60, 0xf16afd5a, 0x7f74844f, 0xe9f3681b, 0x069de67a, 0x323265a5, 0x954ce718, 0x5349a5dc, 0xe1045bd5, 0xc1338294, 
    0x2e3e89af, 0xbfd6ca7e, 0xe161fc08, 0xd7496ffd, 0x7387ce6d, 0x6589c4a9, 0xe1b6c9a8, 0x886d3018, 0x0a83c440, 0x410fce40, 0xc8e45acf, 0x88059378, 
    0xcf3eb0a4, 0xc9ce4ad9, 0x1ffc9f6a, 0xe0e5bc5f, 0x33cb384e, 0x95cad119, 0xd2a24215, 0xf5c55a31, 0xf5d17676, 0x67bbdf77, 0xf9b25fd3, 0xb16aa3d9, 
    0xb9f9c2a8, 0x395ee1c7, 0xf151b6e3, 0x19195d6b, 0xeed3efc9, 0xccfeb8d7, 0x6a582350, 0x8379609c, 0x7c8a57f9, 0xf8638d46, 0x0780afbf, 0x5af67f0c, 
    0xf525a1e5, 0xfeedb6aa, 0xd774f647, 0x3fbda2ee, 0x56c17753, 0xc15da9af, 0x92cc1969, 0xc01938be, 0x00f649ea, 0x4b857d12, 0x776a3b67, 0x7705605e, 
    0x70ceab12, 0x55e06f2b, 0x209e6a9b, 0x4908d5d4, 0xb98bf42d, 0x333fe350, 0x48f98f28, 0xd3460b6b, 0x89f5d3a7, 0x2599822c, 0xd3ae2045, 0xf1bd8ed3, 
    0xb539dd5b, 0x2e6e13d4, 0xe9df113d, 0xa96ae936, 0x7d4db415, 0x1429e372, 0xf7dcbd4b, 0x579c1cc0, 0xf40abfd2, 0x8b74d387, 0x2beb7e73, 0x8a1607ba, 
    0xf7cf5548, 0xd323c9f3, 0x87d7fa18, 0xa14730f8, 0x1913ed4c, 0xb72cd45d, 0xfd711903, 0xdf51f4d4, 0x2e7b8d1f, 0xe6feae9d, 0x9baa8e40, 0xe9089276, 
    0x7bfae0c1, 0x6985b9d7, 0x2f9f4949, 0x2375c69a, 0x6d8f1dc9, 0x1b3335d3, 0x95020923, 0x020e15c6, 0x6fe52b7d, 0x3de0dbda, 0x58aa85a6, 0xe2f050fc, 
    0xa979abca, 0x82f59ac6, 0xc9abf102, 0x1f48edd2, 0x7d186720, 0x119c05c7, 0x9df5c1c9, 0xc8ecc537, 0x498d6411, 0xca3033e0, 0x24fcbfd6, 0x93b351e7, 
    0xd5747b4e, 0x225fe72d, 0x89441d78, 0x3004b72a, 0xa9a1aff4, 0x9c34f1ec, 0x3ef3d765, 0x81ad8336, 0xe9911aaf, 0x193e9abf, 0x9f6fabfd, 0x1d61f84d, 
    0x137932dc, 0x89147343, 0x82547026, 0x1fe83508, 0x17bf740b, 0x34e1bf78, 0x3cd42d3e, 0xc758ac29, 0x9e666e6f, 0x57656c39, 0xf90bd578, 0xa1e00aa8, 
    0x81c49051, 0xa4177dcd, 0xb5f007fc, 0xdebdddd5, 0xd19a62b7, 0xedf3b8b5, 0x34146f6d, 0x53393070, 0x3bccf0b0, 0x40a66733, 0x3eea9a07, 0xd35afc29, 
    0xc7f0073c, 0xd784fac7, 0xa44bf156, 0x47731768, 0x0c8acc13, 0x20221bad, 0xece2fd04, 0x60499e83, 0x1abc2639, 0x506a5419, 0x3b3bc450, 0xc4a78fbd, 
    0x62a904f1, 0xe62a4c5d, 0xebef958d, 0xc70600ff, 0x3fc477e2, 0x4e7c5e1e, 0x88f76df1, 0x31c14e6f, 0xf32dedf2, 0xfb006f91, 0x4f0e3f88, 0xaff724a9, 
    0x7e97fd5b, 0x6a170f0d, 0x5e0de22f, 0x824edfd5, 0x4dd19640, 0x753b0909, 0xa2609c2f, 0x9e3a8e91, 0xc307790d, 0xfcdc021f, 0x975ef142, 0x112542a1, 
    0x3ccf42ca, 0x63f29651, 0x07ce791f, 0x643c991e, 0xf01ffd8a, 0xf061864f, 0x8d74846f, 0xb6de0622, 0x895b9176, 0xaa70c108, 0xc6b94f06, 0xe935b94f, 
    0x0b472a62, 0xa7a75349, 0xc3cc436f, 0xa32e9653, 0x7e5d5baf, 0xc9fe5bf6, 0x793f5eb4, 0x45481cc7, 0x9f56d91f, 0xfefed7f4, 0x5ba9f19f, 0xe93d8f3b, 
    0x9faff539, 0x23db3de6, 0x23d94fe7, 0xfcd97ae1, 0x00fff039, 0x1453fc89, 0x7d5adc33, 0x3745e3a2, 0xdaa07f00, 0xf29955ca, 0x6715cb78, 0xe7d0fd04, 
    0xbfd4989f, 0x7f6e7f12, 0x764ef808, 0xa4ddf0b4, 0x49bb2c9e, 0x24912419, 0x31ae5b30, 0xb755c8ca, 0x0c0427e7, 0xcf18d771, 0x7869fb33, 0xf01dbcf9, 
    0xbec300ff, 0x7be6d107, 0x5621d435, 0x010648b8, 0xac428db4, 0x2d40ce79, 0xf2420ed8, 0x99f8c171, 0x30007b17, 0x665eeb33, 0xcf53925d, 0x30cf2c25, 
    0xe59b8cbb, 0xbd2bc98e, 0xadfdaeed, 0xf2e7dedd, 0xf4c25156, 0xf3a4ae38, 0x8cf2e6dc, 0x4e672fe5, 0xde1425ed, 0xddd5b3f6, 0x77f7d5e8, 0x5fa79fbe, 
    0x4f69bf1b, 0xb419fc0c, 0xfee5596b, 0xb014f1d1, 0xb6e9dbb3, 0xb48d62f8, 0x7e8e6994, 0xea812d44, 0x83032441, 0x7c5e035f, 0xc50ff148, 0x26da8a5f, 
    0xf62be2af, 0x427db9bc, 0xf2318e05, 0x571902c5, 0x55f41a09, 0x49ea991f, 0x7cb1d73c, 0xfc8bfd6b, 0x6bac615d, 0xe586ef3a, 0x89d2dffe, 0xf70c816b, 
    0x40a2366d, 0x28bbcd52, 0x00829c37, 0x75e49805, 0x82d7f335, 0xc7d792e2, 0x465314ba, 0xa71e4bd1, 0x903aba02, 0x90ab44ca, 0x7a45e841, 0xcb80393c, 
    0x5b656128, 0x6d523507, 0x36adfa6a, 0x4ffdd9b7, 0x27f7f0a3, 0xa35470c8, 0xaaeaca88, 0xa5b91dd5, 0x4bbf32a7, 0xd6e5156f, 0x9d7eb6da, 0x8beacc7e, 
    0x1f85dfa5, 0x57b8f13e, 0x3b547c85, 0x8078343e, 0xc14f9f67, 0x00ffda6b, 0x06f3c665, 0x016907b6, 0xcf7805fd, 0xf1b368c5, 0xf7cf5fbb, 0xf15af247, 
    0x5a7ff1f0, 0x47fee9a9, 0x7b59ddf5, 0x577ae48b, 0x5ba8a5ec, 0x16597cda, 0xb5184037, 0x147b3a7d, 0x3d00ff2d, 0x7d14593e, 0x6f2ac24e, 0xa6cb5a14, 
    0xedefd678, 0x47942148, 0xaeb0cae5, 0x2ee41c37, 0x7dd2c67d, 0x62f081ab, 0xa7a39e3d, 0xf2ac465f, 0x7043deda, 0xf9ee3ca2, 0x911f371c, 0xc6275def, 
    0x2611893f, 0xaaf8acbb, 0xafec4946, 0xa3d80faf, 0x63747985, 0x1194bffb, 0xcfc9d1c6, 0x28bbde51, 0x297175d0, 0x73ec5dc1, 0x75f5a9d4, 0xb5683727, 
    0xacb5b87f, 0xf0b140fc, 0xde5ca38d, 0x67df885d, 0x761de0ee, 0xf847f7f3, 0x62ca6bfd, 0x59f5a3fd, 0x2d6935af, 0x316295a7, 0xd42d70ac, 0xf52e2b87, 
    0x7064e062, 0x0e4eae17, 0xc66b8e71, 0x1700ffb5, 0xd5251eea, 0x53f2e2de, 0xbc31173c, 0x85011c62, 0x3f30700c, 0x5eefef01, 0xe01ff0a7, 0xffc5d755, 
    0xa9431400, 0x873ffb39, 0x7643d02d, 0xd34423cd, 0x17001cce, 0x0ee420e5, 0x35fe647a, 0x0f1716fa, 0x9a4f0747, 0x1cf8ec6a, 0x1753615e, 0x8b969253, 
    0xcf9ed5fa, 0xf1cd3efb, 0x881fe35f, 0xb5efd461, 0x17bcd285, 0x3fa5fb60, 0xed965565, 0xd5531083, 0x42cf8154, 0xf03ec673, 0xba4e43fb, 0xaf74d0b0, 
    0x160489f5, 0xe29e6fd1, 0x0c60b443, 0x70d813b3, 0x9ad7f84f, 0x2f3b6af8, 0x7ed6690e, 0x684cd21d, 0x885b99f6, 0x58c57d23, 0x9cf3f371, 0x57f893f1, 
    0x436778b0, 0x7534d4b5, 0x79476586, 0x794022a2, 0xf52347ce, 0xa9f52aae, 0xd254d2ba, 0x6a38c2d0, 0x51a5a6f3, 0x2fc933bb, 0x8f3b693f, 0x7c5a2b13, 
    0xd4b4b234, 0x565f5e25, 0x02474bd5, 0x3e8e672f, 0xe5c1c019, 0x576c8f8a, 0xafb49fc2, 0x06f155c7, 0x27f8a997, 0xc45fd64a, 0x977a718f, 0x7788e73a, 
    0x23991b62, 0xb2adad24, 0x72943c0e, 0xd9f89f19, 0x4c2e1c57, 0xd4b9331e, 0xc6272f7c, 0xdca504af, 0x2452d688, 0x9c322c91, 0x8b70630b, 0x38186e22, 
    0xc6182fc3, 0x1fb4c42b, 0x1fe2cf0e, 0x355a6910, 0xe63a0fa2, 0xe00c8c55, 0xfa244f00, 0xa8693200, 0x6f5549b9, 0x77bb684b, 0x2855a422, 0x6fad08fb, 
    0x6f7deeab, 0x3bfc19fb, 0x6e85571a, 0x633c41fc, 0x61835aed, 0x2aac1c09, 0x04fea370, 0x15a06fd9, 0xb2ca2df4, 0x00ffacb1, 0xe1ab6805, 0xd85a0e5f, 
    0x12abc4db, 0x7a8db8c6, 0xed000680, 0x75b50ad8, 0x2a875bab, 0x7160e3e1, 0xe0152ff3, 0xaaeda9d6, 0x14ed1e39, 0x2b5053a9, 0x9ec77c33, 0xeabd9bf4, 
    0xb8c35ebb, 0xadafe3fc, 0xfe62db27, 0x8575fefa, 0x8fb98dbc, 0xe1437c87, 0xa7f6774d, 0xdebde193, 0x132e8989, 0xad763a48, 0xddfd3175, 0x8749909c, 
    0x78d33179, 0xa9571991, 0xf571ecdd, 0xd92fc21f, 0x0a7fc17f, 0xb3a25921, 0x68586b5d, 0x6aa84bc2, 0xfc9cab11, 0x18a931d9, 0xe3d81d8c, 0x7b92019c, 
    0x170e9ff3, 0xb200ffc3, 0x2d2bc0bf, 0xdb20c447, 0xe2164edc, 0x24f16df1, 0x0c3237f7, 0xdc0e68ac, 0xe018b890, 0xd493a400, 0x151fcbd7, 0x1c3f6b7f, 
    0x5000fff8, 0x573f2d9e, 0x6474d0b8, 0x2ddada9d, 0xadb4b534, 0x31df461e, 0x01248995, 0x49c6069c, 0x4acec7f6, 0xca9d6196, 0xbd043c78, 0xab0d1a9e, 
    0xad3600ff, 0x16dddef4, 0xf853dfd6, 0xeb0cadee, 0xcb54aa8a, 0xc39e8ab2, 0x8f524a03, 0xde9fab36, 0xd26a4b6f, 0x6da52bd9, 0xf48bbe5b, 0xfd37beaa, 
    0xf071bca4, 0x95f851b7, 0xe9d8d9a2, 0x311eeb11, 0xee28fe8a, 0xfc094b75, 0xc06de098, 0x44002b01, 0x2bb7adcc, 0xb891368e, 0xfd9f2b72, 0xf96c7fa0, 
    0x34664d7c, 0xdc5c004f, 0xc7f269d9, 0xb7f7372c, 0x4e92ca16, 0x8840bbac, 0x82542596, 0x815525c7, 0xcc570403, 0x7c251a1e, 0x3815a547, 0x0f167761, 
    0x705af1be, 0xc3570cdf, 0xe4e2ae3f, 0x14edece2, 0xf7f67fda, 0x8efd7df9, 0x17380faf, 0x61629615, 0x9413e69a, 0xb409d225, 0xfb76fbf7, 0xc7fe7ed4, 
    0x83ec8fe9, 0xbf0b7578, 0x4a90c711, 0xf78f834a, 0xc5af7945, 0xf865196b, 0xc185afdd, 0xd451783b, 0x7feadafd, 0x9a995b61, 0xc04cc5e7, 0x31804e8c, 
    0xc65a7e1d, 0x34749bf8, 0x22fe8dcf, 0x2c8a95bd, 0x5df9ec36, 0x1e14b2a5, 0xdaaef701, 0xf2f16454, 0xfcbfb4a4, 0x5575fb03, 0x35aaa08b, 0xad12fcb7, 
    0xaff48c97, 0x6b46f800, 0xba74cb6b, 0x8ff4b5f1, 0xb3a36f6f, 0xa0d3fdee, 0x583e52e6, 0x929133f0, 0x5e71ec4e, 0x1ada9f20, 0x1ea2aee5, 0x325dd648, 
    0x85b654da, 0x9850645b, 0xe84484db, 0xea487215, 0x96aef778, 0xf8a94bdc, 0x9174e2aa, 0xce96bbe4, 0x1723df55, 0xbb972763, 0x00404e0a, 0xbcdee3b0, 
    0xb3b7c0cf, 0xb5f35a69, 0xda96dcd5, 0xab1bbb65, 0xce275ba8, 0x70bdcb40, 0xc6930401, 0xaf18070f, 0x30e0a8d4, 0x4b554cf9, 0x3cf3b35d, 0x61be3e4e, 
    0x45cb9553, 0x9ec05fa1, 0x87f8bd1e, 0x42270de3, 0x7d61e1d1, 0x95852a77, 0x8c913c0e, 0xf1d47d48, 0xbf26f48c, 0x87e8f544, 0x4f18fe80, 0xe100fff0, 
    0xe26b89cc, 0x2f740b7b, 0xdb72837c, 0x673630cc, 0xd982c91c, 0xef48c23f, 0x39fc2d5f, 0x673f6dd4, 0xffeb08df, 0xb5241100, 0xf156db92, 0x831f2f34, 
    0x93649362, 0x398f5b44, 0x89da70d3, 0x3cc93996, 0xbde6c1c7, 0xbe7af67b, 0xb642cf9e, 0xb73c7237, 0xcbd3ac4c, 0x3ed2dc21, 0x7a12b3ec, 0xef737292, 
    0x62982f5f, 0x5c7b799c, 0x2f970cfa, 0xa3a42a86, 0x00ff8a3e, 0x6866e6d7, 0x4f3c0b3f, 0x5f1a69a4, 0x136fb588, 0x211eeade, 0xcd97bfb5, 0x297f6bb5, 
    0x96070212, 0xde0a28cb, 0x3272e066, 0xd7fa41ca, 0xd45f7cb0, 0x117e66bc, 0x5d342578, 0x3d7bf459, 0x3a6b3b44, 0xe59a5bac, 0x630a4662, 0xc7fc008f, 
    0xf01c9c93, 0x881fad38, 0x4d8e231e, 0x62a33212, 0xe04abc9f, 0x699e3a0e, 0xb3237ef7, 0xe9033ed4, 0x47d29950, 0x42babcb7, 0xd64ef707, 0xf3d7e907, 
    0x881822af, 0x5a568eba, 0xcafabc2f, 0x105a2eb8, 0x9677dba6, 0xcfacadaf, 0xc302cfcf, 0x2fe37f7d, 0x326a5b1a, 0x6813b73c, 0x93b47177, 0x71e10e28, 
    0xfc01b322, 0xb57e4058, 0x3ec9fed4, 0xf8231e16, 0x4caa798b, 0x16616f33, 0xb9ed3fd5, 0xdf8ae8c7, 0x1b78659d, 0x1ff1b757, 0x89972bc7, 0x7775d1bf, 
    0x24e2d3be, 0x596b3060, 0x71027f11, 0x21fbe35e, 0x3dbc5178, 0x466ddef0, 0xdf9320e2, 0x720feece, 0xbf1deca0, 0x7b9d3fd9, 0x78ba6a15, 0x7cec6c7b, 
    0x6219a742, 0x4dba8b5b, 0xef1ef9eb, 0x2456f135, 0x52a50736, 0x7cd4b5b5, 0x9e25774d, 0x72d76697, 0xc6c6fb83, 0xb5a73e15, 0xe491bc52, 0xe9863822, 
    0xbe886064, 0x5f019ca4, 0xf02afc49, 0x147e696a, 0x850041b0, 0xb8678de6, 0x469ef763, 0xb37d9e00, 0xce576c8f, 0x64f5ad54, 0xf6e4559c, 0x6635ea3a, 
    0x27e1b1e5, 0xc4bc76e0, 0x58cd9696, 0xe3f646f2, 0x14fea3f4, 0x00ffb966, 0x00ffac3d, 0x00ffb6ef, 0x4d8efa0a, 0x7c23111a, 0xd3fad489, 0xfee1b17f, 
    0x1fb57ee2, 0x4776c65b, 0x1f69ed9f, 0xb600ff96, 0x1d8fc327, 0xc38745fc, 0x1ad800ff, 0x167a9734, 0x37f76693, 0x8da12e6e, 0xc1c05652, 0x55497056, 
    0xe3fdc05e, 0xfc582c5f, 0xa4cef10b, 0x9ad0b640, 0xf8ef4652, 0xf87184f9, 0x6b947ebd, 0xd7b2211e, 0x21e3077c, 0x34f82661, 0xe30e4ce8, 0x71ce3ea3, 
    0xf885d7f8, 0xa34aed22, 0x979894e1, 0x396554f9, 0x131e6c85, 0xb482f1ea, 0xf5b67a3d, 0x7887cfd4, 0x97578632, 0x6d55c1d1, 0x2dadb938, 0x3d2bbfaf, 
    0xf9b3d2be, 0xd98f2d9f, 0x0c43e2af, 0x3f360d8f, 0xffdff2eb, 0xbd558e00, 0xf873f627, 0x5aaa678f, 0xd986375c, 0xd8d11956, 0x8cdfaefd, 0xd3f33f30, 
    0xb6d8beda, 0x58e685be, 0x4076870c, 0xaf990e6c, 0xc1c7f057, 0xe8137fbb, 0xd54ee766, 0x06994b66, 0xa35c6715, 0xc31e383e, 0xc8bde638, 0xebca3866, 
    0x1f7f84dd, 0x46dc3df3, 0x9ae09651, 0xf04b2a75, 0xe569fb7f, 0x5f98b27f, 0x59dc5801, 0xa6418a78, 0xefdcddde, 0xf7f92686, 0x3f9029fe, 0x2d7e5413, 
    0xbcd7327c, 0x13dfe34b, 0x9f5d5a6a, 0xd5fe92da, 0xba94adad, 0x016c7620, 0xdfdb30cb, 0xaddedb93, 0xd544c7f8, 0x3be3153c, 0xb15c171d, 0xc4d44d93, 
    0x9d2422ab, 0x87ce4e24, 0xdca3d7ba, 0x3cc9f1eb, 0x6b4546b6, 0x172fd7c8, 0xe6e328f1, 0x3a3f72fa, 0xa65667f0, 0xe5b7bf1e, 0x73a7baf7, 0x154663e9, 
    0x955372a9, 0xf9e8d6e2, 0xf8147e39, 0x27fec1d7, 0x8bb5edd4, 0x5e0d3409, 0xc81291d1, 0x558114cd, 0xc4aa1eb7, 0xc01d8c11, 0x75ad9ff3, 0xfcd113be, 
    0x5bfde13f, 0xd9b5d75b, 0xd3bba3ed, 0x8fbca46c, 0xc36b9744, 0x0644e66e, 0x3ce755e2, 0x1e14ecc8, 0x9a7a9159, 0xd7da2ff4, 0xa48f1ee3, 0xc5f03cfc, 
    0xe2a39ce7, 0x12ac7b6c, 0x1617b902, 0xc9937c60, 0x670087ee, 0xe15f7cad, 0x6a0e00ff, 0x5987307e, 0xe39a26d4, 0xe22292ce, 0x6f2565ee, 0xfd23f325, 
    0x12dc6ed1, 0x3ed8b0c3, 0xb930eea3, 0xa2342f8e, 0x2bc64895, 0x00ff4eba, 0xc43c3f8b, 0x7cf9f0e1, 0xfadc559c, 0x75f865ed, 0x653c89fc, 0x1dcf1be3, 
    0xbb5b8ef8, 0x85ca93b7, 0xdc582b1a, 0x1d882282, 0x49eec0cb, 0x27b9c72c, 0xf8a1beda, 0x6bebe231, 0x718528dd, 0xb46121e7, 0xfe1c647a, 0xdaf5f1b5, 
    0xba5f1779, 0xf38a1bc8, 0x1f648cd7, 0xe047bdd6, 0xf7edb575, 0x2f48e488, 0x70c4d3a4, 0xbd0bb979, 0x63c05d64, 0xaf75dc07, 0xfbc3302f, 0xc7da574a, 
    0x5e6390af, 0x5f6b131b, 0x19ec439b, 0xe77941bc, 0xedad997d, 0xd938b7e6, 0x07309224, 0xc529ecfd, 0x4fb55f70, 0x5f7449c6, 0x243af686, 0x5d595950, 
    0x2d2d44dc, 0x4becc2be, 0x43960102, 0x8c9c0eb8, 0xbdc292e3, 0x4d77c133, 0x2a2b1c69, 0x80add42d, 0xff00cb1b, 0xbfe33a00, 0xabd80f68, 0x2e17bfc6, 
    0x858ff1a3, 0x622d1b35, 0x3cae5ae0, 0x3cfb313f, 0x115b06ca, 0x89193b39, 0xf5dbc163, 0x842f2faf, 0x4c465165, 0x15f78cfa, 0xd3edf0ec, 0x7bfebd8f, 
    0x87cfe3b3, 0x888f655e, 0x1f7521fc, 0xa1d562c8, 0x2263cf39, 0xd000ffa1, 0x1b8defab, 0xd0418f49, 0x54e8f4ad, 0x00bb4222, 0xf9c78151, 0x841ff135, 
    0xfff47934, 0x7bf81000, 0x27add445, 0x5d5bf5d3, 0x6c6e3852, 0xcd3163ee, 0x02e4a204, 0x4790a78e, 0xb5afafa1, 0xb66a162f, 0xda24cb32, 0x7601cf72, 
    0x18b6e461, 0x1e643c29, 0x3d63e8f5, 0x7cea25e9, 0xa5dd1b66, 0x7e75e475, 0xd3feb50e, 0xbbe185f8, 0xbf677220, 0xc73e408d, 0xd4bed23f, 0x4e13d3b3, 
    0x212686b4, 0x1e174a44, 0xec37f1f5, 0x6f0be2eb, 0xf0727c15, 0x319e20f6, 0x809bf66b, 0x9e8f47b2, 0x71f58f38, 0x56fbad5e, 0xdf96d7fe, 0xc7fea004, 
    0xd6612dd1, 0xbe746bfc, 0x31123664, 0x9cd0edf2, 0x90232609, 0xc156073d, 0x1d5e73c7, 0x31269e74, 0xa9dfae86, 0xaeea8c32, 0xcc7bac56, 0xbfe643b2, 
    0x867fbc5f, 0xef43e69b, 0xd77c00ff, 0xb69f04e6, 0x6469c7b7, 0x81ee3a67, 0xc54e6219, 0xec0bc1d1, 0xf8dfd432, 0xbf8e3f6d, 0x3f6830f4, 0xfe5f27f8, 
    0x953dbb2a, 0xa91f236f, 0x51f8a3b3, 0x10fc2269, 0xeccec8f1, 0x7a925846, 0xe39aa79d, 0x6f6913fe, 0x5696eaad, 0xb180e47d, 0x1770320a, 0x5ed500ff, 
    0x10a5f087, 0xd4f1137c, 0x1b589763, 0x6bf2fd77, 0xe20df887, 0xf80d5f2b, 0xd4bf46cf, 0x0bd93222, 0x01906379, 0x8333669c, 0xd7f981f9, 0xea360991, 
    0x7ee8bfdb, 0x18e32689, 0xfc37a2db, 0x056a0b0f, 0x33ddca5f, 0x38eedc38, 0xe9a79e8b, 0x8feb2bfd, 0xf8d8b286, 0x288a4853, 0x61b333a5, 0x4fea679e, 
    0xf215f4a8, 0x59aeab86, 0x54933d7c, 0xb6a1996b, 0x55e2de8a, 0x3900593e, 0xf5554952, 0xd2836be8, 0x1caf697f, 0x67c48f78, 0x45e4f047, 0x8ee5ae2e, 
    0x4225283b, 0x458881ea, 0xeef0c767, 0x9cfa9a2b, 0xaf560daf, 0xf3a223ef, 0xab3b6b3e, 0x94539547, 0xbf8fe8b7, 0x4f7832fe, 0xe1c5f843, 0xe29d6008, 
    0x641ac483, 0xeaa4718b, 0xd8683e2c, 0xf544b41c, 0x7a8cc328, 0xc097bce2, 0xbbe6b21f, 0x238f8fe2, 0xbc221ec6, 0x5f85171a, 0xd266364e, 0xe6e60627, 
    0x0701825c, 0x3da75e85, 0x5eeb417e, 0xcbfef081, 0x83bff050, 0x7a41bc19, 0xecd62ade, 0xdb8b6ba0, 0xc7f6688b, 0x34523290, 0x35d331e8, 0xc600fff3, 
    0xf692dbdf, 0xea90c0d7, 0xd9900c3a, 0xec8fc335, 0xd8dd3afd, 0x4562ab5d, 0x709066f3, 0xa86c6d10, 0x535fc839, 0x5269d55d, 0xa85451ad, 0x776bedae, 
    0xf0e673bf, 0x7a38f1f5, 0x5646a532, 0xdaaff98d, 0x7c928fdd, 0x47dde061, 0x3dedefe2, 0x5a0f7fe2, 0x14a53edf, 0x9fb6b45a, 0x8ae5036f, 0x23c026ce, 
    0xad8fe3b0, 0x0ff1437d, 0x82473ac3, 0xa247187e, 0xe9dbf2e9, 0x28e6f616, 0x3299bce0, 0x76793eb1, 0x6437eec0, 0xfb31d7fb, 0xfb3dfc1d, 0xfcef8317, 
    0xdaafa965, 0x666afdb5, 0x0ddc5d90, 0x9c24ecd2, 0xc7fc3cee, 0xb57f5a93, 0x47faa036, 0xe679f1c3, 0xa32ef826, 0xbacb0c71, 0x61b2b039, 0x67887f19, 
    0xaa381e9c, 0xc53156a3, 0x6805a7d3, 0xd6c8a7c7, 0x9d547f70, 0x96f38e5a, 0xf8219fad, 0x8807d5e2, 0x08cb4bf5, 0x7d3afb93, 0x31b57742, 0xeed865b8, 
    0x9e20284a, 0xf0e35e71, 0x6813c2a3, 0x0c87f6ba, 0x47a70cca, 0xfec02779, 0x7f46aaf4, 0x87aff05a, 0xafbba610, 0xd7b5da2c, 0xc85aa595, 0x9c5c6865, 
    0xa80af53b, 0x2b609f3a, 0x1a865feb, 0xb7d4cd7d, 0x01a1deba, 0xc4887bb7, 0x0fb2b636, 0x23750b9a, 0x63b12368, 0x4a4f1fc9, 0x465cf3f2, 0xf86f5af1, 
    0x610fef9e, 0x64ede514, 0x2d7aabba, 0x4c8fe85f, 0xbd05eed0, 0xade079d4, 0xcdc2f77b, 0x3cc03273, 0x600008c2, 0x63e5f99a, 0x3b956564, 0x3b7ca357, 
    0xe6d65ad7, 0x31829c2f, 0x70e66b9e, 0x73356df5, 0x1c7a73eb, 0xd48a5bf4, 0xbebafdc2, 0xfcddda0b, 0xf157f84c, 0x61814c3f, 0xc6d4b8b9, 0x6bb4ad95, 
    0x9e483181, 0x1f9b696b, 0x42b73cc4, 0x76b0514f, 0x985533ae, 0x6e601b45, 0xfa9a6300, 0x821ee3c3, 0x04be10df, 0xd3d69af8, 0xb6b66a6b, 0xf269a84d, 
    0x5cf10eec, 0x26c3a542, 0xe94d317a, 0xadcfd991, 0xf1cf677e, 0x13fac55b, 0x0743b2da, 0x65e4ec88, 0xd92e93dc, 0x30bf9e0a, 0xc4adaff6, 0x9271ca45, 
    0xd4e6c7da, 0xf928a11d, 0xcf7e7e9f, 0xbcd20a3e, 0xfe59e00d, 0x8f32ea20, 0x34694bb4, 0x618881a7, 0x76ead30d, 0xe293f80a, 0x8a1fb5d6, 0xbb782abe, 
    0xf2f9325f, 0x0b736adf, 0xace41879, 0xf447c40a, 0xf50000c2, 0xf6e3bd26, 0x69c9f882, 0x15e167f0, 0x9d7480df, 0x136fb559, 0x5646736b, 0x962c36de, 
    0x72038516, 0x12032101, 0x794ebd70, 0x9d3df215, 0x3d69d7f4, 0xe49bccc5, 0xe53a3f8e, 0x918c40f2, 0x3da147f7, 0xd5fa00ff, 0x2a7579f3, 0x114bea95, 
    0x7be65fd2, 0x9ba4704a, 0x0b3dfd96, 0xac64770d, 0xec9fde46, 0xcfb27d52, 0xe5f8bffb, 0x24debc79, 0x28679ad5, 0x95580862, 0x674a471b, 0xc75a24fc, 
    0x00ffa2f7, 0x577d45be, 0xcb638fb0, 0xfefbdcfa, 0x04dfd707, 0xe1435d27, 0x4fa5c427, 0xcf01c598, 0xf31aec3f, 0xa54f06af, 0xdd7a5a68, 0xece58278, 
    0xb6284cad, 0x7b6e1aeb, 0xfd13ee96, 0xac6b92d1, 0xda6d95fd, 0x121f836f, 0x924652ae, 0x28d8982b, 0xf21ac2f4, 0x3257437d, 0xa45d1a6b, 0x6bab34f0, 
    0x1b22610b, 0x7fa2408c, 0xcace2b3e, 0x71e3e8b2, 0x564e2895, 0x7de4d78d, 0x9e303f0e, 0x10b10613, 0xf3c8f65e, 0x5e8a00ff, 0x4f3cd425, 0x5fa99b26, 
    0x0d6c3fa9, 0x1c11bc1d, 0xf1e0fcae, 0xfc79e2fd, 0x859feb6b, 0xf8be0e9e, 0xcaeef023, 0x8348133d, 0xab8df85e, 0xce539d2a, 0x89491770, 0x6cc19894, 
    0x90e0541e, 0x72bee239, 0xdf20fcd3, 0xa42dfc0b, 0x9222deeb, 0xe5ded218, 0x674b74af, 0xb9bee41b, 0x988dee88, 0x2b11bb1f, 0xaf39dfb7, 0x7c9bfd79, 
    0x189e7459, 0x50fb527d, 0xb9fbab6b, 0x77f2e69a, 0xb6906639, 0xe6eb355b, 0x8a87a538, 0x29da288d, 0xc423dfda, 0xda5f30ca, 0x697b8918, 0xe4bf565e, 
    0xf1837e7b, 0x065ec677, 0xdfaf57f8, 0xd86100ff, 0xb121beea, 0x8aca5a9c, 0x86436c71, 0x2377ebfd, 0xbf26f103, 0xeed2a73c, 0x68a1637c, 0xae88e48b, 
    0xec792db5, 0x4dc04bcc, 0x0f8434ef, 0x6b5f9361, 0xd6c7b378, 0x5ff808de, 0xeb728de3, 0x86b8b753, 0xdc8668f7, 0xb92ccc67, 0x7ccdfcc1, 0xdb30fbdf, 
    0xfbb5892f, 0x3450ef48, 0xbaec6dba, 0x937124c9, 0xef3f5018, 0x0b87aba9, 0xa99bc65d, 0x7efd2d6d, 0x426b7e87, 0x492a6b9c, 0x2b00ffea, 0xfdfb7e2d, 
    0x5696d5c7, 0xf0197ef6, 0x129796f5, 0x81b2e088, 0x119c5221, 0xfb155e81, 0xf8aacd67, 0x955de16b, 0xcea5a5ee, 0xfcfd5dda, 0x4ae6c976, 0x29269322, 
    0xfea15b99, 0xfa8a71e6, 0x868ee157, 0x8df8309e, 0x6f326563, 0x2ed7208a, 0x4cc741bd, 0xffc235fe, 0x2c5bc100, 0x3fe0d312, 0x1b508886, 0x603b12fe, 
    0xf5f87f4f, 0x253caebc, 0x605cac59, 0xebb7fa95, 0xb3b1f1d8, 0xbae2a48a, 0x1378009f, 0xe097bee3, 0x7c58745b, 0xaf33b720, 0xc0f7702d, 0xf55f1f3b, 
    0xcb0abd46, 0x1efbdcf6, 0x762f78ec, 0x0af98fe1, 0x71fdbfe3, 0xaf6897af, 0x8457a67e, 0xc6792eab, 0xe65fd6ef, 0xf1ced272, 0x4ea122f4, 0xecfe92a5, 
    0xd6fac87f, 0xcbdbdb2f, 0xbbc0a74d, 0xff2feebf, 0xf62ada00, 0x0500ff9b, 0x94cefe09, 0x7607f83a, 0x1f670d3b, 0x3cbe42fb, 0x1865a5a2, 0xfea9ee24, 
    0xa9cafc2f, 0x5535669f, 0x00ff56a7, 0x9100ff28, 0x9fe121fa, 0xf8a32bf8, 0xfe8d257a, 0x00ad7d15, 0x8b782bc3, 0x7fdc6168, 0x99afa9c7, 0xda00ff74, 
    0x9e4fdf72, 0xf78467e7, 0xd18ebc5b, 0x621e7544, 0xdd554952, 0x818173e5, 0xbce20c9c, 0xaed34d47, 0xd6467d75, 0x9e26cec2, 0x8254eaee, 0xbbab9318, 
    0xdca3aa10, 0x177b0592, 0x67f00ded, 0xa66ff84b, 0xf0544b78, 0x4bf7c2fc, 0xb736b5bd, 0xcec85157, 0x71445e92, 0x067a8223, 0xf27100e7, 0x95a1f61a, 
    0x520d637d, 0x0bb98faa, 0x4dd7575f, 0xcbc75e3f, 0x8363cfd6, 0x4ec3d1c6, 0xfc56a976, 0xaa7b2bba, 0xb6bef6fa, 0x6ed867ef, 0xc344fbb7, 0xc1924aaa, 
    0xcab29fe1, 0xf76fc83a, 0x9f333db1, 0xcdac762c, 0xbba9e34f, 0xedd2e1f0, 0xd2666334, 0xb8b964c8, 0x62da7b37, 0x7e0cb67d, 0xc3f7bc66, 0x8f96a59a, 
    0xa1c6a5a9, 0xb6eb5aa3, 0x97f6dab8, 0x911acd72, 0x271a9291, 0x40800d46, 0x419e23c9, 0xebf84eaf, 0x0e4fe165, 0xdb5678d9, 0xb410fec3, 0x34d666d2, 
    0x7b623d1b, 0x347579b3, 0x26d93c91, 0x57cac338, 0xb28c0b68, 0x19db7392, 0x4b5986a2, 0x1aac4ed8, 0x351f3d4a, 0x5fa3dbf5, 0xe559f188, 0xe1e9e278, 
    0xd44909a7, 0x39b9a4bd, 0xa9beb755, 0x7216e5e9, 0x33ede3ab, 0xdda2dd68, 0x35926333, 0xef7f3200, 0x27fc2fd5, 0x01fd57da, 0x62f0bf2e, 0x70d5f83f, 
    0xb13757f4, 0xefcc6f87, 0xfe3bf5f6, 0xec4fe947, 0xffdbe1bf, 0x3afc0b00, 0x8500fff1, 0xcc2f1fb5, 0xb74cd486, 0x6852b670, 0xc7554264, 0x782f5fe1, 
    0xdb11c757, 0xfaf29278, 0xf3c1ca79, 0xc40d3740, 0xff13e0e0, 0xd8577c00, 0xaead075f, 0xad0d3c6d, 0x66bede5c, 0x068cf0b9, 0x31cf5757, 0xf5cf53a1, 
    0x489bcfaf, 0xe58ab8a5, 0x32935720, 0x244f1b17, 0xb5fe3c6e, 0x7453e5e6, 0x4389b831, 0xed915fa3, 0x5c5d3566, 0xcf3e1d16, 0xfff5d0f0, 0xb7f68e00, 
    0xda68d3ba, 0xe396b8b9, 0x5d9e164e, 0x5636abb5, 0xc54902d8, 0x09cdfe6e, 0x7279cda9, 0xdaf0da3e, 0x0a218efc, 0x861b6419, 0xc4959e7e, 0xb7c5eb78, 
    0x1c5ed91f, 0xb8a351d1, 0x89853117, 0x3b06e4c8, 0x82e07e7e, 0xf00f7d4d, 0xfab6c24f, 0x45d39a66, 0x3886226e, 0x0a29da52, 0x9623a6e1, 0x4a4ffd90, 
    0x9d52435c, 0x5b314a29, 0x4631fc9d, 0xa5ea6aa5, 0x0ff5dcf6, 0xb7cc7e1f, 0x828fb43f, 0x13bdb42d, 0xe6f0b75e, 0x96216ba9, 0x26e3190b, 0xddc7f5de, 
    0x7de53012, 0x5fe1b5be, 0xad3ffc03, 0xbec70378, 0xac2fd127, 0x1de29d06, 0xaf2c192e, 0x067aee2c, 0x3e388356, 0xa10f8287, 0x147eadaf, 0x1f5d9678, 
    0x9157b759, 0xf47aab90, 0xdbafacf7, 0xf8b3460b, 0xf825e273, 0x49e8a693, 0x0900ff75, 0x7a6f4502, 0x9247b8d6, 0x7812b262, 0x745bb11c, 0x848bd7fa, 
    0x9c61ebaa, 0x76a77e7b, 0x71544e6b, 0x99d752ce, 0xec97467e, 0xd266e2db, 0xf818ef75, 0x6bb25bbf, 0xd2432b1d, 0x4e9dcddb, 0x487627e4, 0x7020565f, 
    0xdbafe22b, 0xf19cf693, 0x067dc767, 0x4dfbd6de, 0x27fcd1b3, 0xcd1da91e, 0xebaea285, 0x95295690, 0x2af5475a, 0x57fa48ee, 0xf8497cbf, 0x7fe161d1, 
    0xf045e7d9, 0xc7f19ab6, 0x85a178ae, 0x8c70dcfd, 0x04990d4d, 0xd461baed, 0x4fdac0ee, 0xe38ff84a, 0x4dbfa5d6, 0x8761b1b4, 0x8e90a349, 0x8c1ff998, 
    0xd8b2347e, 0xd621b64a, 0x2f3bd192, 0x8a978796, 0xe4613885, 0x5af1ecde, 0xd0bea228, 0x8aa250f9, 0x9e25da92, 0x64de28e6, 0xad7047b7, 0xc68aa134, 
    0xd08ee509, 0x015e074e, 0xb5d0803e, 0x3d577613, 0x87aee033, 0xbe6b0a71, 0x3b5b8a2b, 0xdc2a8d7b, 0x7fade9db, 0x35a20d7b, 0x10aac0f4, 0x632e3af3, 
    0x674c324f, 0xbde24539, 0x84f7e163, 0xfb6bfcaf, 0xc0b3f83c, 0x77e9f377, 0xe796a69a, 0xc7d2d158, 0x7ebdb557, 0xc3425d32, 0xdc19952b, 0x9e194032, 
    0x47e2a7bc, 0x1ed622fc, 0x8ff6f004, 0x5a176fe1, 0xeedaf16a, 0x4bb7519f, 0x6e799b3b, 0xde9fdc6e, 0x6405f1fc, 0xe62ec244, 0x1fd8320c, 0xcd7ea731, 
    0xf0b232be, 0x7dabc417, 0xa0d75363, 0x89a474d1, 0x788ebce2, 0x51ed9767, 0x16c62030, 0x76906c24, 0xf281cdb7, 0xeb2bbd8e, 0xe16875b0, 0xb5f01471, 
    0x8cd3e21d, 0x7d79949a, 0xa6edabf5, 0x3fca7e9d, 0xf830cd37, 0x5b07c3ac, 0x9c9aa030, 0xba08a564, 0xd3fde773, 0x3f5a52f7, 0x2ffbde7b, 0xe5e9b549, 
    0xb41feb75, 0x87dffa2f, 0x6925f63f, 0xd503fa5f, 0x63781f6f, 0x3ffe77c0, 0x5ec397b8, 0xfc6dd337, 0xce2b7b39, 0x7a61d13e, 0x0409668d, 0x3b60b1c7, 
    0x3b6e2787, 0x09de0e2e, 0x7bebf8d2, 0x59114fe1, 0x40e75a78, 0xad9e7df1, 0x59a18f36, 0x1b5af3e8, 0x9564a82b, 0x2132c8e1, 0x3bed8278, 0x466086b3, 
    0xe5bce63b, 0xf1e1d843, 0xd58b7310, 0xb68ed25a, 0xf6d4357d, 0xac588ca5, 0x69ac0a6e, 0x7ba526cd, 0xbae59ad3, 0xb67c5256, 0xff6afa4e, 0xa8c70300, 
    0x8ff08aa2, 0x3c4f3faf, 0xfbc72b11, 0xbbb2d933, 0x6e84372b, 0x4f701037, 0x577cad27, 0xb9053ee0, 0xfa2f1f1c, 0xc14bfb1a, 0xb66cf27f, 0xdc28f63f, 
    0xb7f83a7f, 0xdf769fc0, 0x00ffb9fe, 0x595e5e43, 0xf588f5fe, 0xe3eb915f, 0x7a28dd7f, 0xf0ddcc3f, 0x8a3f6bdc, 0x892a4334, 0x77a1cc0a, 0xab79e08c, 
    0xd1abbed2, 0x04029027, 0x8d23008c, 0xf055bec6, 0xfa8cfcb7, 0x5f76fd3f, 0xf5b51afd, 0xeadf8b36, 0xfdb3e62b, 0x7ed18b71, 0xbff0de47, 0xeecc9ffb, 
    0x46893b74, 0xb81211a7, 0xaef1fe39, 0xbaabf6c3, 0xde804f9a, 0xb02b0f13, 0xc6b7251e, 0xe81f27e6, 0xa217d7f3, 0x2f4ac87f, 0xb51f76ad, 0x6f90fc47, 
    0xcbd87f0a, 0xa200ff6f, 0xf82ca327, 0x391c7a2a, 0x9fe9f1ef, 0x47c5f81c, 0xc099f6f6, 0xdf50e6f9, 0xafc37ced, 0xf1fb7cad, 0xcd4b9a71, 0x6f969c41, 
    0x981b06ed, 0xc50de3e4, 0x0fe3077d, 0x3fe90ff9, 0xf47fddf5, 0xfc3d5f21, 0x8f00ff59, 0xc2fe439d, 0xbd9afc2d, 0x71f8bbac, 0xe3d30c3c, 0x51f4e691, 
    0xcce77b45, 0x40511405, 0x40511405, 0x40511405, 0x40511405, 0x00d9ff1f, 
};
};
} //namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(UpScaleSimpleFastNode, "RealWorld Upscale Fast", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "AIFilter#Video#Upscaling")
