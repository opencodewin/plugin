#include <UI.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <realsr.h>
#include "AnimeSlower_data.h"

static const std::string key = "tianlu2024";

#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct UpScaleAnimeSlowerNode final : Node
{
    BP_NODE_WITH_NAME(UpScaleAnimeSlowerNode, "Anime Upscale Slower", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "AIFilter#Video#Upscaling")
    UpScaleAnimeSlowerNode(BP* blueprint): Node(blueprint) 
    { 
        m_Name = "Anime Upscale Slower";
        m_HasCustomLayout = true;
        m_Skippable = true;
        m_BGRequired = true;
    }
    ~UpScaleAnimeSlowerNode()
    {
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void PreLoad() override
    {
        auto url = GetURL();
        auto path = ImGuiHelper::path_url(url);
        std::string data_path = path + "AnimeSlower.data";
        // decrypt data file
        std::vector<uint8_t> data;
        ImGuiHelper::ImDecryptFile(data_path, key, data);
        if (data.empty()) return;
        // create realsr
        m_device = ncnn::get_default_gpu_index();
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        m_realsr = new RealSR(AnimeSlower_param_bin, AnimeSlower_param_bin_size, data.data(), data.size(),
                            m_device, true /*fp16*/, true /*packing*/, false /*tta*/, 1 /*thread*/);
        if (m_realsr)
        {
            m_realsr->scale = 4;
            m_realsr->prepadding = floor(m_realsr->scale);
            // preload model once
            ImGui::ImMat tmp(64, 64, 4, 1u, 4), tmp_out;
            float progress = 0;
            m_realsr->process(tmp, tmp_out, progress);
        }
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        int64_t t1, t2;
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (!m_Enabled || !m_realsr || context.m_bypass_bg_node)
        {
            m_NodeTimeMs = 0;
            m_MatOut.SetValue(mat_in);
        }
        else if (m_realsr)
        {
            ImGui::ImMat src_mat, upscale_mat;
            if (mat_in.device != IM_DD_CPU)
            {
                ImGui::ImVulkanVkMatToImMat(mat_in, src_mat);
            }
            else
                src_mat = mat_in;
            if (!src_mat.empty())
            {
                src_mat.elempack = src_mat.c;
                t1 = ImGui::get_current_time_msec();
                m_realsr->process(src_mat, upscale_mat, m_progress);
                t2 = ImGui::get_current_time_msec();
                m_NodeTimeMs = t2 - t1;
                upscale_mat.copy_attribute(mat_in);
                upscale_mat.elempack = 1;
                std::cout << "General:" << m_NodeTimeMs << "ms" << std::endl; // for debug
            }
            else
                upscale_mat = mat_in;
            m_MatOut.SetValue(upscale_mat);
        }
        return m_Exit;
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve* pCurve, bool embedded) override
    {
        bool changed = false;
        ImGui::SetCurrentContext(ctx);
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;
        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string("AI"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[2] = { &m_Enter, &m_MatIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    float m_progress    {0.f};
    RealSR* m_realsr    {nullptr};
    mutable ImTextureID  m_logo {0};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 130;
    const unsigned int logo_height = 130;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 9119;
    const unsigned int logo_data[9120/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03820082, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xfc003f00, 0x288aa2aa, 0x00ffae00, 0x6bb57af6, 0xbf8f00ff, 
    0x1b932d0d, 0x9936f1e6, 0xc9c0c918, 0x5a7f8cba, 0x7fd22be0, 0xda8f6366, 0x1d49e143, 0xd22ce17f, 0x2ab2f47f, 0x24b4a3ce, 0xfc298dfc, 0x683ff571, 
    0x2f3d7d74, 0xd446136f, 0x29c78881, 0x28b91df2, 0xc7a3f9d9, 0xfaf363a3, 0xde69abd7, 0x87f7f016, 0xa2c9bcad, 0x9f0c1049, 0x7d95e1b5, 0x2b1e7af0, 
    0x9faef18b, 0x9df6af0e, 0xcdb6c546, 0x852be268, 0x07eeb4db, 0xd8ef8101, 0x7b93157e, 0xcdfb2be2, 0xb7f6cf28, 0x2541c4d8, 0x73dbecb9, 0xe0771cb8, 
    0xbada67fb, 0x58c60cb2, 0x2a35b094, 0xf4f97459, 0xc4cd51fd, 0x173a75b9, 0xee4ea1cc, 0x3addf6de, 0x7be48ffe, 0x03f18d4e, 0x36241248, 0xb14870b7, 
    0x1e71f58f, 0xacf44715, 0x1a5f899f, 0x384b74ec, 0xad358986, 0xa8e6a5f6, 0xe14d3792, 0x7a9e0d53, 0xce5f0802, 0xc2de16bc, 0xcbe3e6e2, 0x4ef98e85, 
    0x396303d2, 0x15bfabf5, 0x117e2834, 0x283e3a7c, 0x55fba5d5, 0xac25dcc3, 0x7f4a7c3a, 0x0067237b, 0x61b493c9, 0xab1de758, 0xf965abed, 0xae6a0a7e, 
    0xeef27722, 0xcc857d7e, 0x3ec61cb3, 0xcd4e0bc3, 0xda73ecf5, 0x9c7a97ac, 0xfcb55a97, 0xe50c04e9, 0x90babae4, 0xce931a47, 0x013f1e37, 0xf8b173cd, 
    0xd2d6c0f3, 0x255e77f9, 0x7e706066, 0x0ff264c9, 0x7ccdedcc, 0x88dfe3fb, 0xd522de57, 0xcc859a04, 0x163eb2f3, 0x8122b6cc, 0x48adfe73, 0x481d18c0, 
    0xd6bc9e51, 0x4e87784a, 0x50b23f4e, 0x52e63886, 0x71c5fc48, 0xb531cf56, 0x482ea815, 0xf7afb5f4, 0x7de43ebd, 0x72851b3e, 0x72fd0dda, 0xbdebf37c, 
    0x5ffdf2af, 0xc343fbc8, 0xc647f811, 0xbcd06025, 0x7ac9a76d, 0xd67600ff, 0x76b537fe, 0xc170833e, 0x88278d3f, 0xf8a9157c, 0xf56deb6e, 0x637e54b9, 
    0xe5683e9d, 0x7058c55e, 0x2f697c45, 0xc8bced88, 0x628d16c4, 0xa5a4f107, 0x2b0efcc9, 0xa3d97feb, 0xb4d588e3, 0xf8006fab, 0x2b75299e, 0x601fe359, 
    0x79f791bb, 0xdb55784a, 0xc76923b7, 0xaef477f1, 0xdc38c415, 0x3e315503, 0x93e83afc, 0x1dad695e, 0x15d358bb, 0x6c2c38c2, 0x491ab024, 0xfb76a36b, 
    0x84efa69e, 0xe279233c, 0x1b1b5e9d, 0xfcdc2534, 0x7207d9cd, 0xfcd7ab6b, 0x12f8a83d, 0x800b5be2, 0x24bf6e4c, 0x185708ca, 0xe0cb5eed, 0x86af0cdf, 
    0x63eded19, 0x37da208d, 0x290d2f5c, 0x2339f6fe, 0xdfacd98e, 0xf8da108b, 0xc0cec692, 0x3117a45f, 0x641e64c8, 0x8c71434c, 0xd92b0e64, 0xbc78d9fe, 
    0x7a156344, 0xf94c7f4d, 0x1e2c9355, 0x6a2f5516, 0x4f2ffaa9, 0x8d8427f8, 0x74d72f69, 0x6dd9d316, 0x69123926, 0xfc619777, 0xcd1afa40, 0x88abb5d4, 
    0x3e1d1bf5, 0x77ed93d1, 0x09c89c24, 0xde9e6000, 0x68953fb8, 0x739a6ecd, 0x1a8eb4de, 0x327b1738, 0x9c03d083, 0xf8cc557e, 0xe2a5465d, 0xdb69bd0b, 
    0x82314b7c, 0xf9f67a00, 0x3f30b0bd, 0xaa385d13, 0xaac151bf, 0xb5efe474, 0x6197e1de, 0x1733b5bf, 0xdd7dac52, 0x4fd3e9da, 0x76fbd6d4, 0xbde53fb8, 
    0xd4f2fd97, 0xff5cbf7d, 0x3ff69e00, 0x2fb35593, 0x3e06db3c, 0x793487bb, 0xbfe8f4bf, 0x9bafd0f7, 0xfe27eefa, 0x1ff4337e, 0xfebf6cec, 0x92f0a37c, 
    0x00af288a, 0x7fd12bd0, 0xe7520867, 0x5df887f6, 0x522ca414, 0x464ba778, 0xdd00e324, 0xe7350fc4, 0xb35fe855, 0xda6f62ac, 0x648ce10b, 0x348a3fe0, 
    0x37d327b5, 0xda4d5471, 0x57539a0d, 0xee675e9a, 0x89a080cf, 0x3317ea4a, 0xab924006, 0xe518294b, 0xd34f2cf9, 0xe06babf5, 0x4c3cadd8, 0x161ead2e, 
    0xf17c9cd3, 0x7f5e8732, 0x08aed383, 0x1dde29fc, 0xfcd1b6b6, 0x4dd8a83f, 0xf236b92a, 0x27805de1, 0xfa9d9e2d, 0xc53fbdd5, 0xb7b7683a, 0x2347b316, 
    0xa4f108ed, 0xdf71588a, 0xf84aaf07, 0x02868c45, 0x36c9c550, 0x9697ddae, 0x3c66d3c7, 0x2ee884f2, 0x377adfaa, 0x6739bc2d, 0xd677fc0d, 0x226d45f0, 
    0x1b21c02e, 0xf5c93d57, 0xfbf5f935, 0xb863fc65, 0x0bc427f1, 0x461d2acd, 0xde2c6c09, 0x198e743b, 0xaeda1583, 0x3978f018, 0x9ce95366, 0x3efeda57, 
    0xe07d87f8, 0xeadf0acf, 0xfa847dba, 0x9849ccbd, 0x738f61ad, 0xd80c7802, 0x78bfdac9, 0xf915749c, 0x4933f145, 0xb95193b9, 0x96232fd6, 0x90bbeb0b, 
    0xbc42375e, 0x8224ef3a, 0x7e92933a, 0x2c83bea6, 0x2ee76bcf, 0x2f4a52d5, 0x2f5ffebe, 0x39b0f1c4, 0xaa34306c, 0x5f745d56, 0x9f84fcab, 0x6ce21b50, 
    0x9e33728c, 0x6e6d5633, 0xb6bbbfe2, 0x2c7679b6, 0x2933a2b2, 0x64b85119, 0x0a7f1dfe, 0x86aff4ed, 0xb3bf6bf2, 0x6da186ad, 0x7717eaa5, 0xbbb952a7, 
    0xd5dee69a, 0xd8e0389e, 0x3ace5262, 0x7af76805, 0xe635b760, 0xf85c2a3a, 0xb9b15e67, 0x1b96b4bd, 0xa4a80b9b, 0x0ae1d69a, 0x95c0ca37, 0x8f8c3c65, 
    0x08fb5a5f, 0xad145556, 0xf08cb9ba, 0xdee2a672, 0x8cbfc6ce, 0x273cd462, 0x57e9dcac, 0x7141f2f6, 0x327ae311, 0xd9fd1009, 0x8c122017, 0x827b603e, 
    0x9fe1410d, 0x7af8dd1a, 0xde460dfe, 0x64588e57, 0x055b995f, 0x4a3fea39, 0x5fc6e3fa, 0xeb1ffe0b, 0x5e6913ba, 0xbd8df138, 0x23dbdb8b, 0x57c463f8, 
    0x1fc1f057, 0xe1985bd8, 0x6356c550, 0x6cb9e119, 0x9332a482, 0xc637f98a, 0x3cef0b3f, 0x43ab7f33, 0xe3455ea2, 0x9ae11e0d, 0x484b0d2b, 0x872be206, 
    0x322c9f53, 0xa74da602, 0x7b9c1425, 0x6f2faef5, 0x391d440c, 0x50283df6, 0x1aab84a9, 0x1fcd5ed4, 0xf820fc7e, 0x11afe2b1, 0xe3ca16f8, 0x76eb32ec, 
    0x4dababf3, 0xc2226d04, 0x58e0c6c1, 0x78198e03, 0xabfbfcf6, 0xac2faf58, 0x6c1af7c4, 0xca2e799a, 0xe381d111, 0x5bbc22bf, 0xf1f909fe, 0x42671d26, 
    0x8f9ac19b, 0x7f14cb94, 0xa48db76d, 0x0616dc01, 0x7e72c644, 0xedfe78f6, 0xf675c77d, 0xb4822d68, 0xa0436c3e, 0xd6719c51, 0xcbc522a3, 0x6e51ea02, 
    0xfa153de9, 0xc583a73e, 0x33667838, 0x1b14d48c, 0x9fbab45a, 0xbf52fc1e, 0x45132f9d, 0xa17bc9b6, 0x64b4cb1b, 0x23c00980, 0x54f873ea, 0x9ebd22ba, 
    0x100b6799, 0x9c1a4f04, 0x1ff1cf71, 0xe3bf35cf, 0x69da151f, 0x32bc2cde, 0x49da5a5b, 0x51aef221, 0x00b02b90, 0xe0162085, 0x35af3970, 0x2ee935d7, 
    0xb3b707b5, 0xc852242d, 0x3d67244a, 0x7fc6784e, 0x112bafc8, 0x787155c4, 0xf75218b7, 0x39f45d7a, 0x3034ec72, 0x67371454, 0xc9a83661, 0x400ca82b, 
    0x37053262, 0xbabf59fb, 0xa37395df, 0x1620bf43, 0xd5ddd8bf, 0x8d3d829c, 0xef15f62f, 0xfd0704fd, 0xebb76bf6, 0xf6903f95, 0x8b1ffbec, 0x8b4a51d4, 
    0x191880bd, 0x3c8fadf5, 0x003eef4a, 0x6900ffd8, 0x71f876fc, 0xf6c71c66, 0xb069128f, 0xbaab5eef, 0xf99131ea, 0x5efcb0d7, 0x4bbc88fd, 0x4fddebe1, 
    0x4582f053, 0x8611e8aa, 0x70332b96, 0x2150f95e, 0x28761b66, 0x2900416e, 0x4d1d3966, 0xf5ec4779, 0xa2fd4dbb, 0xa27d1abe, 0xfced8937, 0x8879a655, 
    0x6ea50ce3, 0xf420c8e3, 0xc9eb1d23, 0x5c3866c3, 0xe1aa84c6, 0xbda6a5a6, 0x43579dd6, 0x8c73c9ca, 0xd6187706, 0x575355c0, 0xafea4957, 0x3fd3add1, 
    0xdbb5ed67, 0x8d5e0daf, 0x2a47c517, 0x54d752c8, 0x63b0e3ec, 0xce9fd3eb, 0xf15aa7bc, 0xae97c69d, 0x1b0bc5dd, 0xb6e18430, 0x00ff5892, 0xe1d7ebf5, 
    0x3ee283be, 0xdfa77da5, 0x112445db, 0xb9dae645, 0x2039154c, 0x23787282, 0x7c92571c, 0xf0a7d146, 0x8859eb9d, 0x050ad5a5, 0x50ad2c95, 0x1c5c30cf, 
    0x0484801e, 0x7bdc9363, 0x3142c857, 0xf96bedac, 0xcd543f74, 0xc769d530, 0x9ad0e895, 0x3509c49f, 0x4ec32a0d, 0xa669519b, 0xf316a7d4, 0x10526e05, 
    0xee31ca0b, 0xed3f57a8, 0x1abfcb57, 0xe2675d7c, 0x614f1c5f, 0x2148e26c, 0x91675996, 0x69cc5730, 0x655f38e6, 0xaa7e1549, 0xfe894f6a, 0x509bd638, 
    0x0b2b1b82, 0xc8e026ed, 0x8cd927e0, 0xacac724e, 0xf6d89313, 0x4c9333af, 0x5e783a7d, 0xd89e274e, 0x743fb3c9, 0xae0f206f, 0x39f53517, 0x0d1a536e, 
    0xeccd6e56, 0xf3a1e797, 0xec24ad31, 0x549f5bf6, 0xf82e3eeb, 0x00ffe08f, 0xf0654107, 0x3b6dd6ce, 0x91447ac3, 0xb128d859, 0x3db5b95b, 0xe66926e8, 
    0x2c6c2367, 0xa30d9064, 0x783db0aa, 0x3ec277fa, 0x8ee7f008, 0x6ba225fc, 0x6ef0225e, 0x71ad1e93, 0x20da1f65, 0x631dd596, 0x4646d561, 0xb992830a, 
    0x78c508e8, 0xf1a3ec47, 0xf14100ff, 0xf8a59d7e, 0x4d26f112, 0xc78a6d75, 0x8218c7e7, 0x42542fe0, 0xf371925c, 0xe667206d, 0x6d6f7dc5, 0x886ea96e, 
    0x008cf2cb, 0xa9fc7414, 0xad0a6dbf, 0x377e594d, 0xe6e873ef, 0x359f4ee8, 0xfaef5e19, 0xe3633c56, 0xa5e1eccf, 0xecd14efc, 0xe894b220, 0x9280daf0, 
    0x8a6d5959, 0xe44ed129, 0x6db47105, 0x7f0cc462, 0x36af771b, 0x2fb4081f, 0xc2c37806, 0x8c5d3ab6, 0x438b746a, 0xadf7eba9, 0x02773f80, 0x0cbb02c1, 
    0x6fd74e00, 0x7da527a0, 0x64422c6d, 0xa0e7102a, 0xbf83aff7, 0x7a8abf6e, 0xbe96f744, 0xcb6ed00b, 0xcbdc59dd, 0xbebdac71, 0x058a1902, 0xf3038b48, 
    0x81fb8d32, 0x39a3121c, 0x84460704, 0x24b4d7ea, 0x5ef256f5, 0x69e22176, 0x54a9e861, 0xf377e557, 0x4f3c577e, 0xef8dafe1, 0x9be31f3c, 0xb8426b5d, 
    0xa867cd10, 0x70236d13, 0x061c0b85, 0xa96400ff, 0x5f13fb20, 0xfd101ea8, 0x1d1f74a0, 0x8de8ddd9, 0x896ff627, 0x742e0522, 0x4d11c77b, 0xa0be0f1b, 
    0xb1a30eb7, 0x1d0f461d, 0x4e13f22b, 0xd1cefeb9, 0x773869e5, 0x7d074890, 0x9bedabbd, 0xfd4f1f0d, 0x690e7ea5, 0x8700ff1a, 0xfed362af, 0x3862f827, 
    0xe5eeee6d, 0xa399db90, 0x15334250, 0xa02a5b0c, 0x06f3712b, 0x7a468004, 0x252f7cf3, 0x75cb17a5, 0x536fdfca, 0x6228a7c0, 0x1635cae9, 0x6edebfb7, 
    0x8b5ddb78, 0x18eed650, 0x81768ec3, 0x8103648c, 0x347cb3d2, 0x00ffd788, 0x9142966a, 0x0e30cc46, 0xaec0434f, 0xddf14e43, 0x267588e7, 0xb24a7cd2, 
    0xb52efee9, 0xb5cd050b, 0x313162d4, 0xe0d18004, 0x791b4990, 0x753cc9c8, 0x45b1e815, 0x00999e1d, 0xb331b6b6, 0x94891215, 0x7703e710, 0xe615991e, 
    0xcebeb060, 0x74baead1, 0x3447befe, 0xef6e3a68, 0x8d9b856e, 0x256e386a, 0x56404a8c, 0x607a822b, 0xe9db7fd4, 0x8f3d00ff, 0xe2cd52e7, 0x93ce33bd, 
    0xe663e911, 0xfc73103c, 0x95f09fe9, 0xcff39fe9, 0xf88ffc4a, 0x89cfadd7, 0x9af745fe, 0xfc487f59, 0xf04ff897, 0xc5f85e93, 0xf4d174e2, 0x07144638, 
    0x2297bcba, 0xf7f3681b, 0x2000ff9c, 0x23f12739, 0x17e113f4, 0xbfe0bfec, 0xd1ac1085, 0xacb5ae59, 0xd4256134, 0xced50835, 0xd4986c7e, 0xec0e468c, 
    0xc900ce71, 0x86cff93d, 0xf67bf8f1, 0x6507f857, 0x7e8178a9, 0x4b3873cd, 0x896fd18b, 0x90b8b927, 0x76406265, 0x8ef1aae4, 0x9ec4da00, 0xf858bea6, 
    0xf859fbab, 0x84fac7e7, 0xbdfa69f1, 0x24a383c6, 0x69d1d6ee, 0x68a5ada5, 0x8cf936f2, 0x0c2049ac, 0x4f3236e0, 0xc5393fb6, 0x5ae233cf, 0x9783a3f3, 
    0xdbc5c3b3, 0xe9adf99b, 0xdcd6a6bf, 0x67cc71fe, 0x2abef19e, 0xa92c17ae, 0x6e7070ec, 0xedfb7a2e, 0xd76a6b6f, 0xeeb6d295, 0xaad22ffa, 0xefe247f9, 
    0xdc16be8f, 0x3df07cfc, 0x9a8c8ebd, 0xb56d8cd7, 0xd4b935fb, 0x94fce9f4, 0x02ca8485, 0x9908cac8, 0xb8fc82d5, 0x1c6e04e3, 0x687fe18a, 0x5f3edb1f, 
    0x138d5913, 0x363717c0, 0xcbb17c5a, 0xc5edfd0d, 0xab93a4b2, 0x2522d02e, 0xb1205589, 0x406055c9, 0x1fe115c1, 0xc3be6e02, 0xe5e1c3f1, 0x1fc650c8, 
    0x60d26911, 0x988b838c, 0x9cc361cd, 0xfe0d5b31, 0x2e6e8bdb, 0xa74dd1ce, 0x7f6f00ff, 0xcfd8df97, 0xc505dec3, 0x668898e5, 0x09e584b9, 0xd32698fd, 
    0x6afeeddf, 0x7eec773b, 0xc553f8bf, 0xb237f676, 0x194a5b5d, 0x5ca50c84, 0x00e38660, 0x758a77d6, 0xbcf0b5a7, 0xdc1322ce, 0x3473911b, 0x67f2fce4, 
    0x23f51882, 0x1e381da7, 0xfbe29395, 0x574b7dbb, 0x25ceea92, 0x60c176b4, 0xe503b08b, 0xef197882, 0xd423fe58, 0xd9b3b2a7, 0x56147373, 0x69a92a93, 
    0x539f000f, 0xf0b657f8, 0xde54969c, 0x7fe49f9d, 0x4533e265, 0x6251a58a, 0x596dde69, 0x1dfad135, 0xb42d8527, 0x6add1ddf, 0x0d2d1637, 0x61f696c4, 
    0xace8d652, 0xcde22652, 0x0f4e5021, 0xd8915cdd, 0xe3cff80a, 0xf800a16e, 0x7bd67889, 0x33524036, 0x723ba1b3, 0xbf9de147, 0x9adc7b85, 0x6d83b795, 
    0x694ebdf5, 0x46b11621, 0x6e5bbeac, 0xcfed40dc, 0xcb572439, 0xaf5a6930, 0xb6a6358d, 0x756e2cd3, 0xa699f93b, 0x2ea36df2, 0x8124cff8, 0x353972d0, 
    0x393419f6, 0x598d3aa7, 0x9f7b3e2d, 0x2fab8a11, 0xd9ada966, 0xe993b784, 0xba178c5a, 0xd3b6c47d, 0x199628c3, 0x44926262, 0x4710e4e0, 0x8ad08320, 
    0x63f63ffb, 0x6b7caffd, 0x59159fe2, 0x89c45778, 0x24c7ac67, 0x0cea3232, 0x919f2b86, 0x7ec50037, 0xed3ace56, 0x6ded7ccd, 0xc6f83cfb, 0xd6f2a65d, 
    0x7f624cdb, 0x0ddcddd5, 0xb8a9eae3, 0x89bec68f, 0x673f9cfd, 0x6b03df7b, 0x56a77851, 0x3077da9a, 0x76bc05cb, 0xcd1233d2, 0x0f329c81, 0xd73adce1, 
    0x0e4f98b5, 0xcb7bb5e8, 0x39b9b7a5, 0xf515176e, 0xa845b988, 0xc78abe75, 0x7be2add5, 0xb3647eed, 0x4dc402b4, 0xeee0b2fb, 0xdbeb787e, 0x2dbfe6f0, 
    0xc95934be, 0xc693f165, 0x57c64cb1, 0x56bd5c8f, 0x13e6ce73, 0x5a9f27b8, 0xa4582afd, 0x649d99b6, 0x82726065, 0xead1c636, 0x5ce3af4f, 0x23f0bdd6, 
    0x58c5cfe1, 0x28e1bfae, 0x528bb9b0, 0xf605ef0c, 0xa614e990, 0x2963c946, 0x88f9ef20, 0x9af32039, 0x584e70f2, 0x56b53a49, 0x7dead6ea, 0x8e87650e, 
    0x1d859222, 0x3ff57539, 0x7463e633, 0xc7388744, 0x7ea4d700, 0x1700ffce, 0x780f3eef, 0x8d54cbf6, 0x3f444b9e, 0x07b7bd67, 0x7db37dfd, 0x471df5e1, 
    0x4df78aba, 0xe309fe63, 0x27adf9e2, 0xa5b6f0b9, 0xc630eba3, 0x7a335b49, 0xb88e75eb, 0xcf45e121, 0x9ecad7d0, 0xf7edf026, 0x3d47bc83, 0x256ba586, 
    0xadb4ed95, 0x2a6f736d, 0xe0c0e890, 0x7b8d3d82, 0x640c9d53, 0xeef74e25, 0xaa7ceaba, 0xee345c85, 0x683fbacf, 0x785901cf, 0xf1b04cd3, 0x4d3a9746, 
    0x9ea02d65, 0xf301ead2, 0x8c814d79, 0x5eb1c2f5, 0xab0e1c3d, 0x6fe1675e, 0x9ff85e16, 0x34a5e9c2, 0x169df68d, 0x54caa661, 0x82c5336d, 0x23f86321, 
    0x7b80eb03, 0x97fddd9a, 0xe2c5207e, 0x28fe83ef, 0xeaec1df0, 0x0c958efa, 0xda8f959a, 0xf05a1046, 0xced95027, 0xc7f89054, 0x78cdb100, 0x2bfe82ef, 
    0xe27ff85a, 0x2d7c89cf, 0x5db9810d, 0xe36dfd4e, 0x22dde378, 0x328285cc, 0x256ce01d, 0x391ee489, 0x8290afc0, 0xa57287a9, 0xe05f792d, 0xc6294d7b, 
    0x3ee676f1, 0x9cfdb694, 0x6d7749bc, 0x9e1de914, 0xcc3850c9, 0x3e233883, 0x33fc2795, 0xe7bf8957, 0xfcfd9f9d, 0x925ce11f, 0x9cf15f7c, 0xb7a6b128, 
    0x6a83a872, 0x3b8023a8, 0xc200ff52, 0xfdaff1e3, 0x317f6e07, 0x7dda5e5d, 0x7b72e0df, 0xf9cb7f3a, 0xe29900ff, 0xc067b55f, 0xff8900ff, 0x3c6e1900, 
    0x1fe16731, 0x69aacd0d, 0xb8b91096, 0x41047909, 0x69035b6e, 0x2a499157, 0x1f0339aa, 0x78ade731, 0x13fc8ffd, 0xd48ff66b, 0x1b3ef241, 0xf901704a, 
    0x3f3d7df5, 0x5f812bf4, 0xf09f88ad, 0xefae7886, 0xa93cd356, 0x86addbf4, 0x0c915778, 0x423f3987, 0x45ee7370, 0x37e2f73a, 0xcad4a689, 0x93516fda, 
    0x78903188, 0x5d337fec, 0x53972bbc, 0xc3f165c4, 0x3b9576d1, 0x6dbbefde, 0xf9a95b3b, 0xe1131a9d, 0x1d2c1d2c, 0xc909de68, 0xbc5f2d2b, 0xbbf66ef5, 
    0xfccc37bf, 0xfc17f185, 0x81f6cb13, 0x2e2b9cf0, 0xb325e0ad, 0x75002456, 0x718e39bd, 0x4f708b9e, 0x9fe0ad4a, 0x0ee31bd9, 0x0b0de38f, 0x78143e52, 
    0x82bfb323, 0x465da7e1, 0x2461f9d4, 0xa4c42d56, 0x5ff18cf1, 0x1fb45fa4, 0x093cb9c4, 0xd6b656e2, 0xbcd6632e, 0x9ab82d4b, 0xee7e3265, 0x56e523cf, 
    0x3b74ab03, 0xe0f56e47, 0xf17c7cf1, 0x346b773c, 0xbfcdf57a, 0x185219cc, 0xa0e72050, 0x5fe71f04, 0x820f5347, 0xe5441ea7, 0x5a5c5d52, 0x9b36f951, 
    0x7987bd67, 0xaf2a698d, 0x293a9492, 0xb4f9c95d, 0xfeecb19a, 0xf3764d11, 0xc497b444, 0x9cba4692, 0x36ca5866, 0x0560b61d, 0xf7209725, 0xe39ddaef, 
    0x7870876f, 0x696941ec, 0x52f95b13, 0xcaee37c7, 0x41502181, 0x3b632418, 0xbe56e58f, 0xd2707c0e, 0x51ea29be, 0xe9c57378, 0xdca96f6b, 0x5dcb2e1f, 
    0x791341b6, 0xce64929d, 0x15a33e08, 0xc39f0df5, 0x7ff80fef, 0xb796f7c1, 0x65be25a2, 0xc952b76d, 0xddc6cf82, 0x5a3ee8b8, 0xf9e5c3e0, 0x7d24973c, 
    0x0d7f9aa2, 0xab7eede2, 0xb81dd5dd, 0xa33dd3dc, 0x69ac9e57, 0x95da3438, 0x9f6e67a5, 0xdfe7e716, 0x1f847fc7, 0x7551fc10, 0xdae8a665, 0xc2a54903, 
    0x75719e81, 0xcf717e04, 0xf1e00c03, 0x241827c9, 0xb3ae748c, 0x2af878f6, 0x3bf40ddf, 0x805b63ad, 0xe49ef85a, 0x6b246fcb, 0xdb8e3932, 0x424921e4, 
    0x6e182d47, 0xbcdaebbd, 0x6af82341, 0x2449eada, 0x241c4c13, 0x33b8ad2a, 0xd5be40b7, 0x8d5bac8b, 0x12b0c327, 0x3c066ee1, 0x939cf1e9, 0x47e64792, 
    0x2b8e5ee5, 0xf0ca8607, 0x6f1b9cca, 0x00fff556, 0x984b4680, 0x636cf3e2, 0x30c638ab, 0x7d474b56, 0xd4777abd, 0xe4f062e4, 0xb12ef7d7, 0x8c5b92c7, 
    0x5a4f7272, 0xcb32ddf5, 0x41b036ec, 0x09a3e8c6, 0x740045c7, 0x8db55e1f, 0x34355de1, 0x899d15eb, 0x6d7e7992, 0xd203d4ed, 0x6c9818ba, 0xded3d72f, 
    0x15847abe, 0xf0ef9ed4, 0x6a9b493f, 0x82ed862c, 0x9d420080, 0xe360335c, 0x1c659fd6, 0xc6d34630, 0x52759c54, 0x8aab3d0e, 0xea13c487, 0xce923b5e, 
    0x6b4b5229, 0xdd686565, 0x881be379, 0xcdb121f5, 0x0b704f75, 0xcc17f298, 0x117b645c, 0x19b535fe, 0xa5791143, 0x39ee6bb3, 0x9106a564, 0x0f099fea, 
    0xa8797f95, 0x2dd83edd, 0xd42723e1, 0xbec27f9e, 0x8200ff37, 0xb62afc98, 0xa34fbcd3, 0x8c4ef7f8, 0x0c757d0b, 0x07463b17, 0x5f1b109f, 0xff9804fe, 
    0x7d0dbe00, 0xd7c8a13d, 0xbed63677, 0xd885b771, 0x08780e19, 0x56f8933a, 0xa1e7ed3f, 0xe0cf785b, 0x9eaecd25, 0x4ae7e2a2, 0x85bcb5b9, 0x9fe1e462, 
    0x89f8dbc9, 0x74977905, 0xf495b131, 0x83433f7a, 0x6aca491f, 0xc9d7564b, 0x0400ff25, 0x9ffde4fc, 0x1a9e4cfc, 0x4da1b7f8, 0xe9c62239, 0x53bbb0e4, 
    0x466768c0, 0x1ffcc185, 0x8d7d853f, 0x9f832fe1, 0x6dbcad0d, 0xd0208b37, 0x19b2b78c, 0x98226f15, 0x203080a4, 0x2057ce15, 0x838e3310, 0xfc90af19, 
    0xd346e13b, 0x3ae83a3e, 0xd75af919, 0x6682b651, 0xe62b64f4, 0x8f21f413, 0x5a725fe1, 0x713fd8b7, 0xf2c73ab8, 0x3a6076a3, 0xbab85d11, 0x7de67350, 
    0x72d17362, 0xece8b251, 0xf0af2679, 0xb76ada98, 0xbc3b41b0, 0x1be94e11, 0x5071673c, 0xdf7102c4, 0x15fe5315, 0xd4f3df74, 0xb6df00ff, 0xbc2da6af, 
    0xd176145b, 0x55528a29, 0xcf41c900, 0xfe935a1f, 0xe77f0813, 0xecf79f8c, 0x91ed8357, 0x7f5a7dea, 0x18be74ca, 0x5ea751b5, 0x4691d6bc, 0x1e183397, 
    0x43000e19, 0x6ce88ad0, 0xfef0419f, 0x6edb179f, 0xd8ca8e22, 0xfb214f60, 0xfde43899, 0xfcc72b4e, 0x1eebaa4d, 0xb0a6d111, 0xf46be69a, 0xdfdac368, 
    0x5b59e5c4, 0x878ecdb2, 0xf5c9abd1, 0x8e1a8d7f, 0x5a3ca39b, 0x798bcadd, 0xa37d509d, 0x928c3306, 0x03793d49, 0x6205aff3, 0xf09dd4b1, 0xdfbd4952, 
    0xfe4daf57, 0xf0cce068, 0x30ceead4, 0xfcf6f0ad, 0x938fe13f, 0xade2413c, 0xc45fe263, 0xd4796ecd, 0xe146dd9b, 0x90e450e6, 0xfe2a5caa, 0x810fb58c, 
    0x78156fa3, 0x9fbb3485, 0x88305ff4, 0x8e2cb783, 0xee402e5c, 0xae777a46, 0x76c4e0df, 0x99f8337e, 0x1ae9deae, 0x52eaba75, 0x57541a6d, 0x7e317960, 
    0x196305f0, 0x8760fee1, 0x1d19e369, 0x860feceb, 0x39bc003f, 0x6ba3813e, 0x9ef02c1e, 0x38e3639b, 0xd1976bc8, 0x91019187, 0x8a701558, 0x12200930, 
    0xacde573a, 0x944ab26f, 0x9688bd93, 0x114b5505, 0xf8c0bfd1, 0x155ec61f, 0x1fc29ff1, 0xd55a3411, 0x3157b69c, 0xf6de3a0f, 0x4619ba23, 0xf5b80a46, 
    0xfd6aa707, 0xa21ff82f, 0xe127f14b, 0x98f587cf, 0xed2549fc, 0x648ad6b4, 0x2418508e, 0x3d9761a0, 0xf3f53e78, 0x841fc6ef, 0xb480375a, 0xc56fed8b, 
    0xe2a5f65a, 0x79b9151b, 0x66667d5a, 0x8a783b9e, 0xd1784b30, 0x185b82b3, 0x6bdac00b, 0x7f8afd8f, 0xc063ad68, 0x6dfa5777, 0xbfba57e4, 0xf9f42d86, 
    0xb74fdfaf, 0x132d4906, 0x551984cc, 0xe58caa7b, 0x1c333f47, 0x4ec43a57, 0x0a328672, 0x7ffa1bce, 0xdc58d85a, 0xc1d3b025, 0xd6335e73, 0xfbc22fdf, 
    0x27fac85f, 0x2c804ee2, 0x5b56567c, 0x391d1af8, 0xd5092c03, 0xc26fa1df, 0x59736db8, 0x8ab55d83, 0x5f4c5905, 0xd8495c68, 0xa8f5479e, 0xc9f820be, 
    0x07e2657c, 0x938b74d4, 0xa17c6577, 0xa42daeed, 0xd8874a24, 0x9a07f577, 0x692ba9a9, 0xc5881dbe, 0xeb943703, 0x2d19c0b9, 0xce6b7df8, 0x395ecc78, 
    0x5a5eadd4, 0xf765654b, 0x8651761e, 0xa5d35958, 0x33bf6405, 0x836eedd1, 0x15704005, 0x52975b45, 0x2ec44411, 0x57e08c42, 0x8af8a615, 0xed4a8c26, 
    0x950133e5, 0x6c8f0076, 0xc7774d55, 0x481096d6, 0xf7c4dcb1, 0xf348b82c, 0xed734f9e, 0x29f9f55e, 0xec638fba, 0x4df96667, 0xda5c0e9f, 0x7e7d734f, 
    0x71cfaa90, 0x0193e626, 0xc701eeb9, 0x925fa503, 0xd8521de0, 0x61492196, 0xfd33dd8e, 0xcef08d2b, 0x316990b2, 0x515e1d46, 0x0748c19d, 0x35feef39, 
    0x1e99b571, 0x7270ddfa, 0x1c49dbcc, 0x00ffb403, 0xe532bc4a, 0xf7bdc5c2, 0xbd51c8fb, 0x333d365d, 0x6976be4b, 0xbf1b0767, 0xbfdba376, 0xc7adf6f9, 
    0x8fe151be, 0x2f3c4b11, 0x9bbe157d, 0xb842c32d, 0x20f118cb, 0x2b2aa7c7, 0x11beb088, 0xf2ad8ac6, 0xdf7a8fe3, 0xadd875d0, 0x015d366f, 0x30c08d2d, 
    0x00ffc25c, 0x869b4876, 0xa8097d04, 0x8b4a41af, 0x9b73d4b2, 0xfa1de395, 0x9fcc877e, 0x9bc25fb3, 0xc77817ef, 0xabeef155, 0xaa5bd36c, 0x51da2cce, 
    0xb8dcb49f, 0x403dce60, 0xc7f5792c, 0x00ff78a5, 0xe249fc8f, 0x7ec73f0d, 0xd622d32b, 0x784b0b75, 0x36b44bf5, 0xa2badcb1, 0x0b186762, 0x2bec019c, 
    0xb446abf4, 0xe42dacd0, 0xcb34d0b2, 0x16d23a6d, 0x2582e178, 0xfe0d2258, 0xdf335ec0, 0x7cbdcf3d, 0xcbfeac89, 0xf1bf86da, 0xfa37c557, 0x2e2decb4, 
    0x63ae19b5, 0x92744d8b, 0x76255957, 0x8cd02dc1, 0x6b3d7880, 0x352ebe82, 0x4dd4392a, 0x1ebaa55b, 0x95f5301c, 0xeaf343a9, 0xb582477b, 0x060fb5c9, 
    0xd95337e8, 0x61cff3c6, 0xb98d2c6f, 0x921a6379, 0xda9afa7a, 0xf33fd1fe, 0xf6fd1fe3, 0xfd5ce3bf, 0xac59c187, 0xa0ad6d6c, 0xc370c59f, 0x711c6b0c, 
    0xa8f2a38b, 0x1cc70100, 0x00ff5301, 0xffbb9fc2, 0x15bf9f00, 0x53e000ff, 0xa8ed8557, 0xf4717f76, 0xf3bfca1e, 0xa0afbc2f, 0x1e31cef8, 0x93f75fac, 
    0x1c5384de, 0x069d72ea, 0x67e09e76, 0xef7ae315, 0xfc0cbfc1, 0xfa2cf150, 0x5697c445, 0xca3b51f7, 0x7c1be9df, 0x7840c7d1, 0x68d535f4, 0x2cfca79a, 
    0xa8b52d88, 0x79ca6727, 0xe5c7f24e, 0x54f0b2b2, 0xbcdee79e, 0x365ec7af, 0xad25f0b8, 0x58a9adc6, 0x6f2257bc, 0x653bd022, 0x9bf9c9a7, 0xfd4715e8, 
    0x350c2bf4, 0x9da6b41a, 0xe000ff06, 0x8f58e698, 0x41eaa4ac, 0x5afb2d29, 0xf59c8fdd, 0x0f5f5ead, 0xad5bb6f8, 0x67edf116, 0xcb3c6fd3, 0xff38e149, 
    0xafc05600, 0xbe0695d7, 0xff9bfdfc, 0x5f9b6b00, 0xe9b3368c, 0x2e89a69a, 0xf669ae9b, 0xb6c42deb, 0x0c1374c7, 0xd4bddc85, 0xf5737a92, 0x1d3c98af, 
    0xaac72ffb, 0xd74c3b78, 0xe642fdf5, 0xe611f539, 0xa06c6345, 0x2ce14f6d, 0x9ec3ea48, 0xafe96b3d, 0x34083f82, 0x1b1a872f, 0x8d96695c, 0x6df2f515, 
    0xb358699e, 0x6a5f7632, 0xa55a5cfb, 0x2b387b38, 0x00ff75cd, 0xd0c0c633, 0x694f7bc4, 0xd59bda55, 0xec56beae, 0xfbed9778, 0x5573ede3, 0xa08b46f1, 
    0xc2d35a4a, 0x522fdda2, 0x29491c15, 0x743b372c, 0xedc00124, 0xf00d5e93, 0xa976e2bf, 0xbac7a3f0, 0x99b48957, 0xe5636b00, 0x93322c34, 0x6c34dc42, 
    0x6b1d863b, 0x175d8ef4, 0xedd5d649, 0xc71a9db5, 0x6d58d35a, 0x0e62af78, 0x077986bf, 0x7e8d57dc, 0xcfb15fd2, 0x2df82085, 0xc0f378aa, 0x99d665ba, 
    0xcb22637d, 0xa679a771, 0xe4ba0d48, 0xb09cc948, 0xff7a2a23, 0x4aa50900, 0x96743aad, 0xe9d1aa1e, 0xe3998d7e, 0x578df270, 0xbfb48488, 0x7863e4dd, 
    0xc12b4dca, 0x40fca44f, 0xbc657cf0, 0xe662af07, 0xe51bc5e6, 0x248e95b7, 0x04c6fd29, 0xe04aaf9c, 0x7f6800ff, 0xc3d7ba8a, 0xdeb6875f, 0xfbcafe25, 
    0xaa758f6e, 0x8b7184a5, 0xd0cc0f83, 0xe52720c9, 0x78a8fc6c, 0x796e7fc7, 0xee3a83df, 0x843fe3ab, 0x6ff8317e, 0x6adcb166, 0xd252170e, 0xc7c26696, 
    0x19242121, 0xdfed8e3d, 0xb63f7285, 0x67fc8337, 0x5e802fe1, 0x37c68712, 0xb5fdee22, 0x962c732b, 0x3f8006f2, 0x8c027091, 0xf52ab871, 0xb49732af, 
    0x77f655c3, 0x7cf9efd9, 0x745aebcc, 0x9763d779, 0xe6bcfdb2, 0xf02088b2, 0x73070e3c, 0x487f00a8, 0x00ffbd6a, 0x85dacaed, 0x833f53c4, 0x0f42a63c, 
    0xa440b5ee, 0xcb7fe4e0, 0xc5f2950e, 0x652cee15, 0x9f8ff675, 0x7dec50f6, 0xebed1f69, 0x0d3c89b7, 0xafbeafe6, 0x4941fa83, 0x10defea6, 0xeacb9ae9, 
    0x2507f811, 0xac4369d3, 0x9f73bc9e, 0xbe62d023, 0xe289a24c, 0x9b5654eb, 0x917fc9bf, 0xe5e11bad, 0xfdb449cf, 0x7ffcf659, 0x1a0353f0, 0x0a00ff81, 
    0xfe7724e7, 0x00ffeddc, 0xff20d580, 0xb09a8200, 0x384ef23f, 0xffddfef4, 0xf86aee00, 0xaed34d93, 0xd6467d75, 0x9e26cec2, 0x8254eaee, 0xbbab9318, 
    0xdca3aa10, 0x177b0592, 0x67f00ded, 0xa66ff84b, 0xf0544b78, 0x4bf7c2fc, 0xb736b5bd, 0xcec85157, 0x71445e92, 0x067a8223, 0xf27100e7, 0x0c8dda1a, 
    0x2b155a45, 0xaf85e1c3, 0x00ff76f3, 0x8963ec87, 0xc58705e2, 0x9fd5c1d1, 0xbafc56bf, 0xfaaa7b2b, 0xbbbdbaf6, 0xaf419fd9, 0x661615fc, 0x877fe158, 
    0xfb98adb3, 0x2de2c1f1, 0x37d0c38c, 0x2c3f4ed9, 0xffa369d7, 0x6c60c100, 0xada53d3c, 0x4ef09fae, 0x0d289424, 0x5fe27173, 0xfc61e435, 0x24a04d4c, 
    0xcfaf38fe, 0x966a0e1f, 0x97a63e5a, 0x6b8d861a, 0x6be3daae, 0x34cb5dda, 0x4846466a, 0x36189d68, 0x8e240301, 0x3bbd0679, 0x8597ade3, 0xe1653b3c, 
    0xf80f6f5b, 0x9b49d342, 0xf56cd058, 0xe5cdee89, 0xf344d2d4, 0x0fe39864, 0x2ea05d29, 0xcf49ca32, 0x9eb9666c, 0x33ba3806, 0x76af39af, 0xd7d77bda, 
    0x12bf956d, 0x7add1971, 0x4958aa58, 0xf69e4f42, 0x5b95936b, 0xf8a7dd7b, 0xff13ec33, 0xd79c0500, 0x70f83809, 0xe81af400, 0x2500ffe3, 0xf3e13f69, 
    0x13fde77a, 0x8300ff91, 0xe400ffd5, 0xa2defc5a, 0x50aabfbc, 0xbf7a44fe, 0x7dddad5c, 0xd58ffccb, 0x2f3e833f, 0x764de071, 0xb8962bce, 0x3498b6b1, 
    0x5919b25b, 0xc775feba, 0xbab263fc, 0x68aa83f8, 0xb65096b6, 0xee45e551, 0x27863108, 0xaef58ff3, 0xf871f68f, 0x572de26d, 0x8be3d64c, 0xb5b8ba4b, 
    0x5de18a64, 0x19bf1117, 0xaf093d03, 0x1cbed26a, 0xb01cfa69, 0x120c734b, 0x21a746de, 0x88893194, 0x15c79fe7, 0x8ac9a714, 0x0fad7ff7, 0xd7388576, 
    0xa9efc8a1, 0x9b622c65, 0x8b4f875d, 0xf1e9d831, 0x3820b247, 0x3350b8d8, 0x5fd615f4, 0x8fa635dd, 0x66127177, 0x4476a148, 0x0349d103, 0x882fc015, 
    0x1cf1b221, 0x66dae4db, 0xe7f4798d, 0xefb5a918, 0x8bc2d91d, 0x92892e68, 0x316ab363, 0x27630418, 0x87ea9adb, 0xfce68c32, 0x1ee000ff, 0xa255f9b4, 
    0xf44d3a75, 0xfbb14ee3, 0xead4455e, 0xc931ce3c, 0x1ae915e7, 0xb71aec35, 0x227df587, 0xd69266fe, 0x086bc6fa, 0xf9dd47ed, 0x00ff33f0, 0xc98857a1, 
    0x7b5e68e2, 0xcd5dd268, 0xb9f904bc, 0x8fc65de9, 0xad298baf, 0x5bfefbe4, 0xbe9e2006, 0x0e7abdb5, 0x7b9a3da4, 0xca480e23, 0x7c6e490d, 0xc29bf05f, 
    0xf82f7c71, 0xad2eacc3, 0xa169c32a, 0xb8be0559, 0x578e9420, 0x1e5ba170, 0xf86f55e4, 0x748d2728, 0x01fc16af, 0x77950ed1, 0xf831f405, 0x88661096, 
    0x736b91e7, 0x57e4f491, 0x3e139fd5, 0x3ff76809, 0x7c707c0c, 0xdeda9f2e, 0x1766d722, 0x305d5d73, 0x03f3b912, 0x3b8f61f9, 0xd2070e54, 0xaefd1bbe, 
    0x8b7810fe, 0xf3ec9fe1, 0x90abcba0, 0x82785cb0, 0xb62ae523, 0xb8b64616, 0x85074f3d, 0xad86ab3d, 0x1da9d468, 0xb64eb76d, 0x9453593c, 0xec384d69, 
    0x537ce69f, 0x59571445, 0x541405e0, 0xf72cd196, 0x25f34631, 0x69853bba, 0x30560ca5, 0x82762c4f, 0x09f03a70, 0xa88506f4, 0xe9b9b29b, 0x3b74059f, 
    0xf15d5388, 0xdbd9525c, 0xe65669dc, 0xfb6b4ddf, 0xaf116dd8, 0x875005a6, 0x1a73d199, 0x39639279, 0xeb152fca, 0x25bc0f1f, 0xd95fe37f, 0x039ec5e7, 
    0xbc4b9fbf, 0x3ab734d5, 0x3a968ec6, 0xf1ebadbd, 0x1916ea92, 0xe1cea85c, 0xf5cc0092, 0x3f123fe5, 0xf0b016e1, 0x7fb48727, 0xd3ba780b, 0x74d78e57, 
    0x59ba8dfa, 0x73cbdbdc, 0xf7fee476, 0x222b88e7, 0x30771126, 0xf9c09661, 0x6df63b8d, 0x809795f1, 0xeb5b25be, 0x06bd9e1a, 0x4f24a58b, 0xc373e415, 
    0x896abf3c, 0xb1300681, 0xb5836423, 0x940f6cbe, 0x5d5fe975, 0x0b47ab83, 0xa885a788, 0x649c16ef, 0xefcba3d4, 0x346d5fad, 0xf951f6eb, 0xc58769be, 
    0xd93a1866, 0xe3d40485, 0xd3452825, 0x9fee3f9f, 0xfbd192ba, 0x7ad9f7de, 0x2b4faf4d, 0xa1fd58af, 0x39fcd67f, 0x2bb100ff, 0xd000ff4a, 0xfb78ab1e, 
    0xbf031ec3, 0xbec4fdf1, 0x9bbef11a, 0xd9cbe16f, 0x8bf6715e, 0x306bd40b, 0x8b3d2648, 0x3b39dc01, 0x7670d971, 0xc7974ef0, 0x780adf5b, 0xd7c2cb8a, 
    0xec8b073a, 0x7db469f5, 0x9a47cf0a, 0x435dd9d0, 0x410eaf24, 0x17c40b91, 0x339cdd69, 0x35df3102, 0xc71e2ae7, 0x9c83880f, 0x94d6aa5e, 0xaee9b375, 
    0x622cb5a7, 0x557063c5, 0x35694e63, 0xd79cde2b, 0x93b2d22d, 0xd377b2e5, 0x3d1ef857, 0x84571445, 0xb7fb797d, 0xe2f616f0, 0xaef80b0f, 0x8e25ee08, 
    0xb10cb614, 0x71aa90ab, 0xced50ed4, 0x848c34c7, 0x5c4f6297, 0x15f8db9a, 0xf72200ff, 0xd1ebbf8b, 0xc560a57f, 0x059b2bf7, 0x2f9f5afc, 0xdafafbc8, 
    0xf2ab5e4a, 0x53c4633c, 0x72773c48, 0xc9c7c63c, 0x37b54fc6, 0xb5da6251, 0x819324b9, 0x4f8afac9, 0xc800ff11, 0x8ff473f9, 0x7fa851fa, 0xa70f52c8, 
    0x78f515f5, 0x17acfd46, 0xeef9b1f5, 0xafeabd60, 0x74e6dfad, 0xf62f7a9a, 0x46db92ee, 0x739c9bef, 0x152b995e, 0x41828cb6, 0x2b7d3adc, 0x00ff34cd, 
    0x1fe90df9, 0xa9f42af0, 0xd6e300ff, 0xf287f73f, 0x187fc6a8, 0x7c77b2f7, 0x2f9dcd17, 0x9ff6d1c3, 0xcd90691b, 0x5b70d8fb, 0x3e577ecb, 0xd7f335b8, 
    0xeee215fc, 0xa24ff877, 0x35d2b4db, 0xd88ef8ba, 0xc0ce45ac, 0x3276cd7e, 0x1bfa4a07, 0x8ffcbfe1, 0x86fb67ba, 0x00ff73be, 0xc97fbb82, 0xec3fd230, 
    0x00ffb762, 0xf8ba6bd2, 0xf2fb47fc, 0x7fb13bf4, 0xfac3bf0c, 0x5154959f, 0xcb277a45, 0x40511405, 0x40511405, 0x40511405, 0x40511405, 0x00d9ff1f, 
};
};
} //namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(UpScaleAnimeSlowerNode, "Anime Upscale Slower", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "AIFilter#Video#Upscaling")
