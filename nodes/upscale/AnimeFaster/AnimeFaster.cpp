#include <UI.h>
#include <imgui_extra_widget.h>
#include <ImVulkanShader.h>
#include <realsr.h>
#include "AnimeFaster_data.h"

#define NODE_VERSION    0x01000000

namespace BluePrint
{
struct UpScaleAnimeFasterNode final : Node
{
    BP_NODE_WITH_NAME(UpScaleAnimeFasterNode, "Anime Upscale Faster", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, NodeType::External, NodeStyle::Default, "AIFilter#Video#Upscaling")
    UpScaleAnimeFasterNode(BP* blueprint): Node(blueprint) 
    { 
        m_Name = "Anime Upscale Faster";
        m_HasCustomLayout = true;
        m_Skippable = true;
        m_BGRequired = true;
    }
    ~UpScaleAnimeFasterNode()
    {
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        ImGui::ImDestroyTexture(&m_logo);
    }

    void Reset(Context& context) override
    {
        Node::Reset(context);
    }

    void PreLoad() override
    {
        m_device = ncnn::get_default_gpu_index();
        if (m_realsr) { delete m_realsr; m_realsr = nullptr; }
        m_realsr = new RealSR(AnimeFaster_param_bin, AnimeFaster_param_bin_size, AnimeFaster_bin, AnimeFaster_bin_size,
                            m_device, true /*fp16*/, true /*packing*/, false /*tta*/, 1 /*thread*/);
        if (m_realsr)
        {
            m_realsr->scale = 2;
            m_realsr->prepadding = floor(m_realsr->scale);
            // preload model once
            ImGui::ImMat tmp(64, 64, 4, 1u, 4), tmp_out;
            float progress = 0;
            m_realsr->process(tmp, tmp_out, progress);
        }
    }

    FlowPin Execute(Context& context, FlowPin& entryPoint, bool threading = false) override
    {
        int64_t t1, t2;
        auto mat_in = context.GetPinValue<ImGui::ImMat>(m_MatIn);
        if (!m_Enabled || !m_realsr || context.m_bypass_bg_node)
        {
            m_NodeTimeMs = 0;
            m_MatOut.SetValue(mat_in);
        }
        else if (m_realsr)
        {
            ImGui::ImMat src_mat, upscale_mat;
            if (mat_in.device != IM_DD_CPU)
            {
                ImGui::ImVulkanVkMatToImMat(mat_in, src_mat);
            }
            else
                src_mat = mat_in;
            if (!src_mat.empty())
            {
                src_mat.elempack = src_mat.c;
                t1 = ImGui::get_current_time_msec();
                m_realsr->process(src_mat, upscale_mat, m_progress);
                t2 = ImGui::get_current_time_msec();
                m_NodeTimeMs = t2 - t1;
                upscale_mat.copy_attribute(mat_in);
                upscale_mat.elempack = 1;
                std::cout << "SimpleFaster:" << m_NodeTimeMs << "ms" << std::endl; // for debug
            }
            else
                upscale_mat = mat_in;
            m_MatOut.SetValue(upscale_mat);
        }
        return m_Exit;
    }

    bool DrawSettingLayout(ImGuiContext * ctx) override
    {
        // Draw Setting
        auto changed = Node::DrawSettingLayout(ctx);
        ImGui::Separator();
        changed |= Node::DrawDataTypeSetting("Mat Type:", m_mat_data_type);
        return changed;
    }

    bool DrawCustomLayout(ImGuiContext * ctx, float zoom, ImVec2 origin, ImGui::ImCurveEdit::Curve* pCurve, bool embedded) override
    {
        bool changed = false;
        ImGui::SetCurrentContext(ctx);
        return m_Enabled ? changed : false;
    }

    int Load(const imgui_json::value& value) override
    {
        int ret = BP_ERR_NONE;
        if ((ret = Node::Load(value)) != BP_ERR_NONE)
            return ret;
        if (value.contains("mat_type"))
        {
            auto& val = value["mat_type"];
            if (val.is_number()) 
                m_mat_data_type = (ImDataType)val.get<imgui_json::number>();
        }
        return ret;
    }

    void Save(imgui_json::value& value, std::map<ID_TYPE, ID_TYPE> MapID) override
    {
        Node::Save(value, MapID);
        value["mat_type"] = imgui_json::number(m_mat_data_type);
    }

    void DrawNodeLogo(ImGuiContext * ctx, ImVec2 size, std::string logo) const override
    {
        // Node::DrawNodeLogo(ctx, size, std::string("AI"));
        if (ctx) ImGui::SetCurrentContext(ctx); // External Node must set context
        if (!m_logo) m_logo = Node::LoadNodeLogo((void *)logo_data, logo_size);
        Node::DrawNodeLogo(m_logo, m_logo_index, logo_cols, logo_rows, size);
    }

    span<Pin*> GetInputPins() override { return m_InputPins; }
    span<Pin*> GetOutputPins() override { return m_OutputPins; }
    Pin* GetAutoLinkInputFlowPin() override { return &m_Enter; }
    Pin* GetAutoLinkOutputFlowPin() override { return &m_Exit; }
    vector<Pin*> GetAutoLinkInputDataPin() override { return {&m_MatIn}; }
    vector<Pin*> GetAutoLinkOutputDataPin() override { return {&m_MatOut}; }

    FlowPin   m_Enter   = { this, "Enter" };
    FlowPin   m_Exit    = { this, "Exit" };
    MatPin    m_MatIn   = { this, "In" };
    MatPin    m_MatOut  = { this, "Out" };

    Pin* m_InputPins[2] = { &m_Enter, &m_MatIn };
    Pin* m_OutputPins[2] = { &m_Exit, &m_MatOut };

private:
    ImDataType m_mat_data_type {IM_DT_UNDEFINED};
    int m_device        {-1};
    float m_progress    {0.f};
    RealSR* m_realsr    {nullptr};
    mutable ImTextureID  m_logo {0};
    mutable int m_logo_index {0};

    const unsigned int logo_width = 130;
    const unsigned int logo_height = 130;
    const unsigned int logo_cols = 1;
    const unsigned int logo_rows = 1;
    const unsigned int logo_size = 9986;
    const unsigned int logo_data[9988/4] =
{
    0xe0ffd8ff, 0x464a1000, 0x01004649, 0x01000001, 0x00000100, 0x8400dbff, 0x02020300, 0x03020203, 0x04030303, 0x05040303, 0x04050508, 0x070a0504, 
    0x0c080607, 0x0b0c0c0a, 0x0d0b0b0a, 0x0d10120e, 0x0b0e110e, 0x1016100b, 0x15141311, 0x0f0c1515, 0x14161817, 0x15141218, 0x04030114, 0x05040504, 
    0x09050509, 0x0d0b0d14, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 0x14141414, 
    0x14141414, 0x14141414, 0xc0ff1414, 0x00081100, 0x03820082, 0x02002201, 0x11030111, 0x01c4ff01, 0x010000a2, 0x01010105, 0x00010101, 0x00000000, 
    0x01000000, 0x05040302, 0x09080706, 0x00100b0a, 0x03030102, 0x05030402, 0x00040405, 0x017d0100, 0x04000302, 0x21120511, 0x13064131, 0x22076151, 
    0x81321471, 0x2308a191, 0x15c1b142, 0x24f0d152, 0x82726233, 0x17160a09, 0x251a1918, 0x29282726, 0x3635342a, 0x3a393837, 0x46454443, 0x4a494847, 
    0x56555453, 0x5a595857, 0x66656463, 0x6a696867, 0x76757473, 0x7a797877, 0x86858483, 0x8a898887, 0x95949392, 0x99989796, 0xa4a3a29a, 0xa8a7a6a5, 
    0xb3b2aaa9, 0xb7b6b5b4, 0xc2bab9b8, 0xc6c5c4c3, 0xcac9c8c7, 0xd5d4d3d2, 0xd9d8d7d6, 0xe3e2e1da, 0xe7e6e5e4, 0xf1eae9e8, 0xf5f4f3f2, 0xf9f8f7f6, 
    0x030001fa, 0x01010101, 0x01010101, 0x00000001, 0x01000000, 0x05040302, 0x09080706, 0x00110b0a, 0x04020102, 0x07040304, 0x00040405, 0x00770201, 
    0x11030201, 0x31210504, 0x51411206, 0x13716107, 0x08813222, 0xa1914214, 0x2309c1b1, 0x15f05233, 0x0ad17262, 0xe1342416, 0x1817f125, 0x27261a19, 
    0x352a2928, 0x39383736, 0x4544433a, 0x49484746, 0x5554534a, 0x59585756, 0x6564635a, 0x69686766, 0x7574736a, 0x79787776, 0x8483827a, 0x88878685, 
    0x93928a89, 0x97969594, 0xa29a9998, 0xa6a5a4a3, 0xaaa9a8a7, 0xb5b4b3b2, 0xb9b8b7b6, 0xc4c3c2ba, 0xc8c7c6c5, 0xd3d2cac9, 0xd7d6d5d4, 0xe2dad9d8, 
    0xe6e5e4e3, 0xeae9e8e7, 0xf5f4f3f2, 0xf9f8f7f6, 0x00dafffa, 0x0001030c, 0x11031102, 0xfc003f00, 0xc187aeaa, 0x43fc0f5f, 0x7b510bf1, 0xf7680f3f, 
    0xaed1b47a, 0x79b405e9, 0x59708e11, 0x1c9c0b8f, 0xaff68c64, 0xff9cfd45, 0xdf4b6700, 0xdd8d1a8e, 0x69d197d4, 0xe89c1eba, 0xf364252e, 0xf93c571e, 
    0x8c94814a, 0x8c6c39a8, 0xbf3d6364, 0xe1333c45, 0x3ac00b4d, 0x363a562c, 0xd8a46d9b, 0x5b3681c2, 0x9fe08cc7, 0xc9b17abc, 0x92932427, 0xb3e16b7d, 
    0x95a528de, 0x63f4ea4b, 0x45b757cf, 0x7cd1dfeb, 0xc5577eec, 0xe187799c, 0x0d4ffdf9, 0xfe886b0f, 0xda1b6d5d, 0xf4ddeed7, 0xd2f65e4b, 0xa3f125fe, 
    0xcff032f6, 0xd5b917c4, 0xc3573a7c, 0xb92beb5a, 0xa5c5158e, 0xdd4e9bcc, 0x5be63ee8, 0x49ec6519, 0xb17c4dda, 0x5fe1ebf0, 0x7e1f7e89, 0xb40d1fd3, 
    0x9269101f, 0x7873f769, 0x178e4d9f, 0x1b98627e, 0x71e486b8, 0x4e470ec3, 0x8a07e799, 0xbbbc2cfd, 0x7bcec286, 0x82cbdfa9, 0x1f59da18, 0x3250ed04, 
    0x053d074e, 0xfb6da37c, 0x2bf1c75c, 0x5df882f6, 0xe90cefe1, 0x27a56ded, 0xdac0b48c, 0xedc6da8d, 0x44b91975, 0xc968633b, 0x1812ef8b, 0x07766c30, 
    0x2d9cf281, 0xdbb5669b, 0x52dadbc3, 0x6eb7d58a, 0xf4f5da5e, 0xe123fad5, 0x1ee2347c, 0x5662c721, 0xd4f6710e, 0x27e56423, 0xf6de0e67, 0xeaf2bff2, 
    0xe847d2fc, 0xa5a78f36, 0xda68e2ed, 0xe5183190, 0x25b7433e, 0x78343f1b, 0x7f7e6cf4, 0x3b6df55a, 0xf01edec2, 0x3499b7f5, 0x93012249, 0xaf32bcf6, 
    0xc5430fbe, 0xd3357e71, 0xd3fed5e1, 0xd9b6d8a8, 0x70451cad, 0xc09d76bb, 0xfb3d30e0, 0x6fb2c20f, 0x797f457c, 0xd6fe19a5, 0x248818fb, 0x6e9b3db7, 
    0xfc8e0377, 0x57fb6c1f, 0x630659ed, 0x1a584a2c, 0x7cba2c95, 0xfea87efa, 0xba5ce289, 0x50e60b9d, 0x7b6f77a7, 0x477f9d6e, 0x46a73df2, 0x09a481f8, 
    0xb85b1b12, 0xfac75824, 0xa30a8fb8, 0xc44f56fa, 0x3a768daf, 0x44439c25, 0x52fbd69a, 0x1b4954f3, 0x86a9f0a6, 0x04013dcf, 0x0b5ee72f, 0x7371616f, 
    0xc7c2e571, 0x0169a77c, 0xd5fa9cb1, 0x149a8adf, 0x1dbe083f, 0xd26a141f, 0xeee1aafd, 0x3e1dd612, 0x91bd3f25, 0xc96480b3, 0x73ac30da, 0xd5f6d58e, 
    0x05bffcb2, 0x3b115735, 0x3e3f77f9, 0x8e59e6c2, 0x85611f63, 0xf6fa66a7, 0x4b56ed39, 0xad4b4ebd, 0x8274fe5a, 0x5df27206, 0x8d23485d, 0x8f1be749, 
    0xb9e6801f, 0xe079fcd8, 0xbb7c696b, 0x30b312af, 0xb2643f38, 0x76e60779, 0xf17dbee6, 0xef2bc4ef, 0x4d826a11, 0xd979e642, 0x5b660b1f, 0xffb94011, 
    0x60a45600, 0x28a40e0c, 0x256b5ecf, 0x27a7433c, 0x4328d91f, 0x2429731c, 0xabb8627e, 0x8ada9867, 0x7a2417d4, 0xdefbd75a, 0x9f3e729f, 0x6db9c20d, 
    0x3eb9fe06, 0xd7def579, 0xe4af7ef9, 0x88e1a17d, 0x12e323fc, 0x365e68b0, 0x7fbde4d3, 0x1b7f6bbb, 0x411fbbda, 0xc69f60b8, 0x0a3ec493, 0x7537fcd4, 
    0xaadcfab6, 0x9fce313f, 0x62af7234, 0xbe2238ac, 0x76c49734, 0x0b6264de, 0xf803b146, 0xfee452d2, 0xbff51507, 0xc4f1d1ec, 0xb755da6a, 0x144f7c80, 
    0xf1ac95ba, 0xc85db08f, 0x3ca5bcfb, 0x91dbed2a, 0xbbf8e3b4, 0xe20a57fa, 0xaa016e1c, 0x1d7e9f98, 0x34af4974, 0xacdd8ed6, 0x1ce18a69, 0x58123616, 
    0xd1b5240d, 0x53cf7dbb, 0x111ec277, 0xaf4ef1bc, 0x129a8d0d, 0xec667eee, 0xd535b983, 0xd41efeeb, 0x2d71097c, 0x3726c085, 0x0465925f, 0xaf768c2b, 
    0x866ff065, 0xf60cc357, 0x90c6b1f6, 0x17ae1b6d, 0x00ff9486, 0xc7911c7b, 0xc56fd66c, 0x497c6d88, 0x2f606763, 0xe4980bd2, 0x26320f32, 0x32c6b821, 
    0xffec1507, 0x5ebc6c00, 0xbd8a3122, 0x7ca6bf26, 0x0f96c9aa, 0xb5972a0b, 0xa717fd54, 0x46c213fc, 0xbaeb97b4, 0xb6ec690b, 0x34891c93, 0xfeb0cbbb, 
    0x660d7d20, 0xc4d55aea, 0x9f8e8d7a, 0xbbf6c968, 0x04644e92, 0x6f4f3080, 0xb4ca1f5c, 0x394db766, 0x0d475aef, 0x99bd0b1c, 0xce01e841, 0x7ce62a3f, 
    0xf152a32e, 0xedb4de05, 0xc19825be, 0x7c7b3d00, 0x1f18d8de, 0x559cae89, 0xd5e0a85f, 0xda77723a, 0xb0cb70ef, 0x8b99dadf, 0xee3e56a9, 0xa7e974ed, 
    0xbb7d6bea, 0xdef21f5c, 0x6af9fecb, 0x7faedf3e, 0xc91f7bcf, 0x9e97d9aa, 0x5d1f836d, 0xdf3c9ac3, 0xfb5f74fa, 0xfdcd57e8, 0x00ff1377, 0x0ffa193f, 
    0xff5f36f6, 0xf1513e00, 0x717c8f97, 0x7c2bfb69, 0xfdb4d003, 0x75792b2a, 0x6c2d8196, 0x741772e2, 0x704d77c5, 0x065890c9, 0xac0e9c24, 0xf035e3a0, 
    0x633c8a4f, 0x52d778ae, 0x5d00ff92, 0x5bb56ed5, 0xf77276a7, 0x4e0a1632, 0x5174b433, 0x3800e0c0, 0xdfee951e, 0xe48927b6, 0xf0a9c6f1, 0x34d0eef2, 
    0x14bab7d6, 0x1f473077, 0x722499cf, 0x9633461d, 0x3b105405, 0x87e09f8a, 0xf8ac67ec, 0x3cd424ed, 0x85ef3555, 0x4b7e91ec, 0x2e9d2c59, 0xf2ba2464, 
    0x0d145024, 0x1600ffa0, 0xf9950e43, 0x99f0520e, 0xf1e3053e, 0x6d932aad, 0xee5dbdc9, 0x5b5f97d5, 0xabfcdc75, 0x0d777921, 0xb3cd72e5, 0xabd5a849, 
    0x7a724a29, 0xb966bec9, 0xeaf4ae55, 0x9cdddd92, 0xf129ed9f, 0x8b1fe227, 0xbeb646fc, 0x7cefd32e, 0xeec2a63b, 0x86b6b42c, 0x3e606058, 0xaa2e2053, 
    0xe4fb2765, 0x92013c74, 0x9cfd9b2b, 0xda9f4b21, 0x5274e11f, 0xe249b190, 0x93182d9d, 0x1077038c, 0xe7e9d73c, 0xa3237c8a, 0x9f47dbf8, 0xe834d74b, 
    0x91292b35, 0x643ac790, 0x4a2ae5ae, 0x27d8aa9e, 0x9e11a40c, 0x719b7c0d, 0xfc5a29fb, 0x00fff829, 0xd257bff0, 0xec7feb75, 0x6916bf3b, 0xa39ea5d1, 
    0xdb88db26, 0x10db28ed, 0x01068981, 0x73d043c7, 0x0e72b9d6, 0xa657c125, 0xd9cf5eb0, 0xd5122d49, 0xbf3ef83f, 0xdcc0c779, 0x4e66966f, 0xaca85496, 
    0x15a34d3d, 0x67575fac, 0x7d571f6d, 0xa67eb6fb, 0x94080a78, 0x3073a1ae, 0xb42a0964, 0x5f8e91b2, 0x3ffdc492, 0x0dbeb65a, 0xc2c4d38a, 0x6de1d1ea, 
    0x13cfc739, 0xf8e77528, 0x8fe03a3d, 0xdbe19dc2, 0xc31f6d6b, 0xd2848dfa, 0x2e6f93ab, 0x7202d815, 0xaddfe9d9, 0x53fcd35b, 0x717b8ba6, 0x3e72346b, 
    0x481a8fd0, 0xf01d87a5, 0xb5aef47a, 0x5002868c, 0xae36c9c5, 0xc79697dd, 0xcf637ef4, 0xea824e28, 0x72a3f7ad, 0x7096c3db, 0x6f7dc7df, 0x22d25604, 
    0xb51102ec, 0x539fdc73, 0xb65f9f5f, 0x8f3bc65f, 0xbc407c12, 0x60d4a1d2, 0xe3cdc296, 0x98e148b7, 0xe1aa5d31, 0x9683078f, 0xc5993e65, 0xefe3af7d, 
    0x0cde7788, 0xabfeadf0, 0xab4fd8a7, 0x8a99c4dc, 0x30f718d6, 0x8ccd8027, 0x89f7ab9d, 0x945f41c7, 0x9b34135f, 0x9d1b3599, 0x6039f262, 0x05b9bbbe, 
    0xc32b74e3, 0x2348f2ae, 0xea2739a9, 0xcc32e86b, 0xed72bef6, 0xfba22455, 0xfcf2e5ef, 0x96031b4f, 0xa54a03c3, 0xfa45d765, 0xf549c8bf, 0xc826be01, 
    0xe33923c7, 0xeed66635, 0x6bbbfb2b, 0xcb629767, 0x9132232a, 0x4f861b95, 0xaef0d7e1, 0x6ff84adf, 0x3afbbb26, 0xda166ad8, 0x7a77a15e, 0xb99b2b75, 
    0x59ed6dae, 0x860d8ee3, 0xa0e32c25, 0xa6778f56, 0x635e730b, 0x86cfa5a2, 0x9b1beb75, 0xb96149db, 0x498abab0, 0xa3106ead, 0x5609ac7c, 0xf5c8c853, 
    0x85b0aff5, 0xdb4a5165, 0x07cf98ab, 0xec2d6e2a, 0xc6f86bec, 0x7ac2432d, 0x7f95cecd, 0x1117246f, 0x20a3371e, 0x91dd0f91, 0xc3280172, 0x20b807e6, 
    0xf1191ed4, 0xaf87dfad, 0xe56dd4e0, 0x4586e578, 0x53b095f9, 0xaff4a39e, 0xf0653cae, 0xbbfee1bf, 0xe39536a1, 0xd8db188f, 0x3fb2bdbd, 0x75453c86, 
    0xfd110c7f, 0x158eb985, 0x3166550c, 0xc8961b9e, 0x3829432a, 0x637c93af, 0xc3f3bef0, 0x3ab4fa37, 0x305ee425, 0xa219eed1, 0x80b4d4b0, 0x75b8226e, 
    0x20c3f239, 0x72da642a, 0xbfc74951, 0xf0f6e25a, 0x9fd341c4, 0x0a85d263, 0xadb14a98, 0xf7d1ec45, 0x8b0fc2ef, 0x1ff12a1e, 0x3eae6c81, 0x6fb72ec3, 
    0xd0b4ba3a, 0x2c2cd246, 0x80056e1c, 0x8f97e138, 0xb5bacf6f, 0xccfaf28a, 0xc9a6714f, 0xa1ec92a7, 0x3b1e181d, 0xbfc52bf2, 0x129f9fe0, 0x2974d661, 
    0xf9a819bc, 0xf647b14c, 0x40da78db, 0x6460c11d, 0xef27674c, 0xd7ee8f67, 0x665f77dc, 0x432bd882, 0x053ac4e6, 0x6a1dc719, 0xb05c2c32, 0xee16a52e, 
    0xa35fd193, 0x533c78ea, 0x38638687, 0xb54141cd, 0xf1a94bab, 0xf92bc5ef, 0x5b34f1d2, 0x11ba976c, 0x4846bbbc, 0x3e029c00, 0x4b853fa7, 0xe9d92ba2, 
    0x00b17096, 0xc7a9f144, 0x1100ff1c, 0xfe5bf3fc, 0xa65df131, 0xc3cbe29d, 0xa4adb525, 0xe52a1f92, 0x00bb0219, 0x6e015208, 0xf39a0307, 0x925e735d, 
    0x7b7b50eb, 0x2c45d232, 0x7346a284, 0x678ce7d4, 0xb1f28afc, 0x1757451c, 0x2f85718b, 0x43dfa577, 0x43c32e97, 0x76434105, 0x8c6a1376, 0xc480ba92, 
    0x53202306, 0xfb9bb57f, 0x3a57f9ad, 0x01f23b34, 0xdd8dfd6b, 0xd823c859, 0x6100ffd2, 0xd000ff5e, 0x66df7f40, 0x53b97ebb, 0xcf6e0ff9, 0xeccff2b1, 
    0x6cbdf091, 0x7ff81cfe, 0x8a29fec4, 0x3e2dee19, 0x9ba271d1, 0x6dd03f80, 0xf9cc2a65, 0xb38a653c, 0x73e87e82, 0x5f6acccf, 0x3fb73f89, 0x3b277c84, 
    0xd26e785a, 0xa45d164f, 0x9248928c, 0x18d72d18, 0xdb2a64e5, 0x068293f3, 0x678ceb38, 0xbcb4fd99, 0xf80ede7c, 0x03dfe17f, 0x9a3df3e8, 0x5cab10ea, 
    0xda000324, 0x3c56a146, 0xec1620e7, 0x38792107, 0x8b4cfce0, 0x191880bd, 0xb2cdaff5, 0x799e92ec, 0x85796629, 0x2cdf64dc, 0xef5d4976, 0x6eed776d, 
    0x9f3ff7ee, 0xa1178e32, 0x9e2775c5, 0x679437e7, 0x773a7b29, 0xf7a62869, 0xefae9eb5, 0xbdbbaf46, 0xf83afdf4, 0x784afbdd, 0xa3cde067, 0xf62fcf5a, 
    0x85a5888f, 0xb74ddf9e, 0xa46d14c3, 0xf2734ca3, 0x520f6c21, 0x1a1c2009, 0xbec0a3f8, 0xc60ff13c, 0xe15fda6f, 0x7588efed, 0xbab92729, 0x049d2ef1, 
    0xed583e41, 0x01a3ae91, 0x03e15f62, 0x92d4533f, 0xf840af79, 0xf817fbd7, 0xd658c3ba, 0xcb0ddf75, 0x12a5bffd, 0xee1902d7, 0x80446dda, 0x50769ba5, 
    0x0004396f, 0xeac8310b, 0x677fc86b, 0xed6fdaad, 0xedd3f015, 0x6f4fbc11, 0xcc33ade2, 0x2b651847, 0x07411e77, 0x5eef18a1, 0x32600e8f, 0x55163ecc, 
    0x265573b0, 0xd3aaafd6, 0xd49f7d6b, 0xb20f2ffa, 0x4607877c, 0x8abaf235, 0x696e47b5, 0xd2afcc69, 0x7579c5db, 0xb39fadb6, 0xd7eddaf6, 0x8b46af86, 
    0x6495a3e2, 0x76aa6b29, 0xf531d871, 0x5ee7cfe9, 0xce78ad53, 0x6ed74be3, 0x988d85e2, 0x49db7042, 0xf5fa7f2c, 0x41dff0eb, 0xbe521ff1, 0xa2edefd3, 
    0xf3a20892, 0x0aa65c6d, 0x3941909c, 0x2b8e113c, 0x68233ec9, 0xf54ef8d3, 0xea52c4ac, 0x96ca0285, 0x9867a856, 0x400f0e2e, 0xc9310242, 0x08ab3dee, 
    0xad9d3546, 0xf4872e7f, 0xab866986, 0x46af3c4e, 0x20fed484, 0x5669a849, 0x8bda741a, 0x38a5364d, 0x722b98b7, 0x515e8090, 0xb942758f, 0xbe6a00ff, 
    0xe2d3f85d, 0xf8123feb, 0x670b7be2, 0xb20c4112, 0x82893ccb, 0x314f63be, 0x482afbc2, 0x5253f5ab, 0xc6f14f7c, 0x1084dab4, 0x695f58d9, 0x01470637, 
    0x7362cc3e, 0x9c606595, 0x79b5c79e, 0xe9639a9c, 0x71f2c2d3, 0x4dc6f63c, 0x79a3fb99, 0xb9707d00, 0x72cba9af, 0xb36ad098, 0xbf646f76, 0x8d990f3d, 
    0xb2672769, 0x59a7fadc, 0x7fc477f1, 0x0b3af807, 0xb376862f, 0xd21bde69, 0xc1ce8a24, 0xcddd8a45, 0x3341efa9, 0x1b39334f, 0x80246361, 0x81551d6d, 
    0xbed3c7eb, 0x8747f011, 0x2de1773c, 0x17f15a13, 0xf5987483, 0xfe288b6b, 0xa8b604d1, 0xaa0e1beb, 0x1c543032, 0x4640cf95, 0x653fc22b, 0x0ffa8f1f, 
    0x2fedf48b, 0x328997c0, 0x566cab6b, 0xc4383e3f, 0xa27a0117, 0x8f93e412, 0x3f03699b, 0x7beb2b36, 0x744b756b, 0x60945f46, 0xe5a7a300, 0x5568fb4d, 
    0xf1cb6a6a, 0x479f7bbf, 0xf9744237, 0x7ff7caa8, 0x1fe3b1d2, 0x0d677f1e, 0x8f76e22f, 0xa7940561, 0x04d48647, 0x6ccbca92, 0x778a4e51, 0xa38d2b20, 
    0x6320166b, 0x79bddbf8, 0xa145f8b0, 0x1ec63378, 0xecd2b115, 0x5aa45363, 0xbd5f4f1d, 0xb8fb016c, 0xd8150816, 0xbb760260, 0x2b3d017d, 0x136269eb, 
    0x3d875021, 0x1d7cbd07, 0x53fc75fb, 0xb5bc27d2, 0x76835ef0, 0xe6ceea5e, 0xed658d5b, 0x50cc10f0, 0x1f58442a, 0xdc6f9499, 0x1995e008, 0x343a20c8, 
    0xa1bd5627, 0x92b7aa27, 0x130fb1f3, 0x4a450f4b, 0xbf2bbfa2, 0xe2b9f29b, 0x6f7c0d7f, 0x00ffe079, 0x5aebda1c, 0x6b86c015, 0x699b403d, 0x5828841b, 
    0x25fb37e0, 0x9ad80749, 0x87f040fd, 0xf8a003ed, 0x44efceee, 0x7cb33f69, 0x73291049, 0x8a38dea3, 0xf57dd868, 0x1d75b805, 0x7830ea88, 0x9a905fe9, 
    0x76f6cf75, 0xc3492b8f, 0x3b4082bc, 0x6c5feded, 0x7ffa68d8, 0x73f02bed, 0x3dfcd748, 0xf19f167b, 0xc311c33f, 0x2c77776f, 0x1acddc86, 0xa8981182, 
    0x0155d962, 0x30988f5b, 0xd7330224, 0x2d79e19b, 0xae5bbe28, 0x9e7afb56, 0x17433905, 0xb5a8514e, 0x73f3febd, 0x5aecdac6, 0xc670b786, 0x0cb4731c, 
    0x0e1c2063, 0xa4e19b95, 0x54fbbf46, 0x368a14b2, 0x7a728061, 0x1a72051e, 0x3cef8e77, 0x9336a943, 0x4f9755e2, 0x58a875f1, 0xa3ae6d2e, 0x24888911, 
    0x82048f06, 0x46cedb48, 0xafa8e349, 0xec288a45, 0xb505c8f4, 0xa8988db1, 0x87a04c94, 0xf4b81b38, 0x0533afc8, 0x8f76f685, 0xf5a7d355, 0x41a339f2, 
    0x747b77d3, 0x516bdc2c, 0x622c71c3, 0x5cb10252, 0xa306d313, 0xf94fdffe, 0x963a7fec, 0x9ee9156f, 0x4b8f9874, 0x83e0311f, 0xff4ce79f, 0x4caf8400, 
    0x7a9e00ff, 0xc67fe457, 0x4f7c6ebd, 0xd2bc2ff2, 0xe747facb, 0x297c88c7, 0xf2d4feae, 0xd1bb377c, 0x69c22531, 0xaed54e07, 0xb3bb3fa6, 0xef300992, 
    0x126f3a26, 0x3bf52a23, 0xa33e8ebd, 0x2ffb45f8, 0x44e12ff8, 0x6b56342b, 0x180d6bad, 0x420d7549, 0x9b9f7335, 0x11233526, 0x731cbb83, 0x7e4f3280, 
    0xf8c2e173, 0xf857f67f, 0xf8a86505, 0x897b1b84, 0x2d5edcc2, 0xe69e24be, 0x8d9541e6, 0x1792db01, 0x14001c03, 0xf99a7a92, 0xedafe263, 0x1f9fe367, 
    0xa7c513ea, 0x0e1af7ea, 0x5bbb938c, 0xb696a645, 0xdbc8a395, 0x24b132e6, 0xd8803380, 0xfcd83ec9, 0x0cb354be, 0xe0c153ee, 0xd0f0ec25, 0xb5f95f6d, 
    0xe8f6a66f, 0x9ffab6b6, 0x676895cc, 0xa652555c, 0xf654945d, 0x94521a18, 0xfe5cb579, 0x565b7af3, 0x2b5dc996, 0x5ff4dd6a, 0x8ff255a5, 0x7c1fdfc5, 
    0xf9f8b92d, 0x1d7b7be0, 0x18af3519, 0x6bf66bdb, 0xd3e9a973, 0x090b29f9, 0x94910594, 0x05ab3311, 0x08c671f9, 0xc21539dc, 0xb63fd0fe, 0xb326be7c, 
    0x2e80271a, 0xf9b46c6e, 0xfb1b9663, 0x49658bdb, 0xa05d5627, 0xaa124b44, 0xaa926341, 0x2b8281c0, 0xdd043ec2, 0x87e3877d, 0xa190cbc3, 0xd3223e8c, 
    0x0719c1a4, 0xbe9a3117, 0xd88ae11c, 0x5bdcf66f, 0x8a767671, 0x7bfb3f6d, 0xc7febefc, 0x0bbc874f, 0x1031cb8b, 0xca0973cd, 0x4d30fb13, 0xfcdbbfa7, 
    0xd8ef76d4, 0xa7f07ffd, 0x6feced8a, 0x94b6ba64, 0x4a190833, 0xc60dc1b8, 0x14efac01, 0xe16b4feb, 0x27449c79, 0xe62237b8, 0xe4f9c969, 0xea3104cf, 
    0x703a4e47, 0xc5272b3d, 0x96fa76f7, 0x9cd525af, 0x82ed684b, 0x076017c1, 0x33f004cb, 0x47fcb1de, 0x67654fa9, 0x28e6e6b2, 0x525526ad, 0x3e011ed2, 
    0x6daff0a7, 0xa92c39e1, 0xc83f3bbd, 0x66c4cbfe, 0xa24a158b, 0xdabcd3c4, 0xf4a36bb2, 0x5b0a4f3a, 0xba3bbe69, 0x5a2c6ed4, 0xec2d891b, 0xd1ada5c2, 
    0xc54da458, 0x9ca0429a, 0x23b9ba1f, 0x9ff115b0, 0x0142ddc6, 0xacf112f1, 0xa4806cf6, 0x76426767, 0x3bc38fe4, 0xb9f70a7f, 0x066f2b35, 0x9c7aebdb, 
    0x622d42d2, 0xb67c598d, 0xdb81b8dd, 0xaf48729e, 0xb5d26096, 0x4d6b1a5f, 0xdc58a66d, 0x33f377ea, 0x46dbe44d, 0x499ef15d, 0x72e4a003, 0x6832ec6b, 
    0x1a754e73, 0xf77c5ab2, 0x5615233e, 0x5b53cd5e, 0x276f09b3, 0x2f18b5d2, 0x6d89fb74, 0x2c5186a7, 0x24c5c432, 0x20c8c189, 0xa107418e, 0xec7ff615, 
    0xf85efbc7, 0x2a3ec5d7, 0x89aff0b2, 0x8e59cf12, 0xd4656448, 0x3f570c19, 0x8a016e22, 0x759cadfc, 0xdaf99adb, 0xf179f6db, 0xe54dbb8c, 0xc498b6ad, 
    0xbbab00ff, 0xd5c71bb8, 0x8d1f7153, 0x38fb137d, 0xbef7ce7e, 0xf1a2d606, 0xb435ad4e, 0x0b9661ee, 0x66a4ed78, 0x38039b25, 0xb8c31f64, 0x306baf75, 
    0x6ad11d9e, 0x6f4b97f7, 0x2edc7272, 0x7211eb2b, 0x7deb508b, 0x5bab8f15, 0xfcdaf7c4, 0x056867c9, 0x65f79b88, 0xf1fcdcc1, 0xcde1b7d7, 0x687c5b7e, 
    0xe3cb92b3, 0x99628d27, 0xb91eaf8c, 0x9de7ac7a, 0x4f7027cc, 0x54fab53e, 0x336d49b1, 0xc0cac83a, 0x8d6d04e5, 0x5f9fd4a3, 0x7badb9c6, 0x9fc347e0, 
    0x7f5db18a, 0x736151c2, 0xde19a416, 0xd221ed0b, 0x928d4c29, 0xdf4152c6, 0x417210f3, 0xe0e435e7, 0x7592b09c, 0xadd5ad6a, 0xcb1cfad4, 0x25451c0f, 
    0xeb723a0a, 0xcc677eea, 0x0e89e8c6, 0xaf018e71, 0xfe9dfd48, 0x1e7cde2f, 0xa996edf1, 0x88963c1b, 0x6e7bcf7e, 0x66fbfa0f, 0x3aeac3fb, 0xee15758f, 
    0x13fcc79a, 0x5af3c5c7, 0x6de1734f, 0x61d6474b, 0x66b6928c, 0x1debd6f5, 0x8bc24370, 0x95afa19f, 0xdbe14d3c, 0x8e7807ef, 0xd64a0d7b, 0x69db2b4b, 
    0xdee6da5a, 0x81d12155, 0x1a7b04c1, 0x183aa7f6, 0xef9d4ac8, 0xf9d475dd, 0x69b80a55, 0x7e749fdd, 0xb2029ed1, 0x6199a6f1, 0x742e8de2, 0x415bca9a, 
    0x03d4a53d, 0x039bf2e6, 0x6285eb19, 0x1d387abc, 0xc2cfbc56, 0xf1bd2cde, 0x4ad3853f, 0x3aed1b69, 0x944dc32c, 0x8b67daa8, 0xf0c74204, 0x00d70746, 
    0xfbbb35f7, 0x8b41fc2e, 0xfc07dfc5, 0xd93be051, 0x2a1df5d5, 0x1f2b3519, 0xb5208cb4, 0xb3a14ee0, 0xf121a99c, 0x9a63018e, 0xfc05dff1, 0xfff0b556, 
    0x129fc500, 0x031b5af8, 0xfa9dba72, 0xc7f1c6db, 0x0b9945ba, 0xc03b6404, 0xc8134bd8, 0x5f81733c, 0x0e530521, 0xf25a4ae5, 0x9af6c0bf, 0xede28d53, 
    0x6d297dcc, 0x927839fb, 0xd229daee, 0xa0923d3b, 0x70069971, 0x4f2a7d46, 0x13af66f8, 0x3f3bcf7f, 0xc23ff8fb, 0xbff824b9, 0x635138e3, 0x51e56e4d, 
    0x4750d506, 0xffa57600, 0xe3c78500, 0xdc0efa5f, 0xbdba62fe, 0xc0bffbb4, 0xff74f6e4, 0xfff39700, 0xbfc43300, 0xff81cf6a, 0x32fe1300, 0xcf6278dc, 
    0x9b1b3ec2, 0x212cd354, 0xf2127073, 0xb6dc8208, 0x22afd206, 0x72545592, 0xcf633e06, 0x1ffbf15a, 0xedd726f8, 0xe483a81f, 0xe094367c, 0xfaeaf303, 
    0x57e87f7a, 0x115bbf02, 0xf10ce13f, 0xa6adde5d, 0xb7e95379, 0xaff00c5b, 0x720e1922, 0xe7e0847e, 0xef758adc, 0x4d136fc4, 0xdeb495a9, 0x631027a3, 
    0xfed8f120, 0x5778bb66, 0xcb88a72e, 0xeda287e3, 0xdfbd772a, 0xb776da76, 0x343af353, 0x3a58c227, 0xbcd13a58, 0x5a569213, 0xddea79bf, 0x6f7e77ed, 
    0xe20bf999, 0x9727f82f, 0x38e103ed, 0xc05b5d56, 0x48ac664b, 0x737aeb00, 0x163de31c, 0x5b959ee0, 0x37b23fc1, 0xc61f1dc6, 0x7ca4161a, 0x6747f028, 
    0x4ec3057f, 0xf2a98dba, 0x5bac48c2, 0x19e34989, 0xbf48bfe2, 0x72893f68, 0xadc41378, 0xc75cac6d, 0x5b9678ad, 0x64ca3471, 0x479eddfd, 0x5607acca, 
    0xdd8e76e8, 0xf8e2c1eb, 0xee78e2f9, 0xebf568d6, 0x32987f9b, 0x41a030a4, 0x3f0840cf, 0xa68ebece, 0x3c4e051f, 0xbaa4ca89, 0xf2a3b4b8, 0x7bcf366d, 
    0xd21af30e, 0x28255f55, 0x93bb5274, 0x633569f3, 0x9a22fcd9, 0x6989e6ed, 0x8d24892f, 0xb1cc3875, 0x6c3b6c94, 0x2e4b0ac0, 0xb5dfef41, 0x0edfc63b, 
    0x82d8f1e0, 0xb726d2d2, 0x6f8ea5f2, 0x420295dd, 0x483082a0, 0xca1f77c6, 0xf81c7cad, 0x537ca5e1, 0xe7f0a2d4, 0xdfd6d28b, 0x5d3eb853, 0x826cbb96, 
    0x243bf326, 0x7d109cc9, 0x1bea2b46, 0x1fde873f, 0x8300fff0, 0x446f2def, 0xdbca7c4b, 0x0593a56e, 0x71bb8d9f, 0xc1b57cd0, 0x79f2cb87, 0x45fb482e, 
    0xc51bfe34, 0xbb57fdda, 0xb9713baa, 0xaf467ba6, 0x70d2583d, 0x4a2bb569, 0x2d3eddce, 0x8ebfcfcf, 0x3e0800ff, 0xeaa2f821, 0xb4d14dcb, 0x854b9306, 
    0xeae23c03, 0x9ee3fc08, 0xe3c11906, 0x49304e92, 0x675de918, 0x55f0f1ec, 0x77e81bbe, 0x00b7c65a, 0xc93df1b5, 0xd648de96, 0xb71d7364, 0x849242c8, 
    0xdd305a8e, 0x78b5d77b, 0xd5f04782, 0x4892d4b5, 0x48389826, 0x67705b55, 0xab7d816e, 0x1ab75817, 0x2560874f, 0x790cdcc2, 0x2739e3d3, 0x8fcc8f24, 
    0x561cbdca, 0xe1950d0f, 0xde363895, 0x00ffebad, 0x31978c00, 0xc7d8e6c5, 0x608c7156, 0xfb8e96ac, 0xa9eff47a, 0xc9e1c5c8, 0x635deeaf, 0x18b7248f, 
    0xb59ee4e4, 0x9765baeb, 0x83606dd8, 0x1346d18d, 0xe8008a8e, 0x1b6bbd3e, 0x696abac2, 0x133b2bd6, 0xdbfcf224, 0xa507a8db, 0xd8303174, 0xbda7af5f, 
    0x2b08f57c, 0xe0df3da9, 0xd436937e, 0x05db0d59, 0x3a850000, 0xc7c166b8, 0x38ca3ead, 0x8ca78d60, 0xa4ea38a9, 0x15577b1c, 0xd427880f, 0x9c2577bc, 
    0xd696a452, 0xbad1caca, 0x1137c6f3, 0x9a6343ea, 0x17e09eea, 0x982fe431, 0x23f6c8b8, 0x326a6bfc, 0x4bf32286, 0x72dcd766, 0x230d4ac9, 0x1f123ed5, 
    0x51f3fe2a, 0x5bb07dba, 0xa94f46c2, 0x8500ff3c, 0x00ff6f7c, 0x55f83105, 0x9f78a76d, 0x9deef147, 0xeafa1618, 0x8c762e18, 0x36203e0f, 0x3109fcbf, 
    0x1a7c00ff, 0x91437bfa, 0xad6deeae, 0x0b6fe37c, 0xf01c32b0, 0xf0277510, 0xcfdb7fac, 0x9ff1b642, 0x5d9b4bc0, 0xcec5453d, 0x796b7395, 0xc3c9c50a, 
    0xf1b7933f, 0x2ef30a12, 0x2b6363e8, 0x877ef4e8, 0x94933e06, 0xafad96d4, 0x09fe4b92, 0x3ffbc9f9, 0x353c99f8, 0x9a426ff1, 0xd38d4572, 0xa77661c9, 
    0x8dced080, 0x3ef8830b, 0x1bfb0a7f, 0x3e075fc2, 0xda785b1b, 0xa141166f, 0x32646f19, 0x3145de2a, 0x40600049, 0x40ae9c2b, 0x061d6720, 0xf8215f33, 
    0xa68dc277, 0x74d0757c, 0xaeb5f233, 0xcd046da3, 0xcc57c8e8, 0x1f43e827, 0xb5e4bec2, 0xe37eb06f, 0xe58f7570, 0x74c0ec46, 0x7471bb22, 0xfacce7a0, 
    0xe4a2e7c4, 0xd8d165a3, 0xe15f4df2, 0x6fd5b431, 0x78778260, 0x36d29d22, 0xa1e2ce78, 0xbee30488, 0x2afca72a, 0xa9e7bfe9, 0x6dbf00ff, 0x785b4c5f, 
    0xa2ed28b6, 0xaaa41453, 0x9e839201, 0xfc27b53e, 0x00ff1026, 0xef3f19cf, 0xdb07afd8, 0xb4fad423, 0xe99400ff, 0xa36a317c, 0xad79bd4e, 0x662e8d22, 
    0x1c323c30, 0x15a18700, 0x833ed9d0, 0x2f3efde1, 0x1d45dcb6, 0x9ec0b095, 0x7132f743, 0x579cfac9, 0x559bf88f, 0xa3233cd6, 0xcc35614d, 0x87d1e8d7, 
    0xca89bfb5, 0x9b65b7b2, 0x57a30f1d, 0x00ffea93, 0x371d351a, 0xbbb57846, 0x3af31695, 0x0c46fba0, 0x92241967, 0xe707f27a, 0x63c50a5e, 0xa4e03ba9, 
    0xafbe7b93, 0xd1fc9b5e, 0xa9e199c1, 0x5b619cd5, 0x7ff8ede1, 0x78261fc3, 0xc75ac583, 0x9a89bfc4, 0x37a9f3dc, 0xccc38dba, 0x5421c9a1, 0x19fd55b8, 
    0x46031f6a, 0x0af12ade, 0xe83f7769, 0x071161be, 0xb81c596e, 0x8cdc815c, 0xbf5deff4, 0xfcec88c1, 0x5d33f167, 0xeb34d2bd, 0xdaa4d475, 0xc0aea834, 
    0xe0fd62f2, 0xc333c60a, 0xd30ec1fc, 0xd73b32c6, 0x7e0c1fd8, 0x7d727801, 0x3cd64603, 0x363de159, 0x9071c6c7, 0x0fa32fd7, 0xb0220322, 0x6014e12a, 
    0x74244012, 0xdf58bdaf, 0x27299564, 0x0a2c117b, 0xa32396aa, 0x3ff0817f, 0xe32bbc8c, 0x223e843f, 0x39abb568, 0x1e62ae6c, 0x47ecbd75, 0x8c8c3274, 
    0x0fea7115, 0x5ffad54e, 0x97443ff0, 0x9fc34fe2, 0xf831eb0f, 0x69db4b92, 0x1cc914ad, 0x404930a0, 0xf07a2ec3, 0xdfe7eb7d, 0xb4083f8c, 0x1769016f, 
    0xb58adfda, 0x36c44bed, 0xb4f2722b, 0x3ccdccfa, 0x6014f176, 0x67a3f196, 0x1730b604, 0x1fd7b481, 0xd1fe14fb, 0xee80c75a, 0xc8dbf4af, 0x0c7f75af, 
    0x5ff3e95b, 0x0c6e9fbe, 0x99275a92, 0xf7aa3208, 0x8eca1955, 0xae38667e, 0xe59c8875, 0x9c15640c, 0xb5fef437, 0x4bb8b1b0, 0xe682a761, 0xbead67bc, 
    0xbff6855f, 0xc44ff491, 0xf858009d, 0xf0b7acac, 0x06723a34, 0xbfab1358, 0x7085df42, 0x06b3e6da, 0x0a146bbb, 0xd0be98b2, 0x3cb193b8, 0x7c51eb8f, 
    0xf892f141, 0xa80fc4cb, 0xee2617e9, 0xdb43f9ca, 0x48485b5c, 0xefb00f95, 0x53350fea, 0x7cd35652, 0x068a113b, 0x73d7296f, 0xf05b3280, 0xf19cd7fa, 
    0xa973bc98, 0x96b4bc5a, 0x3ceecbca, 0xb00ca3ec, 0x0a4aa7b3, 0xa3677ec9, 0x0a06ddda, 0x8a2ae080, 0x22a42eb7, 0x855c8889, 0x2baec019, 0x4d14f14d, 
    0xcadb9518, 0xec2a0366, 0xaad81e01, 0xad8fef9a, 0x6391202c, 0x59ee89b9, 0x3ce79170, 0xbddae79e, 0x7553f2eb, 0xced8c71e, 0x3e9bf2cd, 0x9eb4b91c, 
    0x21fdfae6, 0x4de29e55, 0x730326cd, 0x078e03dc, 0xc025bf4a, 0x2cb1a53a, 0x1dc39242, 0x57fa67ba, 0x659de11b, 0x8c62d220, 0x3ba3bc3a, 0x730e9082, 
    0xe36afcdf, 0xf53d326b, 0x99e5e0ba, 0x073892b6, 0x7895fe69, 0x8b85cb65, 0x90f7ef7b, 0x6cba7aa3, 0x7c97667a, 0x0eced2ec, 0x47ed7e37, 0xedf37fb7, 
    0xa37c8f5b, 0x96221ec3, 0x2bfa5e78, 0x865b367d, 0x31967185, 0x4e8f41e2, 0x61115754, 0x158d237c, 0x1ec7e55b, 0xeba0bff5, 0x6cde5ab1, 0x1b5b02ba, 
    0x85b96080, 0x3791ecfe, 0x13fa080c, 0x95825e51, 0xe7a86517, 0x3bc62b37, 0x990ffdf4, 0x85bf663f, 0xf12ede37, 0xdde3ab8e, 0xb7a6d956, 0xb4599c55, 
    0xb9693fa3, 0x7a9cc170, 0xebf35880, 0xfff14a8f, 0x93f81f00, 0x8e7f1ac4, 0x45a657fc, 0x9616eaac, 0x6897eaf1, 0x75b9636d, 0x30cec444, 0xd8033817, 
    0x8d56e957, 0x5b58a169, 0x69a065c9, 0xa475da96, 0x04c3f12c, 0x1b44b04a, 0x67bc80fd, 0x7a9f7bbe, 0xfd5913f9, 0x7f0db597, 0x6f8aafe2, 0x5ad869f5, 
    0x5c336a5d, 0xe99a16c7, 0x4ab2ae24, 0xa15b82ed, 0x7af00019, 0x5c7c05d7, 0xa873546a, 0x744bb79a, 0xeb61383c, 0xe787522b, 0x058ff6d4, 0x1e6a936b, 
    0xa76ed00d, 0x9ee78db3, 0x1b59dec2, 0x35c6f272, 0x35f5f524, 0x7fa2fdb5, 0xfb3fc6e7, 0xb9c67fed, 0xb3820ffb, 0x5bdbd858, 0xe18a3f41, 0x38d61886, 
    0xe54717e3, 0x8e030050, 0xffa70238, 0x773f8500, 0x7e3f00ff, 0xc000ff2b, 0xdb0bafa6, 0xe3feec50, 0x7f953de8, 0x5f795fe6, 0x629cf141, 0xefbf583d, 
    0xa608bd27, 0x3ae5d439, 0xc03ded0c, 0xf5c62bce, 0x197e83df, 0x59e2a1f8, 0x2e898bf4, 0x77a2eead, 0x36d2bf95, 0x808ea3f9, 0xaa6be8f1, 0xf84f35d1, 
    0x6b5b1059, 0x94cf4e50, 0x8fe59df2, 0xe06565cb, 0xbdcf3da9, 0xbc8e5f79, 0x4be0716d, 0x525b8d5b, 0x44ae78b1, 0x76a045de, 0xf3934fcb, 0x8f2ad037, 
    0x1856e8fb, 0x4d69356a, 0x00ff0d3a, 0xb1cc31c1, 0xd449591f, 0xf65b5282, 0x391fbbb5, 0xbebc5aeb, 0xb76cf11f, 0xdae32d5a, 0x79dea6cf, 0x71c29396, 
    0x5f81adfe, 0x7d0d2aaf, 0xfe37fbf9, 0x18bf36d7, 0x35d3676d, 0x375d124d, 0xd6edd35c, 0x8e6d895b, 0x0b1926e8, 0x24a97bb9, 0x5febe7f4, 0xf63b7830, 
    0xf0548f5f, 0xebaf9976, 0x73cc85fa, 0x8acc23ea, 0xda40d9c6, 0x9158c29f, 0x7a3c87d5, 0x045fd3d7, 0x5f68107e, 0xb836340e, 0x2b1a2dd3, 0x3cdbe4eb, 
    0x6466b1d2, 0xf6d5beec, 0x704ab5b8, 0x9a5770f6, 0x8d67feeb, 0xf688a181, 0xb5abd29e, 0x7c5dab37, 0x2ff1d8ad, 0xdac7f7db, 0x8de2abe6, 0xb5944017, 
    0xba4585a7, 0x382aa45e, 0x6e585292, 0x0348e876, 0xbc26db81, 0xc47fe11b, 0x47e153ed, 0x13af748f, 0xd6003269, 0x5868cac7, 0xb8852665, 0x0c77d868, 
    0x1ce9d73a, 0xad932eba, 0x3a6bdbab, 0xa6b58e35, 0x5ef1dab0, 0x0c7f1dc4, 0xafb80ff2, 0xbfa4fd1a, 0x410a9f63, 0xf1545bf0, 0xcb7481e7, 0xc6fa32ad, 
    0x4ee39645, 0x1b904cf3, 0x9391c875, 0x54466039, 0x4a13fef5, 0xe9745a95, 0xa3553d2c, 0x331bfdd2, 0x1ae5e1c6, 0x690911af, 0xc6c8bb7f, 0x579a94f1, 
    0xf8499f82, 0xcbf8e081, 0xc55e0f78, 0x378acdcd, 0x1c2b6fcb, 0x8cfb5348, 0x955e3909, 0xffd0fec1, 0xaf751500, 0x6d0fbf86, 0x95fd4bbc, 0xeb1eddf6, 
    0xe3084b55, 0x991f0617, 0x4f4092a1, 0x50f9d9ca, 0xdcfe8ef1, 0x7506bff3, 0x7fc657dd, 0xf063fc08, 0xb863cdde, 0xa52e1cd4, 0x85cd2ca5, 0x4842428e, 
    0xdb1d7b32, 0x7fe40abf, 0xf8076f6c, 0x005fc2cf, 0x8c0f25bc, 0xfbdd456e, 0x59e6566a, 0x000de42d, 0x05e0227f, 0x5570e318, 0x2f655eeb, 0xecab8669, 
    0xf2dfb3ef, 0xb4d699f9, 0xc7aef3e8, 0x79fb652f, 0x411065cd, 0x0e1c78e0, 0xfe0050e7, 0xff7bd590, 0xb595db00, 0x7fa6880b, 0x844c7906, 0x816add1f, 
    0xffc8c149, 0x2b1d9600, 0xdc2b8ae5, 0xedebca58, 0xa1ec3f1f, 0x3fd2fad8, 0x126fd7db, 0x5fcd1b78, 0xf4075f7d, 0xfd4d9382, 0x35d321bc, 0xf023d497, 
    0xd2a64b0e, 0x783d5987, 0xa0473ee7, 0x45997cc5, 0xa8d6c513, 0x927f37ad, 0x5a2300ff, 0x9ecbc337, 0xb3fa6993, 0x00fff8ed, 0x3506a6e0, 0xce15fe03, 
    0xb9fdef48, 0x0100ffdb, 0x00ff41aa, 0x7f603505, 0xe9719ce4, 0x00ffbbfd, 0x26f1d5dc, 0xea5ca79b, 0x85ad8dfa, 0xdd3d4d9c, 0x3104a9d4, 0x21765727, 
    0x24b94755, 0xda2ff60a, 0x97cee01b, 0xf04cdff0, 0xf9e1a996, 0x7b97ee85, 0xae6e6d6a, 0x249d91a3, 0x47e288bc, 0xce0df404, 0x35e4e300, 0x8a181ab5, 
    0x87572ab4, 0xe65f0bc3, 0x0f00ffed, 0xc413c7d8, 0xa38b0f0b, 0x7e3fab83, 0x5674f9ad, 0xedf555f7, 0xb3777b75, 0xf85f833e, 0xb1cc2c2a, 0x0f00ffc2, 
    0xf7315b67, 0x5bc483e3, 0x6fa08719, 0x597e9cb2, 0xff47d3ae, 0xd8c08200, 0x5b4b7b78, 0x9ce03f5d, 0x1a502849, 0xbec4e3e6, 0xf8c3c86b, 0x49409b98, 
    0x9e5f71fc, 0x2cd51c3e, 0x2e4d7db4, 0xd71a0d35, 0xd7c6b55d, 0x6896bbb4, 0x908c8cd4, 0x6c303ad1, 0x1c490602, 0x777a0df2, 0x0a2f5bc7, 0xc2cb7678, 
    0xf01fdeb6, 0x3693a685, 0xebd9a0b1, 0xcb9bdd13, 0xe689a4a9, 0x1ec631c9, 0x5c40bb52, 0x9e939465, 0x3c73cdd8, 0x6774710c, 0xed5e735e, 0xaeaff7b4, 
    0x247e2bdb, 0xf4ba33e2, 0x92b054b1, 0xec3d9f84, 0xb62a27d7, 0xf04fbbf7, 0xfe27d867, 0x12ae390b, 0x01e0f071, 0xc7d135e8, 0x7fd24afe, 0xcff5e6c3, 
    0xff2327fa, 0xffab0700, 0xf9b5c800, 0x7f7945bd, 0x88fca154, 0x5bb97ef5, 0xf997fbba, 0x067faa1f, 0xc0e35e7c, 0x579ced9a, 0x6d63712d, 0x64b76830, 
    0xfc75b332, 0xc7f88feb, 0x07f17565, 0x2c6dd154, 0xcaa36ca1, 0x6310dc8b, 0x1fe74f0c, 0xec1f5deb, 0xc4dbf0e3, 0xad99ae5a, 0x759716c7, 0x15c96a71, 
    0x232ebac2, 0x7a06327e, 0xa5d55e13, 0xf4d3387c, 0xe6966039, 0x8dbc2518, 0x6328434e, 0x3fcf1113, 0x4f292a8e, 0xffee1593, 0xed1e5a00, 0x43af710a, 
    0xca52df91, 0xbb36c558, 0x63169f0e, 0x8fe2d3b1, 0xb1714064, 0xe867a070, 0xbabfac2b, 0xee1e4d6b, 0x91cc24e2, 0x0788ec42, 0x2b0692a2, 0x43105f80, 
    0xb739e265, 0x1acdb4c9, 0x31cee9f3, 0x3bde6b53, 0xd01685b3, 0xc724135d, 0x3062d466, 0xb74fc608, 0x650ed535, 0xfff9cd19, 0x693dc000, 0xea44abf2, 
    0xc6e99b74, 0xbcf6639d, 0x79d4a98b, 0xce93639c, 0x6b34d22b, 0x0f6f35d8, 0xfc45faea, 0xf5ad25cd, 0xda11d68c, 0xe0f3bb8f, 0x4200ff67, 0xc49311af, 
    0xd1f6bcd0, 0x789bbba4, 0xd273f309, 0x5f1f8dbb, 0xc95b5316, 0x0cb6fcf7, 0x6b7d3d41, 0x481df47a, 0x46f6347b, 0x1a94911c, 0xbff8dc92, 0xe28437e1, 
    0x87f15ff8, 0x555a5d58, 0xb242d386, 0x41707d0b, 0xe1ae1c29, 0xc83db642, 0x50f0dfaa, 0x5ee91a4f, 0xa203f82d, 0x0bee2a1d, 0x2cf163e8, 0xcf11cd20, 
    0x23e7d622, 0xabafc8e9, 0x127c263e, 0x187eeed1, 0x5df8e0f8, 0x45bcb53f, 0xe62eccae, 0x2560baba, 0xf207e673, 0xa8761ec3, 0x7ca50f1c, 0xfc5dfb37, 
    0xc317f120, 0x41e7d93f, 0x60215797, 0x4704f1b8, 0x2c6c55ca, 0x7a706d8d, 0x7b0a0f9e, 0xd15a0d57, 0xdb3a52a9, 0x786c9d6e, 0xd228a7b2, 0x3fd9719a, 
    0x8aa6f8cc, 0xc0b3ae28, 0x2da9280a, 0x62ee59a2, 0x744be68d, 0x4ad30a77, 0x9e60ac18, 0xe004ed58, 0xe813e075, 0x37510b0d, 0x3ed37365, 0x1077e80a, 
    0xb8e2bba6, 0xb8b7b3a5, 0xbecdadd2, 0xb0f7d79a, 0x4c5f23da, 0x330fa10a, 0xf334e6a2, 0x9473c624, 0x3ed62b5e, 0xff4a781f, 0xb3bfc600, 0x073c8bcf, 
    0x79973e7f, 0x756e69aa, 0x752c1d8d, 0xe3d75b7b, 0x322cd425, 0xc39d51b9, 0xeb990124, 0x7f247eca, 0xe0612dc2, 0xfe680f4f, 0xa675f116, 0xe9ae1daf, 
    0xb3741bf5, 0xe696b7b9, 0xeffdc9ed, 0x445610cf, 0x60ee224c, 0xf3812dc3, 0xdbec771a, 0x012f2be3, 0xd6b74a7c, 0x0d7a3d35, 0x9e484a17, 0x86e7c82b, 
    0x13d57e79, 0x62610c02, 0x6b07c946, 0x281fd87c, 0xbbbed2eb, 0x178e5607, 0x510b4f11, 0xc9382dde, 0xdf9747a9, 0x69dabe5a, 0xf3a3ecd7, 0x8a0fd37c, 
    0xb37530cc, 0xc6a9090a, 0xa78b504a, 0x3fdd7f3e, 0xf7a32575, 0xf4b2efbd, 0x579e5e9b, 0x42fbb15e, 0xf8ad00ff, 0x6200ff73, 0x00ff9556, 0xf1563da0, 
    0x073c86f7, 0x89fbe37f, 0x7de3357c, 0x97c3df36, 0xede3bcb2, 0xd6a81716, 0x7b4c9060, 0x72b80316, 0xe0b2e376, 0x2f9de0ed, 0x14beb78e, 0x859715f1, 
    0x170f74ae, 0x68d3ead9, 0x8f9e15fa, 0xbab2a135, 0x1c5e4986, 0x88172283, 0x38bbd32e, 0xbe630466, 0x3d54ce6b, 0x07111f8e, 0xad55bd38, 0xd367eb28, 
    0x586a4f5d, 0xe0c68ac5, 0xd29cc6aa, 0x39bd576a, 0x65a55bae, 0xef64cb27, 0x3cf0afa6, 0xaf288a7a, 0xf7f3fa08, 0xed2de06f, 0xf1171ec4, 0x4bdc115c, 
    0x196c291c, 0x54215763, 0xab1da8e3, 0x19698e9d, 0x9ec42e09, 0xf0b735b9, 0xef45fe2b, 0xa2d77f17, 0xc14a00ff, 0x3657ee8b, 0x3eb5f80b, 0xf5f7915f, 
    0x57bd94b4, 0x88c778e4, 0xee7890a6, 0x8f8d79e4, 0x6a9f8c93, 0xb5c5a26e, 0x2749726b, 0x14f59303, 0x00ff239e, 0xe9e7f291, 0x50a3f41f, 0xa49000ff, 
    0x2bea4f1f, 0xfb8df0ea, 0x63eb2f58, 0x7bc1dcf3, 0xbf5b5fd5, 0xf434e9cc, 0x25dded5f, 0x37df8db6, 0x32bde638, 0x196d2b56, 0x74b88304, 0x699a57fa, 
    0x1bf200ff, 0x55e03fd2, 0x00ff53e9, 0xef7facc7, 0x8c51e50f, 0x64ef31fe, 0x9b2ff8ee, 0xa3875f3a, 0xd3363eed, 0xb0f79b21, 0xfc96b7e0, 0x6b707dae, 
    0x2bf8afe7, 0xf0efdcc5, 0x69b7459f, 0xf1756ba4, 0x8b58b11d, 0x9afd809d, 0x950e64ec, 0x7fc337f4, 0xcf741ff9, 0xe77c0df7, 0x760500ff, 0x619200ff, 
    0xc5d87fa4, 0xa400ff6f, 0xf8f175d7, 0xe8e5f78f, 0x19fe6277, 0x3ff5877f, 0x8aa2a82a, 0x0a964ff4, 0x0a80a228, 0x0a80a228, 0x0a80a228, 0x3f80a228, 
    0x0000d9ff, 
};
};
} //namespace BluePrint

BP_NODE_DYNAMIC_WITH_NAME(UpScaleAnimeFasterNode, "Anime Upscale Faster", "CodeWin", NODE_VERSION, VERSION_BLUEPRINT_API, BluePrint::NodeType::External, BluePrint::NodeStyle::Default, "AIFilter#Video#Upscaling")
